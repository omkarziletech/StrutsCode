/*
 * Generated by MyEclipse Struts
 * Template path: templates/java/JavaClass.vtl
 */
package com.gp.cvst.logisoft.struts.action;

import com.gp.cong.common.CommonConstants;
import com.gp.cong.common.CommonUtils;
import java.lang.reflect.InvocationTargetException;
import java.text.DecimalFormat;
import java.text.NumberFormat;
import java.util.ArrayList;
import java.util.Collections;
import java.util.HashMap;
import java.util.HashSet;
import java.util.Iterator;
import java.util.List;
import java.util.Set;

import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;
import javax.servlet.http.HttpSession;

import org.apache.struts.action.Action;
import org.apache.struts.action.ActionForm;
import org.apache.struts.action.ActionForward;
import org.apache.struts.action.ActionMapping;

import com.gp.cong.logisoft.domain.GenericCode;
import com.gp.cong.logisoft.hibernate.dao.GenericCodeDAO;
import com.gp.cvst.logisoft.beans.BatchesBean;
import com.gp.cvst.logisoft.domain.Batch;
import com.gp.cvst.logisoft.domain.FiscalPeriod;
import com.gp.cvst.logisoft.domain.JournalEntry;
import com.gp.cvst.logisoft.domain.LineItem;
import com.gp.cvst.logisoft.hibernate.dao.BatchDAO;
import com.gp.cvst.logisoft.hibernate.dao.FiscalPeriodDAO;
import com.gp.cvst.logisoft.hibernate.dao.JournalEntryDAO;
import com.gp.cvst.logisoft.struts.form.CopyBatchForm;
import com.gp.cvst.logisoft.util.DBUtil;
import java.util.Date;
import org.apache.commons.beanutils.BeanUtils;
import org.apache.commons.lang3.StringUtils;

/** 
 * MyEclipse Struts
 * Creation date: 04-01-2008
 * 
 * XDoclet definition:
 * @struts.action path="/copyBatch" name="copyBatchForm" input="/jsps/Accounting/CopyBatch.jsp" scope="request" validate="true"
 */
public class CopyBatchAction extends Action {
//    /*
//     * Generated Methods
//     */
//
//    /**
//     * Method execute
//     * @param mapping
//     * @param form
//     * @param request
//     * @param response
//     * @return ActionForward
//     */
//    public ActionForward execute(ActionMapping mapping, ActionForm form,
//            HttpServletRequest request, HttpServletResponse response) throws IllegalAccessException, InvocationTargetException {
//        CopyBatchForm copyBatchForm = (CopyBatchForm) form;
//        request.setAttribute("fromAction", request.getParameter("fromAction"));
//        request.setAttribute("batchId", request.getParameter("batchId"));
//        HttpSession session = ((HttpServletRequest) request).getSession();
//        String buttonValue = copyBatchForm.getButtonValue();
//        NumberFormat numformat = new DecimalFormat("##,###,##0.00");
//        String copy = copyBatchForm.getCopy();
//        String batchno = copyBatchForm.getBatchno();
//        BatchesBean batchesBean = new BatchesBean();
//        batchesBean.setCopy(copy);
//        DBUtil dbUtil = new DBUtil();
//        FiscalPeriodDAO fiscalPeriodDAO = new FiscalPeriodDAO();
//        String desc = copyBatchForm.getDesc();
//        BatchDAO batchDAO = new BatchDAO();
//        String jeid = "";
//        if (session.getAttribute("journalId") != null) {
//            jeid = (String) session.getAttribute("journalId");
//        }
//        List journalList = new ArrayList();
//        if (session.getAttribute("journalEntryList") != null) {
//            journalList = (List) session.getAttribute("journalEntryList");
//            for (int i = 0; i < journalList.size(); i++) {
//                JournalEntry j1 = (JournalEntry) journalList.get(i);
//                if (j1.getJournalEntryId().equals(jeid)) {
//                    session.setAttribute("journalEntry", j1);
//                    break;
//                }
//            }
//        }
//        if (request.getParameter("index") != null) {
//            String fromAction = request.getParameter("fromAction");
//            int index = Integer.parseInt(request.getParameter("index"));
//            if (fromAction.trim().equals("Copy")) {
//                List batchList1 = (List) session.getAttribute("copyList");
//                Batch bBean = new Batch();
//                Batch b1 = new Batch();
//                b1 = (Batch) batchList1.get(index);
//                List batchList = new ArrayList();
//                Integer batchId = 0;
//                HashMap hashMap = new HashMap();
//                List jLIst = new ArrayList();
//                HashMap lMap = new HashMap();
//                List lLIst = new ArrayList();
//                if (session.getAttribute("batchList") != null) {
//                    batchList = (List) session.getAttribute("batchList");
//                    for (int i = 0; i < batchList.size(); i++) {
//                        bBean = (Batch) batchList.get(i);
//                        if (bBean.getBatchId().equals(b1.getBatchId())) {
//                            break;
//                        }
//                    }
//                }
//                List lineItemList = new ArrayList();
//                if (bBean != null) {
//
//                    List journalEntryList = new ArrayList();
//                    if (bBean.getJournalEntrySet() != null) {
//                        Iterator iter = bBean.getJournalEntrySet().iterator();
//                        while (iter.hasNext()) {
//                            JournalEntry journal = (JournalEntry) iter.next();
//                            hashMap.put(journal.getJournalEntryId(), journal);
//                            jLIst.add(journal.getJournalEntryId());
//                        }
//                        Collections.sort(jLIst);
//                        for (int i = 0; i < jLIst.size(); i++) {
//                            JournalEntry jEntry = (JournalEntry) hashMap.get(jLIst.get(i));
//                            journalEntryList.add(jEntry);
//                        }
//                    }
//                    String journalId = "";
//                    JournalEntry journalEntry = new JournalEntry();
//                    if (journalEntryList.size() == 0) {
//                        journalId = bBean.getBatchId() + "-" + "001";
//                    } else if (journalEntryList != null && journalEntryList.size() > 0) {
//                        JournalEntry j2 = (JournalEntry) journalEntryList.get(journalEntryList.size() - 1);
//                        journalId = dbUtil.journalid(j2.getJournalEntryId());
//                        if (journalId.endsWith("R")) {
//                            journalId = journalId.substring(0, journalId.length() - 1);
//                        }
//                        int j1 = Integer.parseInt(journalId);
//                        j1 = j1 + 1;
//
//                        //journalId1=batchId
//                        if (j1 >= 0 && j1 < 10) {
//                            journalId = bBean.getBatchId() + "-" + "00" + j1;
//                        } else if (j1 >= 10 && j1 < 100) {
//                            journalId = bBean.getBatchId() + "-" + "0" + j1;
//                        } else if (j1 >= 100 && j1 < 1000) {
//                            journalId = bBean.getBatchId() + "-" + j1;
//                        }
//                    }
//                    GenericCodeDAO genericCodeDAO = new GenericCodeDAO();
//                    journalEntry.setJournalEntryId(journalId);
//                    if (session.getAttribute("journalEntry") != null) {
//                        JournalEntry journalOld = (JournalEntry) session.getAttribute("journalEntry");
//                        if (journalOld.getJournalEntryDesc() != null) {
//                            journalEntry.setJournalEntryDesc(journalOld.getJournalEntryDesc());
//                        }
//                        List fiscal = fiscalPeriodDAO.getPeriodList3(journalOld.getPeriod());
//                        FiscalPeriod fis = new FiscalPeriod();
//                        if (fiscal != null && fiscal.size() > 0) {
//                            fis = (FiscalPeriod) fiscal.get(0);
//                            int id = fis.getId() + 1;
//                            FiscalPeriod f1 = (FiscalPeriod) fiscalPeriodDAO.findById(id);
//                            while (f1 != null && !f1.getStatus().equalsIgnoreCase("Open")) {
//                                f1 = (FiscalPeriod) fiscalPeriodDAO.findById(f1.getId() + 1);
//                            }
//                            if (f1 != null) {
//                                journalEntry.setPeriod(f1.getPeriodDis());
//                            }
//                        }
//
//                        if (journalOld.getJeDate() != null) {
//                            journalEntry.setJeDate(journalOld.getJeDate());
//                        }
//                        if (journalOld.getSourceCode() != null) {
//                            GenericCode gen = genericCodeDAO.findById(journalOld.getSourceCode().getId());
//                            journalEntry.setSourceCode(gen);
//                        }
//                        if (journalOld.getCredit() != null) {
//                            journalEntry.setCredit(journalOld.getCredit());
//                        } else {
//                            journalEntry.setCredit(0.00);
//                        }
//                        if (journalOld.getDebit() != null) {
//                            journalEntry.setDebit(journalOld.getDebit());
//                        } else {
//                            journalEntry.setDebit(0.00);
//                        }
//                        journalEntry.setMemo(journalOld.getMemo());
//
//                        List lItemList = new ArrayList();
//                        Set lineSet = new HashSet<LineItem>();
//                        if (journalOld.getLineItemSet() != null) {
//                            Iterator iter1 = journalOld.getLineItemSet().iterator();
//                            while (iter1.hasNext()) {
//                                LineItem l1 = (LineItem) iter1.next();
//                                lMap.put(l1.getLineItemId(), l1);
//                                lLIst.add(l1.getLineItemId());
//                            }
//                            Collections.sort(lLIst);
//                            for (int i = 0; i < lLIst.size(); i++) {
//                                LineItem lEntry = (LineItem) lMap.get(lLIst.get(i));
//                                lItemList.add(lEntry);
//                            }
//                        }
//                        for (int i = 0; i < lItemList.size(); i++) {
//                            LineItem l1 = (LineItem) lItemList.get(i);
//                            LineItem line = new LineItem();
//                            line.setLineItemId(journalEntry.getJournalEntryId() + "-" + dbUtil.lineitemidid1(l1.getLineItemId()));
//                            if (l1.getAccount() != null) {
//                                line.setAccount(l1.getAccount());
//                            }
//                            if (l1.getAccountDesc() != null) {
//                                line.setAccountDesc(l1.getAccountDesc());
//                            }
//                            if (l1.getDebit() != null) {
//                                line.setDebit(l1.getDebit());
//                            } else {
//                                line.setDebit(0.00);
//                            }
//                            if (l1.getCredit() != null) {
//                                line.setCredit(l1.getCredit());
//                            } else {
//                                line.setCredit(0.00);
//                            }
//                            if (l1.getReference() != null) {
//                                line.setReference(l1.getReference());
//                            }
//                            if (l1.getReferenceDesc() != null) {
//                                line.setReferenceDesc(l1.getReferenceDesc());
//                            }
//                            if (l1.getPeriod() != null) {
//                                line.setPeriod(l1.getPeriod());
//                            }
//                            lineItemList.add(line);
//                        }
//                        for (int i = 0; i < lineItemList.size(); i++) {
//                            LineItem l2 = (LineItem) lineItemList.get(i);
//                            lineSet.add(l2);
//                        }
//                        journalEntry.setLineItemSet(lineSet);
//                        journalEntryList.add(journalEntry);
//                        Set jSet = new HashSet<JournalEntry>();
//                        for (int i = 0; i < journalEntryList.size(); i++) {
//                            JournalEntry j2 = (JournalEntry) journalEntryList.get(i);
//                            jSet.add(j2);
//                        }
//                        bBean.setJournalEntrySet(jSet);
//                    }
//                    batchDAO.save(bBean);
//                    session.setAttribute("journalEntry", journalEntry);
//                    session.setAttribute("journalEntryList", journalEntryList);
//                    session.setAttribute("lineItemList", lineItemList);
//                    session.setAttribute("batch", bBean);
//                }
//            } else {
//                String existingBatchNo = request.getParameter("batchNo");
//                Batch existingBatch = new BatchDAO().findById(existingBatchNo);
//                if (null != existingBatch) {
//                    jeid = (String) session.getAttribute("journalId");
//                    if (null != jeid) {
//                        List<String> journaEntryIds = new ArrayList<String>();
//                        for (JournalEntry existingJournalEntry : (Set<JournalEntry>) existingBatch.getJournalEntrySet()) {
//                            journaEntryIds.add(existingJournalEntry.getJournalEntryId());
//                        }
//                        Collections.sort(journaEntryIds);
//                        int size = journaEntryIds.size();
//                        String reverseJournalEntryId = null;
//                        if (size > 0) {
//                            String existingJournalEntryId = journaEntryIds.get(size - 1);
//                            Integer i = Integer.parseInt(existingJournalEntryId.replaceAll(existingBatch.getBatchId() + "-", "").replaceAll("R", ""));
//                            i++;
//                            reverseJournalEntryId = existingBatch.getBatchId() + "-" + StringUtils.leftPad(i.toString(), 3, "00");
//                        } else {
//                            reverseJournalEntryId = existingBatch.getBatchId() + "-001";
//                        }
//                        JournalEntry originalJournalEntry = new JournalEntryDAO().findById(jeid);
//                        if (null != originalJournalEntry) {
//                            originalJournalEntry.setFlag("R");
//                            JournalEntry reverseJournalEntry = new JournalEntry();
//                            reverseJournalEntry.setJournalEntryId(reverseJournalEntryId);
//                            reverseJournalEntry.setJournalEntryDesc(jeid + " Reverse");
//                            reverseJournalEntry.setFlag("R");
//                            reverseJournalEntry.setJeDate(new Date());
//                            FiscalPeriod fiscalPeriod = new FiscalPeriodDAO().getCurrentOpenPeriod();
//                            reverseJournalEntry.setPeriod(fiscalPeriod.getPeriodDis());
//                            reverseJournalEntry.setSubledgerClose(CommonConstants.NO);
//                            if (null != originalJournalEntry.getSourceCode()) {
//                                reverseJournalEntry.setSourceCode(originalJournalEntry.getSourceCode());
//                                reverseJournalEntry.setSourceCodeDesc(originalJournalEntry.getSourceCode().getCodedesc());
//                            }
//                            Set<LineItem> reverseLineItems = new HashSet<LineItem>();
//                            List<LineItem> reverseLineItemList = new ArrayList<LineItem>();
//                            int i = 1;
//                            double jeCredit = 0d;
//                            double jeDebit = 0d;
//                            for (LineItem originalLineItem : (Set<LineItem>) originalJournalEntry.getLineItemSet()) {
//                                LineItem reverseLineItem = new LineItem();
//                                PropertyUtils.copyProperties(reverseLineItem, originalLineItem);
//                                String reverseLineItemId = reverseJournalEntryId + "-" + StringUtils.leftPad("" + i, 3, "00");
//                                reverseLineItem.setLineItemId(reverseLineItemId);
//                                reverseLineItem.setCredit(originalLineItem.getDebit());
//                                reverseLineItem.setDebit(originalLineItem.getCredit());
//                                reverseLineItems.add(reverseLineItem);
//                                reverseLineItemList.add(reverseLineItem);
//                                jeCredit += reverseLineItem.getCredit();
//                                jeDebit += reverseLineItem.getDebit();
//                                session.setAttribute("line", reverseLineItem);
//                                i++;
//                            }
//                            reverseJournalEntry.setLineItemSet(reverseLineItems);
//                            reverseJournalEntry.setCredit(jeCredit);
//                            reverseJournalEntry.setDebit(jeDebit);
//                            existingBatch.getJournalEntrySet().add(reverseJournalEntry);
//                            existingBatch.setTotalCredit(existingBatch.getTotalCredit() + jeCredit);
//                            existingBatch.setTotalDebit(existingBatch.getTotalDebit() + jeCredit);
//                            session.setAttribute("lineItemList", reverseLineItemList);
//                            session.setAttribute("journalEntry", reverseJournalEntry);
//                            session.setAttribute("batch", existingBatch);
//                            session.removeAttribute("journal");
//                            List batchList = new DBUtil().batchList();
//                            batchList.remove(existingBatch);
//                            batchList.add(existingBatch);
//                            session.setAttribute("batchList", batchList);
//                        }
//                    }
//                }
//            }
//            request.setAttribute("buttonValue", "completed");
//        } else {
//            if (buttonValue.equals("search")) {
//                List batchList = batchDAO.findBatchsearch(batchno, desc);
//                session.setAttribute("copyList", batchList);
//                request.setAttribute("buttonValue", "search");
//            } else if (buttonValue.equals("new")) {
//                Integer batchid = 0;
//
//                if (session.getAttribute("batchId") != null) {
//                    String batch = (String) session.getAttribute("batchId");
//                    batchid = Integer.parseInt(batch);
//                }
//                List batchList = new ArrayList();
//                String batchId = "";
//                String bDesc = "";
//                int Bid = 0;
//                if (session.getAttribute("batchList") != null) {
//                    batchList = (List) session.getAttribute("batchList");
//
//                }
//                Batch batch = new Batch();
//                if (batchList.size() == 0) {
//                    batchId = "10000";
//                    Bid = Integer.parseInt(batchId);
//                    batch.setTotalCredit(new Double("0.00"));
//                    batch.setTotalDebit(new Double("0.00"));
//                } else {
//                    Batch btch = (Batch) batchList.get(batchList.size() - 1);
//                    batchId = btch.getBatchId();
//
//                    Bid = Integer.parseInt(batchId);
//
//                    Bid = Bid + 1;
//                    bDesc = btch.getBatchDesc();
//                    batch.setTotalCredit(btch.getTotalCredit());
//                    batch.setTotalDebit(btch.getTotalDebit());
//
//                }
//
//                batch.setBatchId(String.valueOf(Bid));
//                batch.setStatus("open");
//                batch.setType("manual");
//                batch.setBatchDesc(bDesc);
//                List lineItemList = new ArrayList();
//                JournalEntry journalEntry = new JournalEntry();
//                journalEntry.setJournalEntryId(batch.getBatchId() + "-" + "001");
//                if (session.getAttribute("journalEntry") != null) {
//                    JournalEntry journalOld = (JournalEntry) session.getAttribute("journalEntry");
//                    if (journalOld.getJournalEntryDesc() != null) {
//                        journalEntry.setJournalEntryDesc(journalOld.getJournalEntryDesc());
//                    }
//
//                    batch.setTotalCredit(new Double(journalOld.getCredit()));
//                    batch.setTotalDebit(new Double(journalOld.getDebit()));
//                    batch.setSourceLedger(journalOld.getSourceCode());
//
//                    List fiscal = fiscalPeriodDAO.getPeriodList3(journalOld.getPeriod());
//                    FiscalPeriod fis = new FiscalPeriod();
//                    if (fiscal != null && fiscal.size() > 0) {
//                        fis = (FiscalPeriod) fiscal.get(0);
//                        int id = fis.getId() + 1;
//                        FiscalPeriod f1 = (FiscalPeriod) fiscalPeriodDAO.findById(id);
//                        while (f1 != null && !f1.getStatus().equalsIgnoreCase("Open")) {
//                            f1 = (FiscalPeriod) fiscalPeriodDAO.findById(f1.getId() + 1);
//                        }
//                        if (f1 != null) {
//                            journalEntry.setPeriod(f1.getPeriodDis());
//                        }
//                    }
//                    if (journalOld.getJeDate() != null) {
//                        journalEntry.setJeDate(journalOld.getJeDate());
//                    }
//                    if (journalOld.getSourceCode() != null) {
//                        GenericCodeDAO genericCodeDAO = new GenericCodeDAO();
//                        GenericCode gen = genericCodeDAO.findById(journalOld.getSourceCode().getId());
//                        journalEntry.setSourceCode(gen);
//                    }
//                    if (journalOld.getCredit() != null) {
//                        journalEntry.setCredit(journalOld.getCredit());
//                    } else {
//                        journalEntry.setCredit(0.00);
//                    }
//                    if (journalOld.getDebit() != null) {
//                        journalEntry.setDebit(journalOld.getDebit());
//                    } else {
//                        journalEntry.setDebit(0.00);
//                    }
//                    journalEntry.setMemo(journalOld.getMemo());
//
//                    List lItemList = new ArrayList();
//                    Set lineSet = new HashSet<LineItem>();
//                    HashMap lMap = new HashMap();
//                    List lLIst = new ArrayList();
//                    if (journalOld.getLineItemSet() != null) {
//                        Iterator iter1 = journalOld.getLineItemSet().iterator();
//                        while (iter1.hasNext()) {
//                            LineItem l1 = (LineItem) iter1.next();
//                            lMap.put(l1.getLineItemId(), l1);
//                            lLIst.add(l1.getLineItemId());
//                        }
//                        Collections.sort(lLIst);
//                        for (int i = 0; i < lLIst.size(); i++) {
//                            LineItem lEntry = (LineItem) lMap.get(lLIst.get(i));
//                            lItemList.add(lEntry);
//                        }
//                    }
//                    for (int i = 0; i < lItemList.size(); i++) {
//                        LineItem l1 = (LineItem) lItemList.get(i);
//                        LineItem line = new LineItem();
//                        line.setLineItemId(journalEntry.getJournalEntryId() + "-" + dbUtil.lineitemidid1(l1.getLineItemId()));
//                        if (l1.getAccount() != null) {
//                            line.setAccount(l1.getAccount());
//                        }
//                        if (l1.getAccountDesc() != null) {
//                            line.setAccountDesc(l1.getAccountDesc());
//                        }
//                        if (l1.getDebit() != null) {
//                            line.setDebit(l1.getDebit());
//                        } else {
//                            line.setDebit(0.00);
//                        }
//                        if (l1.getCredit() != null) {
//                            line.setCredit(l1.getCredit());
//                        } else {
//                            line.setCredit(0.00);
//                        }
//                        if (l1.getPeriod() != null) {
//                            line.setPeriod(l1.getPeriod());
//                        }
//                        if (l1.getReference() != null) {
//                            line.setReference(l1.getReference());
//                        }
//                        if (l1.getReferenceDesc() != null) {
//                            line.setReferenceDesc(l1.getReferenceDesc());
//                        }
//                        lineItemList.add(line);
//                    }
//                    for (int i = 0; i < lineItemList.size(); i++) {
//                        LineItem l2 = (LineItem) lineItemList.get(i);
//                        lineSet.add(l2);
//                    }
//                    journalEntry.setLineItemSet(lineSet);
//
//                }
//                Set journalEntrySet = new HashSet<JournalEntry>();
//                List journalEntryList = new ArrayList();
//                journalEntryList.add(journalEntry);
//                session.setAttribute("journalEntryList", journalEntryList);
//                journalEntrySet.add(journalEntry);
//                batch.setJournalEntrySet(journalEntrySet);
//                session.setAttribute("batch", batch);
//                batchList.add(batch);
//                if (session.getAttribute("journalEntry") != null) {
//                    session.removeAttribute("journalEntry");
//                }
//                if (session.getAttribute("lineItemList") != null) {
//                    session.removeAttribute("lineItemList");
//                }
//                session.setAttribute("journalEntry", journalEntry);
//                session.setAttribute("lineItemList", lineItemList);
//                session.setAttribute("batchList", batchList);
//                request.setAttribute("buttonValue", "completed");
//            } else if (buttonValue.equals("newAndReverse")) {
//                String batchId = request.getParameter("batchId");
//                Batch existingBatch = new BatchDAO().findById(batchId);
//                String reverseBatchId = new BatchDAO().getMaxBatchNumber();
//                reverseBatchId = "" + (Integer.parseInt(reverseBatchId) + 1);
//                Batch reverseBatch = new Batch();
//                reverseBatch.setBatchId(reverseBatchId);
//                reverseBatch.setBatchDesc(existingBatch.getBatchDesc());
//                reverseBatch.setStatus("open");
//                reverseBatch.setSourceLedger(existingBatch.getSourceLedger());
//                reverseBatch.setType("manual");
//                jeid = (String) session.getAttribute("journalId");
//                if (null != jeid) {
//                    String reverseJournalEntryId = reverseBatchId + "-001";
//                    JournalEntry originalJournalEntry = new JournalEntryDAO().findById(jeid);
//                    if (null != originalJournalEntry) {
//                        originalJournalEntry.setFlag("R");
//                        JournalEntry reverseJournalEntry = new JournalEntry();
//                        reverseJournalEntry.setJournalEntryId(reverseJournalEntryId);
//                        reverseJournalEntry.setJournalEntryDesc(jeid + " Reverse");
//                        reverseJournalEntry.setFlag("R");
//                        reverseJournalEntry.setJeDate(new Date());
//                        FiscalPeriod fiscalPeriod = new FiscalPeriodDAO().getCurrentOpenPeriod();
//                        reverseJournalEntry.setPeriod(fiscalPeriod.getPeriodDis());
//                        reverseJournalEntry.setSubledgerClose(CommonConstants.NO);
//                        if (null != originalJournalEntry.getSourceCode()) {
//                            reverseJournalEntry.setSourceCode(originalJournalEntry.getSourceCode());
//                            reverseJournalEntry.setSourceCodeDesc(originalJournalEntry.getSourceCode().getCodedesc());
//                        }
//                        Set<LineItem> reverseLineItems = new HashSet<LineItem>();
//                        List<LineItem> reverseLineItemList = new ArrayList<LineItem>();
//                        int i = 1;
//                        double jeCredit = 0d;
//                        double jeDebit = 0d;
//                        for (LineItem originalLineItem : (Set<LineItem>) originalJournalEntry.getLineItemSet()) {
//                            LineItem reverseLineItem = new LineItem();
//                            PropertyUtils.copyProperties(reverseLineItem, originalLineItem);
//                            String reverseLineItemId = reverseJournalEntryId + "-" + StringUtils.leftPad("" + i, 3, "00");
//                            reverseLineItem.setLineItemId(reverseLineItemId);
//                            reverseLineItem.setCredit(originalLineItem.getDebit());
//                            reverseLineItem.setDebit(originalLineItem.getCredit());
//                            reverseLineItems.add(reverseLineItem);
//                            reverseLineItemList.add(reverseLineItem);
//                            jeCredit += reverseLineItem.getCredit();
//                            jeDebit += reverseLineItem.getDebit();
//                            session.setAttribute("line", reverseLineItem);
//                            i++;
//                        }
//                        reverseJournalEntry.setLineItemSet(reverseLineItems);
//                        reverseJournalEntry.setCredit(jeCredit);
//                        reverseJournalEntry.setDebit(jeDebit);
//                        Set<JournalEntry> journalEntrys = new HashSet<JournalEntry>();
//                        journalEntrys.add(reverseJournalEntry);
//                        reverseBatch.setJournalEntrySet(journalEntrys);
//                        reverseBatch.setTotalCredit(jeCredit);
//                        reverseBatch.setTotalDebit(jeCredit);
//                        new BatchDAO().save(reverseBatch);
//                        session.setAttribute("lineItemList", reverseLineItemList);
//                        session.setAttribute("journalEntry", reverseJournalEntry);
//                        session.setAttribute("batch", reverseBatch);
//                        session.removeAttribute("journal");
//                        List batchList = new DBUtil().batchList();
//                        batchList.remove(reverseBatch);
//                        batchList.add(reverseBatch);
//                        session.setAttribute("batchList", batchList);
//                        request.setAttribute("buttonValue", "completed");
//                    }
//                }
//            }
//        }
//        request.setAttribute("batchesBean", batchesBean);
//        return mapping.findForward("searchbatch");
//    }
}
