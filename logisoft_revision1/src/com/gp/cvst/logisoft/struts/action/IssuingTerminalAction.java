/*
 * Generated by MyEclipse Struts
 * Template path: templates/java/JavaClass.vtl
 */
package com.gp.cvst.logisoft.struts.action;

import java.util.ArrayList;
import java.util.List;

import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;
import javax.servlet.http.HttpSession;

import org.apache.commons.lang3.StringUtils;
import org.apache.struts.action.Action;
import org.apache.struts.action.ActionForm;
import org.apache.struts.action.ActionForward;
import org.apache.struts.action.ActionMapping;

import com.gp.cong.logisoft.domain.RefTerminal;
import com.gp.cong.logisoft.hibernate.dao.RefTerminalDAO;
import com.gp.cvst.logisoft.domain.CustAddress;
import com.gp.cvst.logisoft.struts.form.IssuingTerminalForm;

/**
 * MyEclipse Struts Creation date: 04-09-2009
 * 
 * XDoclet definition:
 * 
 * @struts.action path="/issuingTerminal" name="issuingTerminalForm"
 *                input="/jsps/fclQuotes/issuingTerminal.jsp" scope="request"
 *                validate="true"
 */
public class IssuingTerminalAction extends Action {
	/*
	 * Generated Methods
	 */

	/**
	 * Method execute
	 * 
	 * @param mapping
	 * @param form
	 * @param request
	 * @param response
	 * @return ActionForward
	 */
	public ActionForward execute(ActionMapping mapping, ActionForm form,
			HttpServletRequest request, HttpServletResponse response) throws Exception {
		IssuingTerminalForm issuingTerminalForm = (IssuingTerminalForm) form;// TODO
																				// Auto-generated
																				// method
																				// stub
		String button = issuingTerminalForm.getButton();
		String issuingTerminal = issuingTerminalForm.getIssuingTerminal();
		HttpSession session = ((HttpServletRequest) request).getSession();
		String issuTerminal = "";
		List issueTerminalList = null;
		RefTerminalDAO terminalDAO = new RefTerminalDAO();
		if (request.getParameter("buttonValue") != null
				&& (request.getParameter("buttonValue").equals("Quotation"))) {

			issuTerminal = request.getParameter("issuingTerminal");
			if (issuTerminal != null && (issuTerminal.equals("percent") || issuTerminal.equals(""))) {
				issuTerminal = "%";
			}
			if (issuTerminal != null && !issuTerminal.equals("")) {
				issuTerminal = issuTerminal.replace("amp;", "&");
				if (request.getParameter("buttonValue") != null
						&& request.getParameter("buttonValue").equals("Quotation")) {
					issueTerminalList = terminalDAO.getAllTerminalsForDisplayForDojo(issuingTerminal);
				}
			}
			session.setAttribute("buttonValue", request.getParameter("buttonValue"));
			session.setAttribute("issueTerminalList", issueTerminalList);

		} else if (request.getParameter("paramId") != null) {
			if (session.getAttribute("issueTerminalList") != null) {
				issueTerminalList = (List) session.getAttribute("issueTerminalList");
				RefTerminal refTerminalobj = (RefTerminal) issueTerminalList
				.get(Integer.parseInt(request.getParameter("paramId")));
				List issueList = new ArrayList();
				issueList.add(refTerminalobj.getTerminalLocation()+"-"+refTerminalobj.getTrmnum());
				request.setAttribute("issueList", issueList);
				if (request.getParameter("button").equals("Quotation")) {
					request.setAttribute("buttonValue", "QuotationIssuing");
				} 
				if (session.getAttribute("issueTerminalList") != null) {
					session.removeAttribute("issueTerminalList");
				}
				if (session.getAttribute("buttonValue") != null) {
					session.removeAttribute("buttonValue");
				}
			}
		}if (button != null && button.equals("Go")) {
			 if(session.getAttribute("buttonValue").equals("Quotation")){
				 issueTerminalList = terminalDAO.getAllTerminalsForDisplayForDojo(issuingTerminal);
			}
			session.setAttribute("issueTerminalList", issueTerminalList);
		}

		return mapping.findForward("issuingTermial");
	}
}