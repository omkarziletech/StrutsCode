/*
 * Generated by MyEclipse Struts
 * Template path: templates/java/JavaClass.vtl
 */
package com.gp.cvst.logisoft.struts.action;

import java.util.List;

import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;
import javax.servlet.http.HttpSession;

import org.apache.struts.action.Action;
import org.apache.struts.action.ActionForm;
import org.apache.struts.action.ActionForward;
import org.apache.struts.action.ActionMapping;

import com.gp.cong.logisoft.domain.GenericCode;
import com.gp.cong.logisoft.hibernate.dao.GenericCodeDAO;
import com.gp.cvst.logisoft.domain.BookingPopUp;
import com.gp.cvst.logisoft.struts.form.SearchCostCodeForm;

/** 
 * MyEclipse Struts
 * Creation date: 09-08-2008
 * 
 * XDoclet definition:
 * @struts.action path="/searchCostCode" name="searchCostCodeForm" input="/jsps/fclQuotes/searchCostCode.jsp" scope="request" validate="true"
 */
public class SearchCostCodeAction extends Action {
    /*
     * Generated Methods
     */

    /**
     * Method execute
     * @param mapping
     * @param form
     * @param request
     * @param response
     * @return ActionForward
     */
    public ActionForward execute(ActionMapping mapping, ActionForm form,
            HttpServletRequest request, HttpServletResponse response) throws Exception {
        SearchCostCodeForm searchCostCodeForm = (SearchCostCodeForm) form;// TODO Auto-generated method stub
        String ButtonValue = searchCostCodeForm.getButtonvalue();
        String costCode = searchCostCodeForm.getCostCode();
        GenericCodeDAO genericDAO = new GenericCodeDAO();
        GenericCode genericCodeObj = new GenericCode();
        BookingPopUp book = new BookingPopUp();
        String codetype = "36";
        String costDesc = searchCostCodeForm.getCodeDescription();
        HttpSession session = (HttpSession) request.getSession();
        String path1 = "";
        if (request.getParameter("index") != null) {
            int ind = Integer.parseInt(request.getParameter("index"));
            List codelist = (List) session.getAttribute("codeList");
            genericCodeObj = new GenericCode();
            genericCodeObj = (GenericCode) codelist.get(ind);
            book.setChargeCode(genericCodeObj.getCodedesc());
            session.setAttribute("chargecodef", book);
            path1 = "jsps/fclQuotes/bookingPopUp.jsp";
            request.setAttribute("path1", path1);
            request.setAttribute("buttonValue", "completed");

        } else {
            if (ButtonValue.equals("search")) {
                List codeList = genericDAO.findForChargeCodesForAirRates(costCode, costDesc, codetype);

                session.setAttribute("codeList", codeList);

            }
        }

        return mapping.findForward("success");
    }
}