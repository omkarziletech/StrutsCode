
/*
 * Generated by MyEclipse Struts
 * Template path: templates/java/JavaClass.vtl
 */
package com.gp.cvst.logisoft.struts.action;

import com.gp.cong.common.CommonUtils;
import java.util.ArrayList;
import java.util.List;

import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;
import org.apache.struts.action.Action;
import org.apache.struts.action.ActionForm;
import org.apache.struts.action.ActionForward;
import org.apache.struts.action.ActionMapping;

import com.gp.cong.logisoft.bc.fcl.FclBlBC;
import com.gp.cong.logisoft.util.CommonFunctions;
import com.gp.cvst.logisoft.domain.FclAESDetails;
import com.gp.cvst.logisoft.domain.FclBl;
import com.gp.cvst.logisoft.hibernate.dao.FclBlDAO;
import com.gp.cvst.logisoft.struts.form.FclAESDetailsForm;

/**
 * MyEclipse Struts Creation date: 04-15-2009
 * 
 * XDoclet definition:
 * 
 * @struts.action path="/fclAESDetails" name="fclAESDetailsForm"
 *                input="/jsps/fclQuotes/FclAESDetails.jsp" scope="request"
 *                validate="true"
 */
public class FclAESDetailsAction extends Action {
	/*
	 * Generated Methods
	 */

	/**
	 * Method execute
	 * 
	 * @param mapping
	 * @param form
	 * @param request
	 * @param response
	 * @return ActionForward
	 */
	public ActionForward execute(ActionMapping mapping, ActionForm form,
			HttpServletRequest request, HttpServletResponse response) throws Exception {
		FclAESDetailsForm fclAESDetailsForm = (FclAESDetailsForm) form;
		String buttonValue = fclAESDetailsForm.getButtonValue();
		if (null!=request.getParameter("bolid")) {
			fclAESDetailsForm.setBolId(request.getParameter("bolid"));
		}
		if(null!=request.getParameter("fileNo")){
			fclAESDetailsForm.setFileNo(request.getParameter("fileNo"));
		}
		if (request.getParameter("buttonValue") != null && request.getParameter("buttonValue").equals("fclbl")) {
			setRequest(fclAESDetailsForm ,request,getAESDetailsList(fclAESDetailsForm));
		}else{
                if(null!=buttonValue && buttonValue.equals("add")) {
                              setRequest(fclAESDetailsForm ,request,saveAESDetails(fclAESDetailsForm));
                     }else if (null!=buttonValue && buttonValue.equals("delete")) {
                              setRequest(fclAESDetailsForm ,request,deleteAESDetails(fclAESDetailsForm));
                     }else  if (null!=buttonValue && buttonValue.equals("closePage")) {
                             request.setAttribute("completed", "completed");
                     }
		}
                boolean importFlag= (null!=request.getParameter("importFlag") && request.getParameter("importFlag").equalsIgnoreCase("true"));
                request.setAttribute("importFlag", importFlag);
                return mapping.findForward("aes");
	}
	public void setRequest(FclAESDetailsForm fclAESDetailsForm ,HttpServletRequest request,List list){
		request.setAttribute("aesDetailsList", list);
		request.setAttribute("fclAESDetailsForm", fclAESDetailsForm);
	}
	public List<FclAESDetails> getAESDetailsList(FclAESDetailsForm fclAESDetailsForm) throws Exception{//String bolid = request.getParameter("bolid");
		List<FclAESDetails> aesDetailsList= null;
                List<FclAESDetails> aesReturnList= new ArrayList<FclAESDetails>();
		Integer bol = (CommonFunctions.isNotNull(fclAESDetailsForm.getBolId())) ? new Integer(fclAESDetailsForm.getBolId()) : 0;
		FclBlBC fclBlBC = new FclBlBC();
		FclBl fclBl = fclBlBC.getFclBLObject(bol);
		if (CommonFunctions.isNotNullOrNotEmpty(fclBl.getFclAesDetails())) {
                    aesDetailsList = new ArrayList(fclBl.getFclAesDetails());
                    for (FclAESDetails fclAESDetails : aesDetailsList) {
                        if((fclAESDetails.getAesDetails()!=null && CommonUtils.isNotEmpty(fclAESDetails.getAesDetails()))||
                                (fclAESDetails.getException()!=null &&  CommonUtils.isNotEmpty(fclAESDetails.getException()))){
                            aesReturnList.add(fclAESDetails);
                        }
                    }
		}
		return aesReturnList;
	}
	public List<FclAESDetails> saveAESDetails(FclAESDetailsForm fclAESDetailsForm) throws Exception{
		FclBlDAO fclBlDAO = new FclBlDAO();
		List<FclAESDetails> aesDetailsList= null;
		Integer bol = (CommonFunctions.isNotNull(fclAESDetailsForm.getBolId())) ? new Integer(fclAESDetailsForm.getBolId()) : 0;
		FclBlBC fclBlBC = new FclBlBC();
		FclBl fclBl = fclBlBC.getFclBLObject(bol);
		FclAESDetails fclAESDetails = new FclAESDetails();
		fclAESDetails.setAesDetails(fclAESDetailsForm.getAesDetails());
		fclAESDetails.setException(fclAESDetailsForm.getException());
		fclAESDetails.setFileNo(fclAESDetailsForm.getFileNo());
		fclBl.getFclAesDetails().add(fclAESDetails);
		fclBlDAO.update(fclBl);
		if (CommonFunctions.isNotNullOrNotEmpty(fclBl.getFclAesDetails())) {
			aesDetailsList = new ArrayList(fclBl.getFclAesDetails());
		}
		return aesDetailsList;
	}
	public List<FclAESDetails> deleteAESDetails(FclAESDetailsForm fclAESDetailsForm) throws Exception{
		List<FclAESDetails> aesDetailsList= null;
		FclBlDAO fclBlDAO = new FclBlDAO();
		Integer bol = (CommonFunctions.isNotNull(fclAESDetailsForm.getBolId())) ? new Integer(fclAESDetailsForm.getBolId()) : 0;
		FclBlBC fclBlBC = new FclBlBC();
		FclBl fclBl = fclBlBC.getFclBLObject(bol);
		if (CommonFunctions.isNotNullOrNotEmpty(fclBl.getFclAesDetails())) {
			aesDetailsList = new ArrayList(fclBl.getFclAesDetails());
			for(FclAESDetails fclAESDetails:aesDetailsList){
				if(CommonFunctions.isNotNull(fclAESDetails.getId()) && 
						CommonFunctions.isNotNull(fclAESDetailsForm.getDeleteId()) && 
						fclAESDetails.getId().toString().equals(fclAESDetailsForm.getDeleteId().trim())){
					fclBl.getFclAesDetails().remove(fclAESDetails);
					break;
				}
			}
			fclBlDAO.update(fclBl);
			aesDetailsList = new ArrayList(fclBl.getFclAesDetails());
		}
		return aesDetailsList;
	}
	 
}