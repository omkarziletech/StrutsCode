/*
 * Generated by MyEclipse Struts
 * Template path: templates/java/JavaClass.vtl
 */
package com.gp.cong.logisoft.struts.voyagemanagement.action;

import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Date;
import java.util.List;

import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;
import javax.servlet.http.HttpSession;

import org.apache.struts.action.Action;
import org.apache.struts.action.ActionForm;
import org.apache.struts.action.ActionForward;
import org.apache.struts.action.ActionMapping;

import com.gp.cong.logisoft.beans.AirRatesBean;
import com.gp.cong.logisoft.beans.NoteBean;
import com.gp.cong.logisoft.domain.AuditLogRecord;
import com.gp.cong.logisoft.domain.AuditVoyageExport;
import com.gp.cong.logisoft.domain.CarriersOrLineTemp;
import com.gp.cong.logisoft.domain.ChangeVoyage;
import com.gp.cong.logisoft.domain.GenericCode;
import com.gp.cong.logisoft.domain.Item;
import com.gp.cong.logisoft.domain.PortsTemp;
import com.gp.cong.logisoft.domain.RefTerminalTemp;
import com.gp.cong.logisoft.domain.User;
import com.gp.cong.logisoft.domain.VoyageExport;
import com.gp.cong.logisoft.hibernate.dao.CarriersOrLineDAO;
import com.gp.cong.logisoft.hibernate.dao.GenericCodeDAO;
import com.gp.cong.logisoft.hibernate.dao.ItemDAO;
import com.gp.cong.logisoft.hibernate.dao.PortsDAO;
import com.gp.cong.logisoft.hibernate.dao.RefTerminalDAO;
import com.gp.cong.logisoft.hibernate.dao.voyageMasterDAO;
import com.gp.cong.logisoft.struts.voyagemanagement.form.ExportVoyageForm;
import com.gp.cong.logisoft.util.DBUtil;

/**
 * MyEclipse Struts Creation date: 08-12-2008
 * 
 * XDoclet definition:
 * 
 * @struts.action path="/exportVoyage" name="exportVoyageForm"
 *                input="/jsps/voyagemanagement/exportVoyage.jsp"
 *                scope="request" validate="true"
 */
public class ExportVoyageAction extends Action {
    /*
     * Generated Methods
     */

    /**
     * Method execute
     *
     * @param mapping
     * @param form
     * @param request
     * @param response
     * @return ActionForward
     */
    public ActionForward execute(ActionMapping mapping, ActionForm form,
            HttpServletRequest request, HttpServletResponse response)throws Exception {
        ExportVoyageForm exportVoyageForm = (ExportVoyageForm) form;// TODO
        // Auto-generated
        // method
        // stub
        HttpSession session = ((HttpServletRequest) request).getSession();
        String eciVoyage = exportVoyageForm.getEciVoyage();//
        String loadingTerminal = exportVoyageForm.getLoadingTerminal();//
        String port = exportVoyageForm.getPort();
        String portName = exportVoyageForm.getPortName();//
        String vessel = exportVoyageForm.getVessel();//
        String vesselName = exportVoyageForm.getVesselName();//
        String index = exportVoyageForm.getIndex();
        String deliveryCutoffDate = exportVoyageForm.getDeliveryCutoffDate();//
        String time = exportVoyageForm.getTime();
        String sailDate = exportVoyageForm.getSailDate();//
        String lineNo = exportVoyageForm.getLineNo();//
        String pierNo = exportVoyageForm.getPierNo();//
        String flightSsVoyage = exportVoyageForm.getFlightSsVoyage();//
        String sslBookingNo = exportVoyageForm.getSslBookingNo();
        String showOnSailingSchedule = exportVoyageForm.getShowOnSailingSchedule();
        String arrivalOrdeparture = exportVoyageForm.getArrivalOrDeparture();
        String currentSequenceNo = null;
        currentSequenceNo = exportVoyageForm.getCurrentSequenceNo();
        String podNo = exportVoyageForm.getPodNo();
        String podName = exportVoyageForm.getPodName();
        String transShipments = exportVoyageForm.getTransShipments();
        String transitDaysOverride = exportVoyageForm.getTransitDaysOverride();
        String agentForVoyage = exportVoyageForm.getAgentForVoyage();
        String truckingInfo = exportVoyageForm.getTruckingInfo();
        String buttonValue = exportVoyageForm.getButtonValue();
        GenericCodeDAO genericCodeDAO = new GenericCodeDAO();
        String unitType = exportVoyageForm.getSingleSelect();
        GenericCode genericCo = null;
        String Forward = "ExportVyge";
        String message = "";
        PortsDAO portsDAO = new PortsDAO();
        CarriersOrLineDAO carriersOrLineDAO = new CarriersOrLineDAO();
        CarriersOrLineTemp carriersOrLineTemp = new CarriersOrLineTemp();
        RefTerminalDAO refTerminalDAO = new RefTerminalDAO();
        List searchvoyageList = new ArrayList();
        AirRatesBean airRatesBean = new AirRatesBean();
        String recordid = "";
        String programid = null;
        DBUtil dbUtil = new DBUtil();
        VoyageExport voyageExport = null;
        voyageMasterDAO voyagemasterDAO = new voyageMasterDAO();

        if (request.getAttribute("voyageExprt") == null) {
            voyageExport = new VoyageExport();
        } else {
            voyageExport = (VoyageExport) request.getAttribute("voyageExprt");
        }
        if (eciVoyage != null && !eciVoyage.equals("")) {
            voyageExport.setInternalVoyage(eciVoyage);
        }

        if (flightSsVoyage != null && !flightSsVoyage.equals("")) {
            voyageExport.setFligtSsVoyage(flightSsVoyage);
        }
        if (unitType != null && !unitType.equals("")) {
            voyageExport.setUnitType(unitType);
        }
        if (sslBookingNo != null && !sslBookingNo.equals("")) {
            voyageExport.setSslBookingNo(sslBookingNo);
        }
        if (currentSequenceNo != null && !currentSequenceNo.equals("")) {
            voyageExport.setCurrentSequenceNo((Integer.parseInt(currentSequenceNo)));
        }
        if (transShipments != null && !transShipments.equals("")) {
            voyageExport.setTransShipments(transShipments);
        }
        if (transitDaysOverride != null && !transitDaysOverride.equals("")) {
            voyageExport.setTransitDaysOverride(transitDaysOverride);
        }
        if (agentForVoyage != null && !agentForVoyage.equals("")) {
            voyageExport.setAgentForVoyage(agentForVoyage);
        }
        if (truckingInfo != null && !truckingInfo.equals("")) {
            voyageExport.setTruckingInfo(truckingInfo);
        }

        if (pierNo != null && !pierNo.equals("")) {
            voyageExport.setPierNo(pierNo);
        }
        if (flightSsVoyage != null && !flightSsVoyage.equals("")) {
            voyageExport.setFligtSsVoyage(flightSsVoyage);
        }
        if (time != null && !time.equals("")) {
            voyageExport.setTime(time);
        }
        if (deliveryCutoffDate != null && deliveryCutoffDate != "") {
            Date delCutoffDate = null;
                SimpleDateFormat sdf = new SimpleDateFormat("MM/dd/yyyy");
                delCutoffDate = sdf.parse(deliveryCutoffDate);
            voyageExport.setDeliveryCutOffDate(delCutoffDate);
        }
        if (sailDate != null && sailDate != "") {
            Date sailDt = null;
                SimpleDateFormat sdf = new SimpleDateFormat("MM/dd/yyyy");
                sailDt = sdf.parse(sailDate);
            voyageExport.setSailDate(sailDt);
        }

        request.setAttribute("voyageExprt", voyageExport);
        if (buttonValue != null && !buttonValue.equals("") && buttonValue.equals("closed")) {
            String yes = "";
            session.setAttribute("closed", yes);

        }
        if (buttonValue != null && !buttonValue.equals("") && buttonValue.equals("audit")) {
            String no = "";
            session.setAttribute("audited", no);

        }
        // -----popup
        if (buttonValue != null && !buttonValue.equals("") && buttonValue.equals("popup")) {
            VoyageExport voy = new VoyageExport();
            voy.setShowSailingSchedule(showOnSailingSchedule);
            session.setAttribute("voy", voy);
            if (request.getAttribute("voyageExprt") != null) {

                session.removeAttribute("voyageExprt");
            }

            if (session.getAttribute("exportvoyages") != null) {

                session.removeAttribute("exportvoyages");
            }
            if (session.getAttribute("voyageExport1") == null) {
                voyageExport = new VoyageExport();
            } else {
                voyageExport = (VoyageExport) session.getAttribute("voyageExport1");
            }

            if (eciVoyage != null && !eciVoyage.equals("")) {
                voyageExport.setInternalVoyage(eciVoyage);
            }
            voyageExport.setVoyageStdId(voyageExport.getVoyageStdId());
            if (flightSsVoyage != null && !flightSsVoyage.equals("")) {
                voyageExport.setFligtSsVoyage(flightSsVoyage);
            }

            if (unitType != null && !unitType.equals("")) {
                voyageExport.setUnitType(unitType);
            }

            if (sslBookingNo != null && !sslBookingNo.equals("")) {
                voyageExport.setSslBookingNo(sslBookingNo);
            }

            if (currentSequenceNo != null && !currentSequenceNo.equals("")) {

                voyageExport.setCurrentSequenceNo((Integer.parseInt(currentSequenceNo)));
            }
            if (transShipments != null && !transShipments.equals("")) {
                voyageExport.setTransShipments(transShipments);
            }
            if (transitDaysOverride != null && !transitDaysOverride.equals("")) {
                voyageExport.setTransitDaysOverride(transitDaysOverride);
            }

            if (agentForVoyage != null && !agentForVoyage.equals("")) {

                voyageExport.setAgentForVoyage(agentForVoyage);
            }
            if (truckingInfo != null && !truckingInfo.equals("")) {
                voyageExport.setTruckingInfo(truckingInfo);
            }

            if (pierNo != null && !pierNo.equals("")) {
                voyageExport.setPierNo(pierNo);
            }
            if (flightSsVoyage != null && !flightSsVoyage.equals("")) {
                voyageExport.setFligtSsVoyage(flightSsVoyage);
            }
            if (time != null && !time.equals("")) {
                voyageExport.setTime(time);
            }

            voyageExport.setShowSailingSchedule(showOnSailingSchedule);
            airRatesBean.setShowOnSailingSchedule(showOnSailingSchedule);

            request.setAttribute("airRatesBean", airRatesBean);
            if (loadingTerminal != null && !loadingTerminal.equals("")) {
                RefTerminalTemp refTerminal = refTerminalDAO.findById1(loadingTerminal);
                if (refTerminal != null) {
                    voyageExport.setOriginTerminal(refTerminal);

                } else {
                    RefTerminalTemp r1 = null;
                    voyageExport.setOriginTerminal(r1);

                }
            } else {
                RefTerminalTemp r1 = null;
                voyageExport.setOriginTerminal(r1);

            }
            if (port != null && !port.equals("")) {
                List portsList = portsDAO.findports(port);
                if (portsList != null && portsList.size() > 0) {
                    PortsTemp ports = (PortsTemp) portsList.get(0);
                    voyageExport.setDestinationPort(ports);

                } else {
                    PortsTemp p1 = null;
                    voyageExport.setDestinationPort(p1);
                }
            } else {
                PortsTemp p1 = null;
                voyageExport.setDestinationPort(p1);
            }

            if (podNo != null && !podNo.equals("")) {
                List portsList = portsDAO.findports(podNo);
                if (portsList != null && portsList.size() > 0) {
                    PortsTemp ports = (PortsTemp) portsList.get(0);
                    voyageExport.setPortOfDischarge(ports);

                } else {
                    PortsTemp p1 = null;
                    voyageExport.setPortOfDischarge(p1);

                }
            } else {
                PortsTemp p1 = null;
                voyageExport.setPortOfDischarge(p1);

            }

            if (session.getAttribute("addvesselrecords") != null) {
                VoyageExport v1 = (VoyageExport) session.getAttribute("addvesselrecords");
                if (v1.getVesselNo() != null) {
                    voyageExport.setVesselNo(v1.getVesselNo());
                }
            }
            if (session.getAttribute("changevoyage") != null) {
                ChangeVoyage changevoyage = (ChangeVoyage) session.getAttribute("changevoyage");
                if (changevoyage.getNewvesselNo() != null) {
                    voyageExport.setVesselNo(changevoyage.getNewvesselNo());

                }

            }

            if (lineNo != null && !lineNo.equals("")) {

                List SSNo = carriersOrLineDAO.findForSSLine1(lineNo);

                if (SSNo != null && SSNo.size() > 0) {
                    carriersOrLineTemp = (CarriersOrLineTemp) SSNo.get(0);
                    voyageExport.setLineNo(carriersOrLineTemp);

                } else {
                    CarriersOrLineTemp c1 = null;
                    voyageExport.setLineNo(c1);

                }
            } else {
                CarriersOrLineTemp c1 = null;
                voyageExport.setLineNo(c1);

            }
            airRatesBean.setShowOnSailingSchedule(showOnSailingSchedule);

            if (showOnSailingSchedule != null && showOnSailingSchedule.equals("on")) {
                airRatesBean.setShowOnSailingSchedule("Y");
            } else {
                airRatesBean.setShowOnSailingSchedule("N");
            }
            request.setAttribute("airRatesBean", airRatesBean);
            if (showOnSailingSchedule != null && showOnSailingSchedule.equals("on")) {
                voyageExport.setShowSailingSchedule("Y");
            } else {
                voyageExport.setShowSailingSchedule("N");
            }
            if (deliveryCutoffDate != null && deliveryCutoffDate != "") {
                Date delCutoffDate = null;
                    SimpleDateFormat sdf = new SimpleDateFormat("MM/dd/yyyy");
                    delCutoffDate = sdf.parse(deliveryCutoffDate);
                voyageExport.setDeliveryCutOffDate(delCutoffDate);
            }
            if (sailDate != null && sailDate != "") {
                Date sailDt = null;
                    SimpleDateFormat sdf = new SimpleDateFormat("MM/dd/yyyy");
                    sailDt = sdf.parse(sailDate);
                voyageExport.setSailDate(sailDt);
            }
            voyageExport.setInternalVoyage(eciVoyage);
            session.setAttribute("voyageExportPopup", voyageExport);
            if (session.getAttribute("voyageExportPopup") != null) {
                voyageExport = (VoyageExport) session.getAttribute("voyageExportPopup");

            }

            Forward = "ExportVyge";
        }

        // ----EDIT STARTS
        if (buttonValue != null && !buttonValue.equals("") && buttonValue.equals("edit")) {

            if (request.getAttribute("voyageExprt") != null) {

                session.removeAttribute("voyageExprt");
            }

            if (session.getAttribute("exportvoyages") != null) {

                session.removeAttribute("exportvoyages");
            }
            if (session.getAttribute("voy") != null) {

                session.removeAttribute("voy");
            }
            if (session.getAttribute("voyageExport1") != null) {
                voyageExport = (VoyageExport) session.getAttribute("voyageExport1");
            } else {
                voyageExport = new VoyageExport();
            }
            voyageMasterDAO voyageExport1 = new voyageMasterDAO();

            if (session.getAttribute("changevoyage") != null) {
                voyageExport.setVoyageChange("y");
            }

            if (voyageExport.getId() != null) {
                voyageExport.setId(voyageExport.getId());
                // for update
                if (eciVoyage != null && !eciVoyage.equals("")) {
                    voyageExport.setInternalVoyage(eciVoyage);
                }
                voyageExport.setVoyageStdId(voyageExport.getVoyageStdId());
                if (flightSsVoyage != null && !flightSsVoyage.equals("")) {
                    voyageExport.setFligtSsVoyage(flightSsVoyage);
                }

                if (unitType != null && !unitType.equals("")) {
                    voyageExport.setUnitType(unitType);
                }
                voyageExport.setSslBookingNo(null);
                if (sslBookingNo != null && !sslBookingNo.equals("")) {
                    voyageExport.setSslBookingNo(sslBookingNo);
                }
                voyageExport.setCurrentSequenceNo(null);
                if (currentSequenceNo != null && !currentSequenceNo.equals("")) {
                    voyageExport.setCurrentSequenceNo((Integer.parseInt(currentSequenceNo)));
                }
                voyageExport.setTransShipments(null);
                if (transShipments != null && !transShipments.equals("")) {
                    voyageExport.setTransShipments(transShipments);
                }
                voyageExport.setTransitDaysOverride(null);
                if (transitDaysOverride != null && !transitDaysOverride.equals("")) {
                    voyageExport.setTransitDaysOverride(transitDaysOverride);
                }
                voyageExport.setAgentForVoyage(null);
                if (agentForVoyage != null && !agentForVoyage.equals("")) {
                    voyageExport.setAgentForVoyage(agentForVoyage);
                }
                voyageExport.setTruckingInfo(null);
                if (truckingInfo != null && !truckingInfo.equals("")) {
                    voyageExport.setTruckingInfo(truckingInfo);
                }
                voyageExport.setPierNo(null);
                if (pierNo != null && !pierNo.equals("")) {
                    voyageExport.setPierNo(pierNo);
                }
                voyageExport.setFligtSsVoyage(null);
                if (flightSsVoyage != null && !flightSsVoyage.equals("")) {
                    voyageExport.setFligtSsVoyage(flightSsVoyage);
                }
                voyageExport.setTime(null);
                if (time != null && !time.equals("")) {
                    voyageExport.setTime(time);
                }

                voyageExport.setShowSailingSchedule(showOnSailingSchedule);
                airRatesBean.setShowOnSailingSchedule(showOnSailingSchedule);

                request.setAttribute("airRatesBean", airRatesBean);
                if (loadingTerminal != null && !loadingTerminal.equals("")) {
                    RefTerminalTemp refTerminal = refTerminalDAO.findById1(loadingTerminal);
                    if (refTerminal != null) {
                        voyageExport.setOriginTerminal(refTerminal);

                    } else {
                        RefTerminalTemp r1 = null;
                        voyageExport.setOriginTerminal(r1);

                    }
                } else {
                    RefTerminalTemp r1 = null;
                    voyageExport.setOriginTerminal(r1);

                }
                if (port != null && !port.equals("")) {
                    List portsList = portsDAO.findports(port);
                    if (portsList != null && portsList.size() > 0) {
                        PortsTemp ports = (PortsTemp) portsList.get(0);
                        voyageExport.setDestinationPort(ports);

                    } else {
                        PortsTemp p1 = null;
                        voyageExport.setDestinationPort(p1);
                    }
                } else {
                    PortsTemp p1 = null;
                    voyageExport.setDestinationPort(p1);
                }

                if (podNo != null && !podNo.equals("")) {
                    List portsList = portsDAO.findports(podNo);
                    if (portsList != null && portsList.size() > 0) {
                        PortsTemp ports = (PortsTemp) portsList.get(0);
                        voyageExport.setPortOfDischarge(ports);

                    } else {
                        PortsTemp p1 = null;
                        voyageExport.setPortOfDischarge(p1);

                    }
                } else {
                    PortsTemp p1 = null;
                    voyageExport.setPortOfDischarge(p1);

                }

                /*
                 * if(session.getAttribute("addvesselrecords")!=null) {
                 * VoyageExport
                 * v1=(VoyageExport)session.getAttribute("addvesselrecords");
                 * if(v1.getVesselNo()!=null) {
                 * voyageExport.setVesselNo(v1.getVesselNo()); } } else
                 * if(session.getAttribute("changevoyage")!=null) { ChangeVoyage
                 * changevoyage=(ChangeVoyage)session.getAttribute("changevoyage");
                 * if(changevoyage.getNewvesselNo()!=null) {
                 * voyageExport.setVesselNo(changevoyage.getNewvesselNo());
                 *  }
                 *  }
                 */
                GenericCodeDAO genericdao = new GenericCodeDAO();
                voyageExport.setVesselNo(null);
                if (vessel != null && !vessel.equals("")) {
                    List vesselList = genericdao.findForVesselNo(vessel);
                    if (vesselList != null && vesselList.size() > 0) {
                        GenericCode vesselNo = (GenericCode) vesselList.get(0);
                        voyageExport.setVesselNo(vesselNo);

                    } else {

                        GenericCode vesselNo = null;
                        voyageExport.setVesselNo(vesselNo);
                    }

                }
                if (lineNo != null && !lineNo.equals("")) {

                    List SSNo = carriersOrLineDAO.findForSSLine1(lineNo);

                    if (SSNo != null && SSNo.size() > 0) {
                        carriersOrLineTemp = (CarriersOrLineTemp) SSNo.get(0);
                        voyageExport.setLineNo(carriersOrLineTemp);

                    } else {
                        CarriersOrLineTemp c1 = null;
                        voyageExport.setLineNo(c1);

                    }
                } else {
                    CarriersOrLineTemp c1 = null;
                    voyageExport.setLineNo(c1);

                }
                airRatesBean.setShowOnSailingSchedule(showOnSailingSchedule);

                if (showOnSailingSchedule != null && showOnSailingSchedule.equals("Y")) {
                    airRatesBean.setShowOnSailingSchedule("Y");
                } else {
                    airRatesBean.setShowOnSailingSchedule("N");
                }
                request.setAttribute("airRatesBean", airRatesBean);

                if (showOnSailingSchedule != null && showOnSailingSchedule.equals("Y")) {
                    voyageExport.setShowSailingSchedule("Y");
                } else {
                    voyageExport.setShowSailingSchedule("N");
                }
                voyageExport.setDeliveryCutOffDate(null);
                if (deliveryCutoffDate != null && deliveryCutoffDate != "") {
                    Date delCutoffDate = null;
                        SimpleDateFormat sdf = new SimpleDateFormat(
                                "MM/dd/yyyy");
                        delCutoffDate = sdf.parse(deliveryCutoffDate);
                    voyageExport.setDeliveryCutOffDate(delCutoffDate);
                }
                voyageExport.setSailDate(null);
                if (sailDate != null && sailDate != "") {
                    Date sailDt = null;
                        SimpleDateFormat sdf = new SimpleDateFormat(
                                "MM/dd/yyyy");
                        sailDt = sdf.parse(sailDate);
                    voyageExport.setSailDate(sailDt);
                }
                voyageExport.setInternalVoyage(eciVoyage);
                java.util.Date date = new java.util.Date();
                if (session.getAttribute("closed") != null) {
                    voyageExport.setClosed("c");

                    SimpleDateFormat sdformat = new SimpleDateFormat();
                    Date dt = new Date();
                    voyageExport.setClosedDate(dt);
                    String hr = String.valueOf(dt.getHours());
                    String min = String.valueOf(dt.getMinutes());
                    String currenttime = hr.concat(":" + min);

                    String systemtime = sdformat.format(dt);

                    voyageExport.setClosedTime(currenttime);
                    User userid1 = null;
                    if (session.getAttribute("loginuser") != null) {
                        userid1 = (User) session.getAttribute("loginuser");
                    }
                    voyageExport.setClosedUser(userid1.getLoginName());

                }

                if (session.getAttribute("audited") != null) {
                    voyageExport.setAudited("A");
                    voyageExport.setAuditedDate(new Date());
                    User userid1 = null;
                    if (session.getAttribute("loginuser") != null) {
                        userid1 = (User) session.getAttribute("loginuser");
                    }
                    voyageExport.setAuditedUser(userid1.getLoginName());
                    Date dt = new Date();
                    String hr = String.valueOf(dt.getHours());
                    String min = String.valueOf(dt.getMinutes());
                    String currenttime = hr.concat(":" + min);
                    voyageExport.setAuditedTime(currenttime);

                }

                request.setAttribute("voyageExport", voyageExport);

                // update ends
                User userid = null;
                if (session.getAttribute("loginuser") != null) {
                    userid = (User) session.getAttribute("loginuser");
                }

                voyagemasterDAO.update(voyageExport, userid.getLoginName());
                List searchList2 = new ArrayList();

                searchList2.add(voyageExport);
                session.setAttribute("searchvoyageList", searchList2);
                if (session.getAttribute("searchvoyagerecords") != null) {
                    session.removeAttribute("searchvoyagerecords");
                }
                if (session.getAttribute("addvoyagerecords") != null) {
                    session.removeAttribute("addvoyagerecords");
                }
                if (session.getAttribute("view") != null) {
                    session.removeAttribute("view");
                }
                if (session.getAttribute("voyageExport1") != null) {
                    session.removeAttribute("voyageExport1");
                }
            }

            message = "Voyage details Edited successfully";
            request.setAttribute("voyagemessage", message);
            session.setAttribute("voyageExport1", voyageExport);

            session.setAttribute("trade", "voyagerate");
            session.setAttribute("voyagerate1", "save");
            if (session.getAttribute("closed") != null) {

                session.removeAttribute("closed");
            }
            if (session.getAttribute("audited") != null) {
                session.removeAttribute("audited");
            }
            if (session.getAttribute("voyagerate") != null) {
                session.removeAttribute("voyagerate");
            }
            if (session.getAttribute("changevoyage") != null) {
                session.removeAttribute("changevoyage");

            }
            if (session.getAttribute("searchvoyagerecords") != null) {
                session.removeAttribute("searchvoyagerecords");
            }
            if (session.getAttribute("addvoyagerecords") != null) {
                session.removeAttribute("addvoyagerecords");
            }
            if (session.getAttribute("voyageExportPopup") != null) {

                session.removeAttribute("voyageExportPopup");
            }
            Forward = "voyageEdit";
        }

        // --Edit Ends
		/*
         * if(buttonValue.equals("popup")) {
         *
         *
         * if(deliveryCutoffDate!=null && deliveryCutoffDate!="") { Date
         * delCutoffDate=null; try { SimpleDateFormat sdf=new
         * SimpleDateFormat("MM/dd/yyyy");
         * delCutoffDate=sdf.parse(deliveryCutoffDate); } catch (ParseException
         * e){ e.printStackTrace(); }
         * voyageExport.setDeliveryCutOffDate(delCutoffDate); }
         * if(sailDate!=null && sailDate!="") { Date sailDt=null; try {
         * SimpleDateFormat sdf=new SimpleDateFormat("MM/dd/yyyy");
         * sailDt=sdf.parse(sailDate); } catch (ParseException e){
         * e.printStackTrace(); } voyageExport.setSailDate(sailDt); }
         *
         *
         *  }
         */

        // --SAVE STARTS
        if (!buttonValue.equals("") && buttonValue.equals("save")) {

            VoyageExport voyageExportnew = new VoyageExport();
            if (session.getAttribute("addvoyagerecords") != null) {

                voyageExport = (VoyageExport) session.getAttribute("addvoyagerecords");
                voyageExportnew.setComNum(voyageExport.getComNum());

                voyageExportnew.setDestinationPort(voyageExport.getDestinationPort());

                voyageExportnew.setOriginTerminal(voyageExport.getOriginTerminal());

                voyageExportnew.setLineNo(voyageExport.getLineNo());

            }

            if (voyageExportnew.getId() != null) {
                recordid = voyageExport.getId().toString();

            }
            programid = (String) session.getAttribute("processinfoforExport");

            dbUtil.getProcessInfo(programid, recordid, "deleted", "edited");

            if (eciVoyage != null && !eciVoyage.equals("")) {
                voyageExportnew.setInternalVoyage(eciVoyage);
            }
            voyageExportnew.setVoyageStdId(voyageExport.getVoyageStdId());
            if (flightSsVoyage != null && !flightSsVoyage.equals("")) {
                voyageExportnew.setFligtSsVoyage(flightSsVoyage);
            }

            if (unitType != null && !unitType.equals("")) {
                voyageExportnew.setUnitType(unitType);
            }
            if (sslBookingNo != null && !sslBookingNo.equals("")) {
                voyageExportnew.setSslBookingNo(sslBookingNo);
            }
            if (currentSequenceNo != null && !currentSequenceNo.equals("")) {
                voyageExportnew.setCurrentSequenceNo((Integer.parseInt(currentSequenceNo)));
            }
            if (transShipments != null && !transShipments.equals("")) {
                voyageExportnew.setTransShipments(transShipments);
            }
            if (transitDaysOverride != null && !transitDaysOverride.equals("")) {
                voyageExportnew.setTransitDaysOverride(transitDaysOverride);
            }
            if (agentForVoyage != null && !agentForVoyage.equals("")) {
                voyageExportnew.setAgentForVoyage(agentForVoyage);
            }
            if (truckingInfo != null && !truckingInfo.equals("")) {
                voyageExportnew.setTruckingInfo(truckingInfo);
            }

            if (pierNo != null && !pierNo.equals("")) {
                voyageExportnew.setPierNo(pierNo);
            }
            if (flightSsVoyage != null && !flightSsVoyage.equals("")) {
                voyageExportnew.setFligtSsVoyage(flightSsVoyage);
            }
            if (time != null && !time.equals("")) {
                voyageExportnew.setTime(time);
            }

            voyageExportnew.setShowSailingSchedule(showOnSailingSchedule);
            airRatesBean.setShowOnSailingSchedule(showOnSailingSchedule);
            request.setAttribute("airRatesBean", airRatesBean);
            if (loadingTerminal != null && !loadingTerminal.equals("")) {
                RefTerminalTemp refTerminal = refTerminalDAO.findById1(loadingTerminal);
                if (refTerminal != null) {
                    voyageExportnew.setOriginTerminal(refTerminal);

                } else {
                    RefTerminalTemp r1 = null;
                    voyageExportnew.setOriginTerminal(r1);

                }
            } else {
                RefTerminalTemp r1 = null;
                voyageExportnew.setOriginTerminal(r1);

            }
            if (port != null && !port.equals("")) {
                List portsList = portsDAO.findports(port);
                if (portsList != null && portsList.size() > 0) {
                    PortsTemp ports = (PortsTemp) portsList.get(0);

                    voyageExportnew.setDestinationPort(ports);

                } else {
                    PortsTemp p1 = null;
                    voyageExportnew.setDestinationPort(p1);
                }
            } else {
                PortsTemp p1 = null;
                voyageExportnew.setDestinationPort(p1);
            }

            if (podNo != null && !podNo.equals("")) {
                List portsList = portsDAO.findports(podNo);
                if (portsList != null && portsList.size() > 0) {
                    PortsTemp ports = (PortsTemp) portsList.get(0);
                    voyageExportnew.setPortOfDischarge(ports);

                } else {
                    PortsTemp p1 = null;
                    voyageExportnew.setPortOfDischarge(p1);

                }
            } else {
                PortsTemp p1 = null;
                voyageExportnew.setPortOfDischarge(p1);

            }

            if (session.getAttribute("addvesselrecords") != null) {
                VoyageExport v1 = (VoyageExport) session.getAttribute("addvesselrecords");
                if (v1.getVesselNo() != null) {
                    voyageExportnew.setVesselNo(v1.getVesselNo());
                }
            }

            if (lineNo != null && !lineNo.equals("")) {

                List SSNo = carriersOrLineDAO.findForSSLine1(lineNo);

                if (SSNo != null && SSNo.size() > 0) {
                    carriersOrLineTemp = (CarriersOrLineTemp) SSNo.get(0);
                    voyageExportnew.setLineNo(carriersOrLineTemp);

                } else {
                    CarriersOrLineTemp c1 = null;
                    voyageExportnew.setLineNo(c1);

                }
            } else {
                CarriersOrLineTemp c1 = null;
                voyageExportnew.setLineNo(c1);

            }
            airRatesBean.setShowOnSailingSchedule(showOnSailingSchedule);

            if (showOnSailingSchedule != null && showOnSailingSchedule.equals("on")) {
                airRatesBean.setShowOnSailingSchedule("Y");
            } else {
                airRatesBean.setShowOnSailingSchedule("N");
            }
            request.setAttribute("airRatesBean", airRatesBean);
            if (showOnSailingSchedule != null && showOnSailingSchedule.equals("Y")) {
                voyageExportnew.setShowSailingSchedule("Y");
            } else {
                voyageExportnew.setShowSailingSchedule("N");
            }
            if (deliveryCutoffDate != null && deliveryCutoffDate != "") {
                Date delCutoffDate = null;
                    SimpleDateFormat sdf = new SimpleDateFormat("MM/dd/yyyy");
                    delCutoffDate = sdf.parse(deliveryCutoffDate);
                voyageExportnew.setDeliveryCutOffDate(delCutoffDate);
            }
            if (sailDate != null && sailDate != "") {
                Date sailDt = null;
                    SimpleDateFormat sdf = new SimpleDateFormat("MM/dd/yyyy");
                    sailDt = sdf.parse(sailDate);
                voyageExportnew.setSailDate(sailDt);
            }
            voyageExportnew.setInternalVoyage(eciVoyage);

            request.setAttribute("voyageExport", voyageExportnew);

            User userId = null;
            if (session.getAttribute("loginuser") != null) {
                userId = (User) session.getAttribute("loginuser");

            }

            session.setAttribute("exportvoyages", voyageExportnew);

            voyagemasterDAO.save(voyageExportnew, userId.getLoginName());

            List searchvoyageList2 = new ArrayList();
            if (session.getAttribute("searchvoyageList") != null) {
                searchvoyageList2 = (List) session.getAttribute("searchvoyageList");
            }
            searchvoyageList2.add(voyageExportnew);
            session.setAttribute("searchvoyageList", searchvoyageList2);
            if (request.getAttribute("voyageExport") != null) {
                request.removeAttribute("voyageExport");
            }
            if (session.getAttribute("voyageExport1") != null) {
                session.removeAttribute("voyageExport1");
            }

            if (session.getAttribute("exportvoyageport") != null) {
                session.removeAttribute("exportvoyageport");
            }
            if (session.getAttribute("voyagerate") != null) {
                session.removeAttribute("voyagerate");
            }

            if (session.getAttribute("voyageExport1") != null) {
                session.removeAttribute("voyageExport1");
            }

            if (session.getAttribute("addvoyagerecords") != null) {

                session.removeAttribute("addvoyagerecords");

            }
            if (session.getAttribute("voyageExportPopup") != null) {

                session.removeAttribute("voyageExportPopup");
            }

            if (session.getAttribute("voy") != null) {

                session.removeAttribute("voy");
            }
            if (session.getAttribute("voyageeditrecord") != null) {
                session.removeAttribute("voyageeditrecord");
            }

            if (session.getAttribute("addvoyagerecords") != null) {

                session.removeAttribute("addvoyagerecords");

            }
            if (request.getAttribute("modifyforvoyageRates") != null) {

                request.removeAttribute("modifyforvoyageRates");

            }
            if (session.getAttribute("modify") != null) {

                session.removeAttribute("modify");

            }
            if (session.getAttribute("programid") != null) {

                session.removeAttribute("programid");

            }
            if (session.getAttribute("voyageExport1") != null) {

                session.removeAttribute("voyageExport1");
            }
            if (request.getAttribute("voyageExprt") != null) {

                session.removeAttribute("voyageExprt");
            }
            if (session.getAttribute("view") != null) {

                session.removeAttribute("view");

            }
            if (session.getAttribute("voyageExportPopup") != null) {

                session.removeAttribute("voyageExportPopup");
            }
            if (session.getAttribute("exportvoyages") != null) {

                session.removeAttribute("exportvoyages");
            }
            Forward = "ExportVoyage";
        }// --SAVE ENDS
        // --Delete Starts
        else if (buttonValue != null && buttonValue.equals("delete")) {
            List searchvoyageList1 = (List) session.getAttribute("searchvoyageList");

            if (session.getAttribute("voy") != null) {

                session.removeAttribute("voy");
            }
            programid = (String) session.getAttribute("processinfoforExport");
            if (session.getAttribute("voyageExport1") != null) {
                voyageExport = (VoyageExport) session.getAttribute("voyageExport1");
            }

            if (voyageExport != null && voyageExport.getId() != null) {
                recordid = voyageExport.getId().toString();
            }
            /*
             * for(int i=0;i<searchvoyageList1.size();i++) {
             * voyageExport=(VoyageExport)searchvoyageList1.get(i);
             */
            if (voyageExport.getId() != null) {
                // searchvoyageList1.remove(voyageExport);

                User userId = null;
                if (session.getAttribute("loginuser") != null) {
                    userId = (User) session.getAttribute("loginuser");
                }
                voyagemasterDAO.delete(voyageExport, userId.getLoginName());
                dbUtil.getProcessInfo(programid, recordid, "deleted", "edited");
                message = "Export Voyage details deleted successfully";
                request.setAttribute("voyagemessage", message);
                session.setAttribute("trade", "voyagerate");
                if (session.getAttribute("view") != null) {
                    session.removeAttribute("view");
                }
                if (session.getAttribute("searchvoyageList") != null) {

                    session.removeAttribute("searchvoyageList");

                }
                Forward = "ExportVoyage";
            }
            // }
            if (session.getAttribute("voyageExportPopup") != null) {

                session.removeAttribute("voyageExportPopup");
            }
        } // --Delete Ends
        // --Notes Start
        else if (buttonValue != null && buttonValue.equals("note")) {

            if (session.getAttribute("voyageExport1") != null) {
                voyageExport = (VoyageExport) session.getAttribute("voyageExport1");
            }

            ItemDAO itemDAO = new ItemDAO();
            Item item = new Item();
            String itemName = "";
            String noteId = "";
            if (session.getAttribute("processinfoforExport") != null) {
                String itemId = (String) session.getAttribute("processinfoforExport");
                item = itemDAO.findById(Integer.parseInt(itemId));
                itemName = item.getItemDesc();
            }

            Forward = "note";

            AuditLogRecord auditLogRecord = new AuditVoyageExport();

            NoteBean noteBean = new NoteBean();
            noteBean.setItemName(itemName);
            noteBean.setAuditLogRecord(auditLogRecord);
            noteBean.setButtonValue(buttonValue);
            // noteBean.setUser(user);
            if (voyageExport.getId() != null) {
                noteId = voyageExport.getId().toString();
                noteBean.setNoteId(noteId);
                noteBean.setReferenceId(noteId);
            }
            List auditList = null;
            auditList = dbUtil.getNoteInformation(noteId, auditLogRecord);
            noteBean.setAuditList(auditList);
            noteBean.setVoidednote("");
            noteBean.setPageName("cancelVoyagedetails");
            request.setAttribute("noteBean", noteBean);
            String documentName = "User";
            request.setAttribute("buttonValue", buttonValue);
            // session.setAttribute("document",documentName);
            request.setAttribute("exportnotes", "exportnotes");
            Forward = "note";

        }
        // --Notes Ends

        session.setAttribute("exportvoyages", voyageExport);
        session.setAttribute("buttonValue", buttonValue);
        if (buttonValue != null && buttonValue.equals("cancel")) {
            if (session.getAttribute("closed") != null) {

                session.removeAttribute("closed");
            }

            if (session.getAttribute("audited") != null) {
                session.removeAttribute("audited");
            }

            if (request.getAttribute("voyageExport") != null) {

                request.removeAttribute("voyageExport");

            }
            if (session.getAttribute("voy") != null) {

                session.removeAttribute("voy");
            }
            if (session.getAttribute("voyageeditrecord") != null) {
                session.removeAttribute("voyageeditrecord");
            }

            if (session.getAttribute("addvoyagerecords") != null) {

                session.removeAttribute("addvoyagerecords");

            }
            if (request.getAttribute("modifyforvoyageRates") != null) {

                request.removeAttribute("modifyforvoyageRates");

            }
            if (session.getAttribute("modify") != null) {

                session.removeAttribute("modify");

            }
            if (session.getAttribute("programid") != null) {

                session.removeAttribute("programid");

            }
            if (session.getAttribute("voyageExport1") != null) {

                session.removeAttribute("voyageExport1");
            }
            if (request.getAttribute("voyageExprt") != null) {

                session.removeAttribute("voyageExprt");
            }
            if (session.getAttribute("view") != null) {

                session.removeAttribute("view");

            }
            if (session.getAttribute("voyageExportPopup") != null) {

                session.removeAttribute("voyageExportPopup");
            }
            if (session.getAttribute("exportvoyages") != null) {

                session.removeAttribute("exportvoyages");
            }
            Forward = "ExportVoyage";
        } else if (buttonValue != null && buttonValue.equals("savecancel")) {

            if (session.getAttribute("voyageExportPopup") != null) {

                session.removeAttribute("voyageExportPopup");
            }
            if (session.getAttribute("voy") != null) {

                session.removeAttribute("voy");
            }
            if (request.getAttribute("voyageExport") != null) {

                request.removeAttribute("voyageExport");

            }

            if (session.getAttribute("voyageExport1") != null) {

                session.removeAttribute("voyageExport1");

            }
            if (session.getAttribute("view") != null) {

                session.removeAttribute("view");

            }
            if (request.getAttribute("modifyforvoyageRates") != null) {

                request.removeAttribute("modifyforvoyageRates");

            }
            if (session.getAttribute("modify") != null) {

                session.removeAttribute("modify");

            }
            if (session.getAttribute("programid") != null) {

                session.removeAttribute("programid");

            }
            if (session.getAttribute("voyageExport1") != null) {

                session.removeAttribute("voyageExport1");
            }
            if (request.getAttribute("voyageExprt") != null) {

                session.removeAttribute("voyageExprt");
            }
            if (session.getAttribute("voyagerate") != null) {

                session.removeAttribute("voyagerate");
            }
            if (session.getAttribute("addvoyagerecords") != null) {

                session.removeAttribute("addvoyagerecords");

            }
            if (session.getAttribute("exportvoyages") != null) {

                session.removeAttribute("exportvoyages");
            }
            if (session.getAttribute("voyageeditrecord") != null) {
                session.removeAttribute("voyageeditrecord");
            }

            Forward = "ExportVoyage";
        }
        /*
         * if(session.getAttribute("voyageExportPopup")!=null) {
         *
         * session.removeAttribute("voyageExportPopup"); }
         */

        session.setAttribute("trade", "voyage");


        return mapping.findForward(Forward);
    }
}