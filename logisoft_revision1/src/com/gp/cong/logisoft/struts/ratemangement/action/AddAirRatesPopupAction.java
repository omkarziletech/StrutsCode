/*
 * Generated by MyEclipse Struts
 * Template path: templates/java/JavaClass.vtl
 */
package com.gp.cong.logisoft.struts.ratemangement.action;

import java.util.List;
import java.util.ArrayList;

import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;
import javax.servlet.http.HttpSession;
import com.gp.cong.logisoft.util.DBUtil;

import org.apache.struts.action.Action;
import org.apache.struts.action.ActionForm;
import org.apache.struts.action.ActionForward;
import org.apache.struts.action.ActionMapping;

import com.gp.cong.logisoft.beans.AirRatesBean;
import com.gp.cong.logisoft.domain.GenericCode;
import com.gp.cong.logisoft.domain.StandardCharges;
import com.gp.cong.logisoft.hibernate.dao.GenericCodeDAO;
import com.gp.cong.logisoft.hibernate.dao.PortsDAO;
import com.gp.cong.logisoft.hibernate.dao.RefTerminalDAO;
import com.gp.cong.logisoft.struts.ratemangement.form.AddAirRatesPopupForm;

public class AddAirRatesPopupAction extends Action {

    public ActionForward execute(ActionMapping mapping, ActionForm form,
            HttpServletRequest request, HttpServletResponse response) throws Exception {
        AddAirRatesPopupForm addAirRatesPopupForm = (AddAirRatesPopupForm) form;// TODO Auto-generated method stub
        HttpSession session = ((HttpServletRequest) request).getSession();
        String buttonValue = addAirRatesPopupForm.getButtonValue();
        String trmNum = addAirRatesPopupForm.getTerminalNumber();
        String portNum = addAirRatesPopupForm.getDestSheduleNumber();
        String trmNumName = addAirRatesPopupForm.getTerminalName();
        String portNumName = addAirRatesPopupForm.getDestAirportname();
        String comCodeName = addAirRatesPopupForm.getComDescription();
        String comCode = addAirRatesPopupForm.getComCode();
        String common = addAirRatesPopupForm.getCommon();
        String portName = addAirRatesPopupForm.getDestAirportname();
        AirRatesBean airRatesBean = new AirRatesBean();
        String FORWARD = null;
        String enable = "";
        List list = new ArrayList();
        StandardCharges airRatesObj1 = new StandardCharges();
        DBUtil dbutil = new DBUtil();
        RefTerminalDAO refTerminalDAO = new RefTerminalDAO();
        PortsDAO portsDAO = new PortsDAO();
        GenericCodeDAO genericCodeDAO = new GenericCodeDAO();
        airRatesBean.setCommon(common);
        GenericCode genObj = null;
        request.setAttribute("airRatesBean", airRatesBean);
        if (session.getAttribute("standardCharges") != null) {
            airRatesObj1 = (StandardCharges) session.getAttribute("standardCharges");
        }
        if (trmNum != null && !trmNum.equals("")) {
            //RefTerminalTemp refTerminal=refTerminalDAO.findById1(terminalNumber);
            //	List TrnameList =refTerminalDAO.findByName(terminalName);
            List codeList = genericCodeDAO.findGenericCode("1", trmNum);
            if (codeList.size() > 0) {
                genObj = (GenericCode) codeList.get(0);
            }
            if (genObj != null) {

                airRatesObj1.setOrgTerminal(genObj);
                session.setAttribute("standardCharges", airRatesObj1);
            } else {
                request.setAttribute("message", "Please enter proper Terminal");
            }
        }
        if (portNum != null && !portNum.equals("")) {
            List portsList = genericCodeDAO.findGenericCode("1", portNum);
            if (portsList != null && portsList.size() > 0) {
                GenericCode ports = (GenericCode) portsList.get(0);
                airRatesObj1.setDestPort(ports);
                session.setAttribute("standardCharges", airRatesObj1);
            } else {
                request.setAttribute("message", "Please enter proper Destination Port");
            }
        }
        if (comCode != null && !comCode.equals("")) {
            List comList = genericCodeDAO.findForGenericCode(comCode);
            if (comList != null && comList.size() > 0) {
                GenericCode gen = (GenericCode) comList.get(0);
                airRatesObj1.setComCode(gen);
                session.setAttribute("standardCharges", airRatesObj1);
                if (gen.getCode().equals("000000")) {
                    session.setAttribute("setTabEnable", "enable");
                } else {
                    session.removeAttribute("setTabEnable");
                }
            } else {
                request.setAttribute("message", "Please enter proper Commodity Code");
            }
        }
        if (trmNumName != null && !trmNumName.equals("")) {
            //RefTerminalTemp refTerminal=refTerminalDAO.findById1(terminalNumber);
            //	List TrnameList =refTerminalDAO.findByName(terminalName);
            List codeList = genericCodeDAO.findByCodedesc(trmNumName);
            if (codeList.size() > 0) {
                genObj = (GenericCode) codeList.get(0);
            }
            if (genObj != null) {

                airRatesObj1.setOrgTerminal(genObj);
                session.setAttribute("standardCharges", airRatesObj1);
            } else {
                request.setAttribute("message", "Please enter proper Terminal");
            }
        }
        if (portNumName != null && !portNumName.equals("")) {
            List portsList = genericCodeDAO.findByCodedesc(portNumName);
            if (portsList != null && portsList.size() > 0) {
                GenericCode ports = (GenericCode) portsList.get(0);
                airRatesObj1.setDestPort(ports);
                session.setAttribute("standardCharges", airRatesObj1);
            } else {
                request.setAttribute("message", "Please enter proper Destination Port");
            }
        }
        if (comCodeName != null && !comCodeName.equals("")) {
            List comList = genericCodeDAO.findByCodedesc(comCodeName);
            if (comList != null && comList.size() > 0) {
                GenericCode gen = (GenericCode) comList.get(0);
                airRatesObj1.setComCode(gen);
                session.setAttribute("standardCharges", airRatesObj1);
                if (gen.getCode().equals("000000")) {
                    session.setAttribute("setTabEnable", "enable");
                } else {
                    session.removeAttribute("setTabEnable");
                }
            } else {
                request.setAttribute("message", "Please enter proper Commodity Code");
            }
        }
        if (common != null && common.equals("common")) {
            genObj = genericCodeDAO.findById(11292);
            airRatesObj1.setComCode(genObj);
            session.setAttribute("standardCharges", airRatesObj1);
            session.setAttribute("setTabEnable", "enable");
        }
        FORWARD = "addratespopup";
        if (buttonValue.equals("search")) {

            if (session.getAttribute("standardCharges") != null) {
                airRatesObj1 = (StandardCharges) session.getAttribute("standardCharges");
            }

            if (request.getAttribute("message") == null) {
                list = dbutil.getAirDetails(airRatesObj1.getOrgTerminal(), airRatesObj1.getDestPort(), airRatesObj1.getComCode());
                if (list != null && list.size() > 0) {
                    request.setAttribute("message", "This Combination already exists");
                } else {
                    enable = "three";
                    session.setAttribute("addnew", enable);
                    request.setAttribute("airrate", "addairrate");
                }

                if (session.getAttribute("airRatesBean") != null) {
                    session.removeAttribute("airRatesBean");
                }
                /*if(session.getAttribute("commonList")!=null)
                {
                session.removeAttribute("commonList");
                }
                if(session.getAttribute("noncommonList")!=null)
                {
                session.removeAttribute("noncommonList");
                }
                if(session.getAttribute("records")!=null)
                {
                session.removeAttribute("records");
                }*/

                if (session.getAttribute("flightShedulesAdd") != null) {
                    session.removeAttribute("flightShedulesAdd");
                }
                if (session.getAttribute("airFrieght") != null) {
                    session.removeAttribute("airFrieght");
                }
                if (session.getAttribute("docChargesAdd") != null) {
                    session.removeAttribute("docChargesAdd");
                }
                if (session.getAttribute("airStandardCharges") != null) {
                    session.removeAttribute("airStandardCharges");
                }
                if (session.getAttribute("agssAdd") != null) {
                    session.removeAttribute("agssAdd");
                }
                if (session.getAttribute("documentCharges") != null) {
                    session.removeAttribute("documentCharges");
                }
                if (session.getAttribute("cssList") != null) {
                    session.removeAttribute("cssList");
                }
                if (session.getAttribute("airdetailsAdd") != null) {
                    session.removeAttribute("airdetailsAdd");
                }
                if (session.getAttribute("applyGeneralStandardList") != null) {
                    session.removeAttribute("applyGeneralStandardList");
                }
                if (session.getAttribute("includedList") != null) {
                    session.removeAttribute("includedList");
                }
                if (session.getAttribute("airCommodityCharges") != null) {
                    session.removeAttribute("airCommodityCharges");
                }
                if (session.getAttribute("includedList") != null) {
                    session.removeAttribute("includedList");
                }//---------------------------------------------------
                session.setAttribute("editrecord", "save");
            }
            FORWARD = "addpopup";
        }

        return mapping.findForward(FORWARD);
    }
}