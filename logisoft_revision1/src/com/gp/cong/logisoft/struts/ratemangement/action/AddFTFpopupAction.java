/*
 * Generated by MyEclipse Struts
 * Template path: templates/java/JavaClass.vtl
 */
package com.gp.cong.logisoft.struts.ratemangement.action;

import java.util.ArrayList;
import java.util.Iterator;
import java.util.List;

import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;
import javax.servlet.http.HttpSession;

import org.apache.commons.lang3.StringUtils;
import org.apache.struts.action.Action;
import org.apache.struts.action.ActionForm;
import org.apache.struts.action.ActionForward;
import org.apache.struts.action.ActionMapping;

import com.gp.cong.logisoft.beans.AirRatesBean;
import com.gp.cong.logisoft.domain.FTFMaster;
import com.gp.cong.logisoft.domain.GenericCode;
import com.gp.cong.logisoft.domain.LCLColoadMaster;
import com.gp.cong.logisoft.domain.LCLPortConfiguration;
import com.gp.cong.logisoft.domain.Ports;
import com.gp.cong.logisoft.domain.PortsTemp;
import com.gp.cong.logisoft.domain.RefTerminalTemp;
import com.gp.cong.logisoft.domain.RetailStandardCharges;
import com.gp.cong.logisoft.domain.UnLocation;
import com.gp.cong.logisoft.hibernate.dao.GenericCodeDAO;
import com.gp.cong.logisoft.hibernate.dao.PortsDAO;
import com.gp.cong.logisoft.hibernate.dao.RefTerminalDAO;
import com.gp.cong.logisoft.hibernate.dao.UnLocationDAO;
import com.gp.cong.logisoft.struts.ratemangement.form.AddFTFpopupForm;
import com.gp.cong.logisoft.util.DBUtil;

public class AddFTFpopupAction extends Action {

	public ActionForward execute(ActionMapping mapping, ActionForm form,
			HttpServletRequest request, HttpServletResponse response) throws Exception {
		AddFTFpopupForm addFTFpopupForm = (AddFTFpopupForm) form;// TODO
		// Auto-generated
		// method
		// stub
		String buttonValue = addFTFpopupForm.getButtonValue();
		HttpSession session = ((HttpServletRequest) request).getSession();
		FTFMaster ftfMaster = new FTFMaster();
		DBUtil dbutil = new DBUtil();
		List list = new ArrayList();
		String common = addFTFpopupForm.getCommon();
		//PortsDAO portsDAO = new PortsDAO();
		String trmNum = addFTFpopupForm.getTerminalNumber();
		String trmName = addFTFpopupForm.getTerminalName();
		String portName = addFTFpopupForm.getDestAirportname();
		String portNum = addFTFpopupForm.getDestSheduleNumber();
		String comCode = addFTFpopupForm.getComCode();
		UnLocationDAO unLocationDAO = new UnLocationDAO();
		UnLocation unLocation = null;
		GenericCode genericCode = null;
		AirRatesBean airRatesBean = new AirRatesBean();
		airRatesBean.setCommon(common);
		request.setAttribute("airRatesBean", airRatesBean);
		GenericCodeDAO genericCodeDAO = new GenericCodeDAO();
		//String defaultRate = "";
		String FORWARD = null;
		if (session.getAttribute("addftfMaster") != null) {
			ftfMaster = (FTFMaster) session.getAttribute("addftfMaster");
		}
		if (buttonValue != null && buttonValue.equals("search")) {
			if (trmNum != null && !trmNum.equals("")) {
				List unLocationList = unLocationDAO.findForManagement(trmNum,
						null);
				if (unLocationList != null && unLocationList.size() > 0) {
					unLocation = (UnLocation) unLocationList.get(0);
					ftfMaster.setOrgTerminal(unLocation.getUnLocationCode());
					ftfMaster
							.setOrgTerminalName(unLocation.getUnLocationName());
				}
			} else if (trmName != null && !trmName.equals("")) {
				String stringTokens[] = StringUtils.splitPreserveAllTokens(
						trmName, '-');
				if (stringTokens != null && stringTokens.length > 1) {
					trmName = stringTokens[0];
					trmNum = stringTokens[1];
				}
				List terminal = unLocationDAO
						.findForManagement(trmNum, trmName);
				if (terminal.size() > 0) {
					unLocation = (UnLocation) terminal.get(0);
				}
				if (unLocation != null) {
					ftfMaster.setOrgTerminal(unLocation.getUnLocationCode());
					ftfMaster
							.setOrgTerminalName(unLocation.getUnLocationName());
				}
			}
			if (portNum != null && !portNum.equals("")) {
				List portsList = unLocationDAO.findForManagement(portNum, null);
				if (portsList != null && portsList.size() > 0) {
					unLocation = (UnLocation) portsList.get(0);
					ftfMaster.setDestPort(unLocation.getUnLocationCode());
					ftfMaster.setDestPortName(unLocation.getUnLocationName());
				}
			} else if (portName != null && !portName.equals("")) {
				String stringTokens[] = StringUtils.splitPreserveAllTokens(
						portName, '-');
				if (stringTokens != null && stringTokens.length > 1) {
					portName = stringTokens[0];
					portNum = stringTokens[1];
				}
				List portsList = unLocationDAO.findForManagement(portNum,
						portName);
				if (portsList != null && portsList.size() > 0) {
					unLocation = (UnLocation) portsList.get(0);
					ftfMaster.setDestPort(unLocation.getUnLocationCode());
				}
			}
			if (comCode != null && !comCode.equals("") && !comCode.equals("%")) {
				List comList = genericCodeDAO.findForGenericCode(comCode);
				if (comList != null && comList.size() > 0) {
					genericCode = (GenericCode) comList.get(0);
					ftfMaster.setComCode(genericCode.getCode());
					ftfMaster.setComCodeName(genericCode.getCodedesc());
					if (genericCode.getCode().equals("000000")) {
						session.setAttribute("setftfTabEnable", "enable");
					} else {
						session.removeAttribute("setftfTabEnable");
					}
				}
			}
			session.setAttribute("addftfMaster", ftfMaster);
			request.setAttribute("ftfrate", "addftfrate");
			session.setAttribute("ftfrate", "save");
			if (request.getAttribute("update") == null) {
				list = dbutil.getftfDetails(ftfMaster.getOrgTerminal(),
						ftfMaster.getDestPort(), ftfMaster.getComCode());
				if (list != null && list.size() > 0) {
					request.setAttribute("update",
							"This Combination already exists");
				}
				if (session.getAttribute("view") != null) {
					session.removeAttribute("view");
				}
				if (session.getAttribute("ftfairRatesBean") != null) {
					session.removeAttribute("ftfairRatesBean");
				}
				if (session.getAttribute("ftfMaster") != null) {
					session.removeAttribute("ftfMaster");
				}
				if (session.getAttribute("ftfdocChargesAdd") != null) {
					session.removeAttribute("ftfdocChargesAdd");
				}
				if (session.getAttribute("ftfStandardCharges") != null) {
					session.removeAttribute("ftfStandardCharges");
				}
				if (session.getAttribute("ftfcssList") != null) {
					session.removeAttribute("ftfcssList");
				}
				if (session.getAttribute("applyftfcharges") != null) {
					session.removeAttribute("applyftfcharges");
				}
				if (session.getAttribute("includedList") != null) {
					session.removeAttribute("includedList");
				}
				if (session.getAttribute("ftfStandardCharges") != null) {
					session.removeAttribute("ftfStandardCharges");
				}
				if (session.getAttribute("message") != null) {
					session.removeAttribute("message");
				}
				if (session.getAttribute("includedList") != null) {
					session.removeAttribute("includedList");
				}
				if (session.getAttribute("addftfcommodity") != null) {
					session.removeAttribute("addftfcommodity");
				}
				if (session.getAttribute("ftfcssList") != null) {
					session.removeAttribute("ftfcssList");
				}
				if (session.getAttribute("ftfagssAdd") != null) {
					session.removeAttribute("ftfagssAdd");
				}
				session.setAttribute("editrecord", "save");
				session.setAttribute("ftfeditrecord", "save");
			}
			FORWARD = "popupForwardPage";
		}
		if (session.getAttribute("ftfdetails") != null) {
			session.removeAttribute("ftfdetails");
		}
		return mapping.findForward(FORWARD);

	}
}