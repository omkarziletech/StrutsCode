/*
 * Generated by MyEclipse Struts
 * Template path: templates/java/JavaClass.vtl
 */
package com.gp.cong.logisoft.struts.ratemangement.action;

import java.io.File;
import java.io.FileOutputStream;
import java.util.ArrayList;
import java.util.HashSet;
import java.util.List;
import java.util.Set;

import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;
import javax.servlet.http.HttpSession;

import org.apache.struts.action.Action;
import org.apache.struts.action.ActionForm;
import org.apache.struts.action.ActionForward;
import org.apache.struts.action.ActionMapping;
import org.apache.struts.upload.FormFile;

import com.gp.cong.logisoft.struts.ratemangement.form.LoadFCLPopupForm;
import com.gp.cong.logisoft.util.APLRatesExcelReader;
import com.gp.cong.logisoft.util.LoadAPLRates;

/** 

action path="/loadFCLPopup" name="loadFCLPopupForm" input="/form/loadFCLPopup.jsp" scope="request"
 */
public class LoadFCLPopupAction extends Action {

    public ActionForward execute(ActionMapping mapping, ActionForm form,
            HttpServletRequest request, HttpServletResponse response)throws Exception {
        LoadFCLPopupForm loadFCLPopupForm = (LoadFCLPopupForm) form;
        HttpSession session = ((HttpServletRequest) request).getSession();
            // Process the FormFile
            FormFile myFile = loadFCLPopupForm.getTheFile();
            String contentType = myFile.getContentType();

            //Get the file name
            String fileName = myFile.getFileName();

            //int fileSize       = myFile.getFileSize();

            byte[] fileData = myFile.getFileData();

            //Get the servers upload directory real path name

            String filePath = getServlet().getServletContext().getRealPath("/");

            /* Save file on the server */

            if (!fileName.equals("")) {

                //Create file
                File fileToCreate = new File(filePath, fileName);

                //If file does not exists create file
                if (!fileToCreate.exists()) {
                    FileOutputStream fileOutStream = new FileOutputStream(fileToCreate);
                    fileOutStream.write(myFile.getFileData());
                    fileOutStream.flush();
                    fileOutStream.close();
                }
                // Store date in file
                Set<String> denialList = new HashSet<String>();
                List reco = new ArrayList();
                //LoadRecords load =new LoadRecords();
                //reco=load.loadEcxellSheet(fileToCreate);

                APLRatesExcelReader aplRatesExcelReader = new APLRatesExcelReader();
                LoadAPLRates loadAPLRates = new LoadAPLRates();
                denialList = loadAPLRates.validate(aplRatesExcelReader.getAPLRatesUSCargoAsList(fileToCreate));
                if (!denialList.isEmpty()) {
                    request.setAttribute("denailList", denialList);
                } else {
                    loadAPLRates.execute(aplRatesExcelReader.getAPLRatesUSCargoAsList(fileToCreate));
                    request.setAttribute("successfullyLoaded", "We Inserted " + aplRatesExcelReader.getAPLRatesUSCargoAsList(fileToCreate).size() + " Records in DB..");
                }
                fileToCreate.delete();
            /*if(reco.get(0) instanceof List){
            inser=(List)reco.get(0);
            reco.remove(0);
            }

            if(session.getAttribute("futurerates")!=null){
            session.removeAttribute("futurerates");
            }
            session.setAttribute("list", reco)	;
            if(inser!=null){
            session.setAttribute("notInsertlist", inser)	;
            }*/
            }












        return mapping.findForward("success");
    }
}
