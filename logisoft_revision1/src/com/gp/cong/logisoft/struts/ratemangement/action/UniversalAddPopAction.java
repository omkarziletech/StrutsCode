/*
 * Generated by MyEclipse Struts
 * Template path: templates/java/JavaClass.vtl
 */
package com.gp.cong.logisoft.struts.ratemangement.action;

import java.util.ArrayList;
import java.util.Iterator;
import java.util.List;

import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;
import javax.servlet.http.HttpSession;

import org.apache.struts.action.Action;
import org.apache.struts.action.ActionForm;
import org.apache.struts.action.ActionForward;
import org.apache.struts.action.ActionMapping;

import com.gp.cong.logisoft.beans.AirRatesBean;
import com.gp.cong.logisoft.domain.GenericCode;
import com.gp.cong.logisoft.domain.UniversalMaster;
import com.gp.cong.logisoft.domain.LCLPortConfiguration;
import com.gp.cong.logisoft.domain.Ports;
import com.gp.cong.logisoft.domain.PortsTemp;
import com.gp.cong.logisoft.domain.RefTerminalTemp;
import com.gp.cong.logisoft.hibernate.dao.GenericCodeDAO;
import com.gp.cong.logisoft.hibernate.dao.PortsDAO;
import com.gp.cong.logisoft.hibernate.dao.RefTerminalDAO;
import com.gp.cong.logisoft.struts.ratemangement.form.UniversalAddPopForm;
import com.gp.cong.logisoft.util.DBUtil;

/** 
 * MyEclipse Struts
 * Creation date: 07-30-2008
 * 
 * XDoclet definition:
 * @struts.action path="/universalAddPop" name="universalAddPopForm" input="jsps/ratemanagement/universalAddPop.jsp" scope="request"
 */
public class UniversalAddPopAction extends Action {
    /*
     * Generated Methods
     */

    /**
     * Method execute
     * @param mapping
     * @param form
     * @param request
     * @param response
     * @return ActionForward
     */
    public ActionForward execute(ActionMapping mapping, ActionForm form,
            HttpServletRequest request, HttpServletResponse response) throws Exception {
        UniversalAddPopForm addLclColoadPopupForm = (UniversalAddPopForm) form;// TODO Auto-generated method stub
        String buttonValue = addLclColoadPopupForm.getButtonValue();
        HttpSession session = ((HttpServletRequest) request).getSession();
        UniversalMaster universalMaster = new UniversalMaster();
        DBUtil dbutil = new DBUtil();
        List list = new ArrayList();
        String common = addLclColoadPopupForm.getCommon();
        RefTerminalDAO refTerminalDAO = new RefTerminalDAO();
        PortsDAO portsDAO = new PortsDAO();
        String trmNum = addLclColoadPopupForm.getTerminalNumber();
        String portName = addLclColoadPopupForm.getDestAirportname();
        String portNum = addLclColoadPopupForm.getDestSheduleNumber();
        String comCode = addLclColoadPopupForm.getComCode();
        AirRatesBean airRatesBean = new AirRatesBean();
        airRatesBean.setCommon(common);
        request.setAttribute("airRatesBean", airRatesBean);
        GenericCodeDAO genericCodeDAO = new GenericCodeDAO();
        if (session.getAttribute("addUniversalMaster") != null) {
            universalMaster = (UniversalMaster) session.getAttribute("addUniversalMaster");
        }
        if (trmNum != null && !trmNum.equals("")) {
            RefTerminalTemp refTerminal = refTerminalDAO.findById1(trmNum);
            if (refTerminal != null) {
                universalMaster.setOriginTerminal(refTerminal);
                session.setAttribute("addUniversalMaster", universalMaster);
            } else {
                //request.setAttribute("update", "Please enter proper terminal number");
            }
        }

        if (portNum != null && !portNum.equals("")) {
            List portsList = portsDAO.findports(portNum);
            if (portsList != null && portsList.size() > 0) {
                PortsTemp ports = (PortsTemp) portsList.get(0);
                universalMaster.setDestinationPort(ports);
                session.setAttribute("addUniversalMaster", universalMaster);
            } else {
                //request.setAttribute("message", "Please enter proper Destination Port");
            }
        }


        if (comCode != null && !comCode.equals("")) {
            List comList = genericCodeDAO.findForGenericCode(comCode);
            if (comList != null && comList.size() > 0) {
                GenericCode gen = (GenericCode) comList.get(0);
                universalMaster.setCommodityCode(gen);
                if (gen.getCode().equals("000000")) {
                    session.setAttribute("setLCLColoadTabEnable", "enable");
                } else {
                    //session.removeAttribute("setLCLColoadTabEnable");
                }
                session.setAttribute("addUniversalMaster", universalMaster);
            } else {
                //request.setAttribute("update", "Please enter proper Commodity Code");
            }
        }
        if (common != null && common.equals("common")) {
            GenericCode genObj = genericCodeDAO.findById(11292);
            universalMaster.setCommodityCode(genObj);
            session.setAttribute("addUniversalMaster", universalMaster);

        //session.setAttribute("setLCLColoadTabEnable", "enable");

        }
        PortsDAO portDAO = new PortsDAO();
        if (buttonValue != null && buttonValue.equals("search")) {

            String defaultRate = "";
            if (session.getAttribute("addUniversalMaster") != null) {
                universalMaster = (UniversalMaster) session.getAttribute("addUniversalMaster");

                if (universalMaster.getDestinationPort() != null && universalMaster.getDestinationPort().getId() != null) {
                    Ports ports = portDAO.findById(universalMaster.getDestinationPort().getId());
                    if (ports.getLclPortConfigSet() != null) {

                        Iterator iter = ports.getLclPortConfigSet().iterator();
                        while (iter.hasNext()) {
                            LCLPortConfiguration lcl = (LCLPortConfiguration) iter.next();
                            if (lcl.getDefaultRate() != null) {
                                defaultRate = lcl.getDefaultRate();
                                session.setAttribute("unibverdefaultRate", defaultRate);
                                break;

                            }
                        }
                    }
                }
            }
            request.setAttribute("adduniversal", "adduniversal");
            session.setAttribute("universaltabs", "save");


            if (request.getAttribute("update") == null) {
                list = dbutil.getUniversalRecords(universalMaster.getOriginTerminal(), universalMaster.getDestinationPort(), universalMaster.getCommodityCode());

                if (list != null && list.size() > 0) {

                    request.setAttribute("update", "This COmbination is already exist");

                }
            }
        }
        if (session.getAttribute("view") != null) {
            session.removeAttribute("view");
        }
        if (session.getAttribute("lclairRatesBean") != null) {
            session.removeAttribute("lclairRatesBean");
        }
        if (session.getAttribute("llcommonList") != null) {
            session.removeAttribute("llcommonList");
        }
        if (session.getAttribute("llnoncommonList") != null) {
            session.removeAttribute("llnoncommonList");
        }
        if (session.getAttribute("llrecords") != null) {
            session.removeAttribute("llrecords");
        }
        if (session.getAttribute("lCLColoadMaster") != null) {
            session.removeAttribute("lCLColoadMaster");
        }
        if (session.getAttribute("lcldocChargesAdd") != null) {
            session.removeAttribute("lcldocChargesAdd");
        }
        if (session.getAttribute("lclcoloaddetails") != null) {
            session.removeAttribute("lclcoloaddetails");
        }
        if (session.getAttribute("coStandardCharges") != null) {
            session.removeAttribute("coStandardCharges");
        }

        if (session.getAttribute("cssList") != null) {
            session.removeAttribute("cssList");
        }

        if (session.getAttribute("applylclcoloadcharges") != null) {
            session.removeAttribute("applylclcoloadcharges");
        }
        if (session.getAttribute("includedList") != null) {
            session.removeAttribute("includedList");
        }
        if (session.getAttribute("coStandardCharges") != null) {

            session.removeAttribute("coStandardCharges");
        }

        if (session.getAttribute("message") != null) {
            session.removeAttribute("message");
        }


        return mapping.getInputForward();
    }
}