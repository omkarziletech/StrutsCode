/*
 * Generated by MyEclipse Struts
 * Template path: templates/java/JavaClass.vtl
 */
package com.gp.cong.logisoft.struts.ratemangement.action;

import java.util.List;

import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;
import javax.servlet.http.HttpSession;

import org.apache.struts.action.Action;
import org.apache.struts.action.ActionForm;
import org.apache.struts.action.ActionForward;
import org.apache.struts.action.ActionMapping;

import com.gp.cong.logisoft.beans.CodeBean;
import com.gp.cong.logisoft.domain.FclBuy;
import com.gp.cong.logisoft.domain.FTFMaster;
import com.gp.cong.logisoft.domain.GeneralInformation;
import com.gp.cong.logisoft.domain.GenericCode;
import com.gp.cong.logisoft.domain.LCLColoadMaster;
import com.gp.cong.logisoft.domain.RetailStandardCharges;
import com.gp.cong.logisoft.domain.StandardCharges;
import com.gp.cong.logisoft.domain.UniversalMaster; // import
// com.gp.cong.logisoft.domain.UniversalMaster;
import com.gp.cong.logisoft.domain.Warehouse;
import com.gp.cong.logisoft.hibernate.dao.GenericCodeDAO;
import com.gp.cong.logisoft.struts.ratemangement.form.SearchComCodeForm;
import com.gp.cvst.logisoft.domain.BookingFcl;
import com.gp.cvst.logisoft.domain.Quotation;

/**
 * MyEclipse Struts Creation date: 03-04-2008
 * 
 * XDoclet definition:
 * 
 * @struts.action path="/searchComCode" name="searchComCodeForm"
 *                input="/jsps/ratemanagement/searchComCode.jsp" scope="request"
 *                validate="true"
 */
public class SearchComCodeAction extends Action {
    /*
     * Generated Methods
     */

    /**
     * Method execute
     *
     * @param mapping
     * @param form
     * @param request
     * @param response
     * @return ActionForward
     */
    public ActionForward execute(ActionMapping mapping, ActionForm form,
            HttpServletRequest request, HttpServletResponse response) throws Exception {
        SearchComCodeForm searchComCodeForm = (SearchComCodeForm) form;// TODO
        // Auto-generated
        // method
        // stub
        HttpSession session = ((HttpServletRequest) request).getSession();
        String buttonValue = searchComCodeForm.getButtonValue();
        String code = searchComCodeForm.getCode();
        String codeDesc = searchComCodeForm.getCodeDescription();
        GenericCodeDAO genericDAO = new GenericCodeDAO();
        GenericCode genericCodeObj = new GenericCode();
        String search = "";
        String path1 = "";
        StandardCharges airrates = null;

        RetailStandardCharges retailStandardCharges = null;
        int index = -1;
        if (searchComCodeForm.getIndex() != null && !searchComCodeForm.getIndex().equals("")) {
            index = Integer.parseInt(searchComCodeForm.getIndex());
        }
        if ((request.getParameter("index") != null && !request.getParameter(
                "index").equals("")) || searchComCodeForm.getIndex() != null && !searchComCodeForm.getIndex().equals("")) {
            int ind = Integer.parseInt(request.getParameter("index"));
            if (index >= 0) {
                ind = index;
            }
            List codeList1 = (List) session.getAttribute("codeList");
            if (session.getAttribute("searchCode") != null) {
                search = (String) session.getAttribute("searchCode");
            }
            genericCodeObj = (GenericCode) codeList1.get(ind);
            if (search.equals("searchpcomcode") || search.equals("addcomcode")) {
                if (search.equals("searchpcomcode")) {
                    if (session.getAttribute("manageairrates") == null) {
                        airrates = new StandardCharges();
                    } else {
                        airrates = (StandardCharges) session.getAttribute("manageairrates");
                    }
                }
                if (search.equals("addcomcode")) {
                    if (session.getAttribute("standardCharges") == null) {
                        airrates = new StandardCharges();
                    } else {
                        airrates = (StandardCharges) session.getAttribute("standardCharges");
                    }
                }
                if (session.getAttribute("setTabEnable") != null) {
                    session.removeAttribute("setTabEnable");
                }

                genericCodeObj = (GenericCode) codeList1.get(ind);
                if (genericCodeObj.getCode().equals("000000")) {
                    session.setAttribute("setTabEnable", "enable");
                }

                airrates.setComCode(genericCodeObj);
                if (search.equals("searchpcomcode")) {
                    session.setAttribute("manageairrates", airrates);
                    path1 = "jsps/ratemanagement/manageAirRates.jsp";
                    if (session.getAttribute("commonList") != null) {
                        session.removeAttribute("commonList");
                    }
                    if (session.getAttribute("noncommonList") != null) {
                        session.removeAttribute("noncommonList");
                    }
                    if (session.getAttribute("Airmessage") != null) {
                        session.removeAttribute("Airmessage");
                    }

                }

                if (search.equals("addcomcode")) {
                    session.setAttribute("standardCharges", airrates);
                    session.setAttribute("exist", "records");
                    path1 = "jsps/ratemanagement/addAirRatesPopup.jsp";
                }
                if (session.getAttribute("codeList") != null) {
                    session.removeAttribute("codeList");
                }

            /*
             * airrates.setCommodityCode(genericCodeObj);
             * if(search.equals("searchpcomcode")) {
             * session.setAttribute("searchComCode", airrates);
             * path1="jsps/ratemanagement/manageAirRates.jsp"; }
             * if(search.equals("addcomcode")) {
             * session.setAttribute("addComCode", airrates);
             * path1="jsps/ratemanagement/addAirRatesPopup.jsp"; }
             */
            } else if (search.equals("NewBookingFCLs")) {
                BookingFcl b1 = new BookingFcl();
                if (session.getAttribute("bookingValues") != null) {
                    b1 = (BookingFcl) session.getAttribute("bookingValues");
                } else {
                    b1 = new BookingFcl();
                }
                b1.setComcode(genericCodeObj.getCode());
                b1.setComdesc(genericCodeObj.getCodedesc());
                session.setAttribute("bookingValues", b1);
                path1 = "jsps/fclQuotes/newBookings.jsp";
            }
            if (search.equals("retailsearchpcomcode") || search.equals("retailaddcomcode")) {
                if (search.equals("retailsearchpcomcode")) {
                    if (session.getAttribute("retailmanage") == null) {
                        retailStandardCharges = new RetailStandardCharges();
                    } else {
                        retailStandardCharges = (RetailStandardCharges) session.getAttribute("retailmanage");
                    }
                }
                if (search.equals("retailaddcomcode")) {
                    if (session.getAttribute("retailstandardCharges") == null) {
                        retailStandardCharges = new RetailStandardCharges();
                    } else {
                        retailStandardCharges = (RetailStandardCharges) session.getAttribute("retailstandardCharges");
                    }
                }

                genericCodeObj = (GenericCode) codeList1.get(ind);
                if (session.getAttribute("retailsetTabEnable") != null) {
                    session.removeAttribute("retailsetTabEnable");
                }
                if (genericCodeObj.getCode().equals("000000")) {
                    session.setAttribute("retailsetTabEnable", "retailenable");
                }

                //retailStandardCharges.setComCode(genericCodeObj);
                if (search.equals("retailsearchpcomcode")) {
                    session.setAttribute("retailmanage", retailStandardCharges);
                    path1 = "jsps/ratemanagement/manageRetailRates.jsp";
                }
                if (search.equals("retailaddcomcode")) {
                    session.setAttribute("retailstandardCharges",
                            retailStandardCharges);
                    session.setAttribute("exist", "records");
                    path1 = "jsps/ratemanagement/retailAddAirRatesPopup.jsp";
                }
                if (session.getAttribute("codeList") != null) {
                    session.removeAttribute("codeList");
                }
            } else if (search.equals("searchipicommodity")) {
                Warehouse warehouse = null;
                if (session.getAttribute("warehouse") != null) {
                    warehouse = (Warehouse) session.getAttribute("warehouse");
                } else {
                    warehouse = new Warehouse();
                }
                warehouse.setCommodityNo(genericCodeObj.getCode());
                session.setAttribute("warehouse", warehouse);
                path1 = "jsps/datareference/addWarehouse.jsp";
            } else if (search.equals("searchlclcoload")) {
                LCLColoadMaster lclColoadMaster = null;
                if (session.getAttribute("searchlclColoadMaster") != null) {
                    lclColoadMaster = (LCLColoadMaster) session.getAttribute("searchlclColoadMaster");
                } else {
                    lclColoadMaster = new LCLColoadMaster();
                }

                //lclColoadMaster.setCommodityCode(genericCodeObj);
                session.setAttribute("searchlclColoadMaster", lclColoadMaster);
                path1 = "jsps/ratemanagement/SearchLCLCoload.jsp";
            } else if (search.equals("searchUniversal")) {
                UniversalMaster universalMaster = null;
                if (session.getAttribute("searchuniMaster") != null) {
                    universalMaster = (UniversalMaster) session.getAttribute("searchuniMaster");
                } else {
                    universalMaster = new UniversalMaster();
                }
                universalMaster.setCommodityCode(genericCodeObj);
                session.setAttribute("searchuniMaster", universalMaster);
                path1 = "jsps/ratemanagement/SearchUniversal.jsp";
                if (session.getAttribute("unicommonList") != null) {
                    session.removeAttribute("unicommonList");

                }
                if (session.getAttribute("uninoncommonList") != null) {
                    session.removeAttribute("uninoncommonList");
                }
                if (session.getAttribute("unimessage") != null) {
                    session.removeAttribute("unimessage");
                }
            } // Methods for FCL Commodity code
            else if (search.equals("searchfcl")) {
                FclBuy fclBuy = null;
                if (session.getAttribute("searchfclrecords") != null) {
                    fclBuy = (FclBuy) session.getAttribute("searchfclrecords");
                } else {
                    fclBuy = new FclBuy();
                }

                fclBuy.setComNum(genericCodeObj);
                session.setAttribute("searchfclrecords", fclBuy);
                path1 = "jsps/ratemanagement/SearchFCL.jsp";
            } // THIS ELSE for ADD FCL Commodity code
            else if (search.equals("addfcl")) {
                FclBuy fclBuy = null;
                if (session.getAttribute("addfclrecords") != null) {
                    fclBuy = (FclBuy) session.getAttribute("addfclrecords");
                } else {
                    fclBuy = new FclBuy();
                }

                fclBuy.setComNum(genericCodeObj);
                session.setAttribute("addfclrecords", fclBuy);
                // session.setAttribute("exist", "records");
                path1 = "jsps/ratemanagement/AddFCLPopup.jsp";
            } else if (search.equals("addlclcoload")) {
                LCLColoadMaster lclColoadMaster = null;
                if (session.getAttribute("addlclColoadMaster") != null) {
                    lclColoadMaster = (LCLColoadMaster) session.getAttribute("addlclColoadMaster");
                } else {
                    lclColoadMaster = new LCLColoadMaster();
                }
                //lclColoadMaster.setCommodityCode(genericCodeObj);
                if (session.getAttribute("setLCLColoadTabEnable") != null) {
                    session.removeAttribute("setLCLColoadTabEnable");
                }
                if (genericCodeObj.getCode().equals("000000")) {
                    session.setAttribute("setLCLColoadTabEnable", "enable");
                }
                if (search.equals("addlclcoload")) {
                    session.setAttribute("addlclColoadMaster", lclColoadMaster);
                    session.setAttribute("exist", "records");
                    path1 = "jsps/ratemanagement/AddLclColoadPopup.jsp";
                }
                if (session.getAttribute("codeList") != null) {
                    session.removeAttribute("codeList");
                }
                session.setAttribute("addlclColoadMaster", lclColoadMaster);

            } else if (search.equals("searchftf")) {
                FTFMaster ftfMaster = null;
                if (session.getAttribute("searchftfMaster") != null) {
                    ftfMaster = (FTFMaster) session.getAttribute("searchftfMaster");
                } else {
                    ftfMaster = new FTFMaster();
                }

                //ftfMaster.setCommodityCode(genericCodeObj);
                session.setAttribute("searchftfMaster", ftfMaster);
                path1 = "jsps/ratemanagement/searchFTF.jsp";
                if (session.getAttribute("ftfrecords") != null) {
                    session.removeAttribute("ftfrecords");
                }
                if (session.getAttribute("ftfcommonList") != null) {
                    session.removeAttribute("ftfcommonList");
                }
                if (session.getAttribute("ftfmessage") != null) {
                    session.removeAttribute("ftfmessage");
                }
            } else if (search.equals("addftf")) {
                FTFMaster ftfMaster = null;
                if (session.getAttribute("addftfMaster") != null) {
                    ftfMaster = (FTFMaster) session.getAttribute("addftfMaster");
                } else {
                    ftfMaster = new FTFMaster();
                }
                //ftfMaster.setCommodityCode(genericCodeObj);
                if (session.getAttribute("setftfTabEnable") != null) {
                    session.removeAttribute("setftfTabEnable");
                }
                if (genericCodeObj.getCode().equals("000000")) {
                    session.setAttribute("setftfTabEnable", "enable");
                }
                session.setAttribute("addftfMaster", ftfMaster);
                path1 = "jsps/ratemanagement/addFTFpopup.jsp";
            } else if (search.equals("commodity") || search.equals("editcommodity")) {
                GeneralInformation generalInformation = null;
                if (session.getAttribute("generalInformation") != null) {
                    generalInformation = (GeneralInformation) session.getAttribute("generalInformation");
                } else {
                    generalInformation = new GeneralInformation();
                }
                generalInformation.setGenericCode(genericCodeObj);
                session.setAttribute("generalInformation", generalInformation);
                if (search.equals("commodity")) {
                    path1 = "jsps/Tradingpartnermaintainance/GeneralInformation.jsp";
                } else if (search.equals("editcommodity")) {
                    path1 = "jsps/Tradingpartnermaintainance/EditGeneralInformation.jsp";
                }
            } else if (search.equals("mastereditcommodity")) {
                GeneralInformation generalInformation = null;
                if (session.getAttribute("mastergeneralInformation") != null) {
                    generalInformation = (GeneralInformation) session.getAttribute("mastergeneralInformation");
                } else {
                    generalInformation = new GeneralInformation();
                }
                generalInformation.setGenericCode(genericCodeObj);
                session.setAttribute("mastergeneralInformation",
                        generalInformation);
                path1 = "jsps/Tradingpartnermaintainance/masterEditGeneralInformation.jsp";
            } else if (search.equals("mastercommodity")) {
                GeneralInformation generalInformation = null;
                if (session.getAttribute("mastergeneralInformation") != null) {
                    generalInformation = (GeneralInformation) session.getAttribute("mastergeneralInformation");
                } else {
                    generalInformation = new GeneralInformation();
                }
                generalInformation.setGenericCode(genericCodeObj);
                session.setAttribute("mastergeneralInformation",
                        generalInformation);
                path1 = "jsps/Tradingpartnermaintainance/MasterGeneralInformation.jsp";
            } else if (search.equals("importcommodity") || search.equals("editimportcommodity")) {

                GeneralInformation generalInformation = null;
                if (session.getAttribute("generalInformation") != null) {
                    generalInformation = (GeneralInformation) session.getAttribute("generalInformation");
                } else {
                    generalInformation = new GeneralInformation();
                }

                generalInformation.setImpCommodity(genericCodeObj);
                session.setAttribute("generalInformation", generalInformation);
                if (search.equals("importcommodity")) {
                    path1 = "jsps/Tradingpartnermaintainance/GeneralInformation.jsp";
                } else if (search.equals("editimportcommodity")) {
                    path1 = "jsps/Tradingpartnermaintainance/EditGeneralInformation.jsp";
                }
            } else if (search.equals("mastereditimportcommodity")) {

                GeneralInformation generalInformation = null;
                if (session.getAttribute("mastergeneralInformation") != null) {
                    generalInformation = (GeneralInformation) session.getAttribute("mastergeneralInformation");
                } else {
                    generalInformation = new GeneralInformation();
                }
                generalInformation.setImpCommodity(genericCodeObj);
                session.setAttribute("mastergeneralInformation",
                        generalInformation);
                path1 = "jsps/Tradingpartnermaintainance/masterEditGeneralInformation.jsp";
            } else if (search.equals("masterimportcommodity")) {

                GeneralInformation generalInformation = null;
                if (session.getAttribute("mastergeneralInformation") != null) {
                    generalInformation = (GeneralInformation) session.getAttribute("mastergeneralInformation");
                } else {
                    generalInformation = new GeneralInformation();
                }
                generalInformation.setImpCommodity(genericCodeObj);
                session.setAttribute("mastergeneralInformation",
                        generalInformation);
                path1 = "jsps/Tradingpartnermaintainance/MasterGeneralInformation.jsp";
            } // added by chandu
            else if (search.equals("Quotecommodity")) {

                genericCodeObj = (GenericCode) codeList1.get(ind);
                Quotation quotes = null;
                if (session.getAttribute("QuoteValues") != null) {
                    quotes = (Quotation) session.getAttribute("QuoteValues");
                } else {
                    quotes = new Quotation();
                }
                quotes.setCommcode(genericCodeObj);
                session.setAttribute("generalInformation", quotes);
                path1 = "jsps/fclQuotes/Quote.jsp";

            } else if (search.equals("Quotecommodityedit")) {

                genericCodeObj = (GenericCode) codeList1.get(ind);

                Quotation quotes = null;
                if (session.getAttribute("editdetails") != null) {

                    quotes = (Quotation) session.getAttribute("editdetails");
                } else {

                    quotes = new Quotation();
                }
                quotes.setCommcode(genericCodeObj);
                session.setAttribute("generalInformation", quotes);
                path1 = "jsps/fclQuotes/EditQuote.jsp";

            } // comCodequottab for tab functionality in Quotes.jsp
            else if (search.equals("comCodequottab")) {
                genericCodeObj = (GenericCode) codeList1.get(ind);
                Quotation quotes = null;
                if (session.getAttribute("QuoteValues") != null) {
                    quotes = (Quotation) session.getAttribute("QuoteValues");
                } else {
                    quotes = new Quotation();
                }
                quotes.setCommcode(genericCodeObj);
                session.setAttribute("generalInformation", quotes);
                path1 = "jsps/fclQuotes/Quote.jsp";

            } else if (search.equals("editipicommodity")) {
                Warehouse warehouse = null;
                if (session.getAttribute("warehouse") != null) {
                    warehouse = (Warehouse) session.getAttribute("warehouse");
                } else {
                    warehouse = new Warehouse();
                }
                warehouse.setCommodityNo(genericCodeObj.getCode());
                session.setAttribute("warehouse", warehouse);
                path1 = "jsps/datareference/editWarehouse.jsp";
            } else if (search.equals("genericode")) {
                CodeBean codeBean = new CodeBean();
                codeBean.setCodeDesc(genericCodeObj.getCodedesc());
                codeBean.setCodeValue(genericCodeObj.getCode());
                codeBean.setMatch("starts");
                session.setAttribute("codeBean", codeBean);
                path1 = "jsps/datareference/GenericCodeMaintenance.jsp";
            }
            request.setAttribute("path1", path1);
            request.setAttribute("buttonValue", "completed");
        } else {
            if (buttonValue.equals("search")) {
                List codeList = genericDAO.findForAirRates(code, codeDesc);
                session.setAttribute("codeList", codeList);
            }
        }
        return mapping.findForward("searchcomcode");
    }
}