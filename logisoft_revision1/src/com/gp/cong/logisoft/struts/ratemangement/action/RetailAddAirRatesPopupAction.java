/*
 * Generated by MyEclipse Struts
 * Template path: templates/java/JavaClass.vtl
 */
package com.gp.cong.logisoft.struts.ratemangement.action;

import java.util.ArrayList;
import java.util.List;

import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;
import javax.servlet.http.HttpSession;

import org.apache.commons.lang3.StringUtils;
import org.apache.struts.action.Action;
import org.apache.struts.action.ActionForm;
import org.apache.struts.action.ActionForward;
import org.apache.struts.action.ActionMapping;

import com.gp.cong.logisoft.domain.GenericCode;
import com.gp.cong.logisoft.domain.RetailStandardCharges;
import com.gp.cong.logisoft.domain.UnLocation;
import com.gp.cong.logisoft.hibernate.dao.GenericCodeDAO;
import com.gp.cong.logisoft.hibernate.dao.UnLocationDAO;
import com.gp.cong.logisoft.struts.ratemangement.form.RetailAddAirRatesPopupForm;
import com.gp.cong.logisoft.util.DBUtil;

public class RetailAddAirRatesPopupAction extends Action {

    public ActionForward execute(ActionMapping mapping, ActionForm form,
            HttpServletRequest request, HttpServletResponse response) throws Exception {
        RetailAddAirRatesPopupForm retailAddAirRatesPopupForm = (RetailAddAirRatesPopupForm) form;// TODO
        // Auto-generated
        // method
        // stub
        HttpSession session = ((HttpServletRequest) request).getSession();
        String buttonValue = retailAddAirRatesPopupForm.getButtonValue();
        RetailStandardCharges retailRatesObj1 = new RetailStandardCharges();
        String terminalName = retailAddAirRatesPopupForm.getTerminalName();
        String terminalNumber = retailAddAirRatesPopupForm.getTerminalNumber();
        String portNum = retailAddAirRatesPopupForm.getDestSheduleNumber();
        String portName = retailAddAirRatesPopupForm.getDestAirportname();
        String comCode = retailAddAirRatesPopupForm.getComCode();
        UnLocation unLocationForTerminal = null;
        UnLocation unLocationForPorts = null;
        UnLocationDAO unLocationDAO = new UnLocationDAO();
        String enable = "";
        String common = retailAddAirRatesPopupForm.getCommon();
        List list = new ArrayList();
        DBUtil dbutil = new DBUtil();
        String FORWARD = null;
        if (session.getAttribute("retailstandardCharges") != null) {
            retailRatesObj1 = (RetailStandardCharges) session.getAttribute("retailstandardCharges");
        }
        GenericCodeDAO genericCodeDAO = new GenericCodeDAO();
        if (buttonValue != null && buttonValue.equals("search")) {
            if (terminalNumber != null && !terminalNumber.equals("")) {
                List unLocationList = unLocationDAO.findForManagement(
                        terminalNumber, terminalName);
                if (unLocationList != null && unLocationList.size() > 0) {
                    unLocationForTerminal = (UnLocation) unLocationList.get(0);


                    retailRatesObj1.setOrgTerminal(unLocationForTerminal.getUnLocationCode());
                    retailRatesObj1.setOrgTerminalName(unLocationForTerminal.getUnLocationName());
                }
            } else if (terminalName != null && !terminalName.equals("")) {
                String stringTokens[] = StringUtils.splitPreserveAllTokens(
                        terminalName, '-');
                if (stringTokens != null && stringTokens.length > 1) {
                    terminalName = stringTokens[0];
                    terminalNumber = stringTokens[1];
                }
                List terminal = unLocationDAO.findForManagement(terminalNumber,
                        terminalName);
                if (terminal.size() > 0) {
                    unLocationForTerminal = (UnLocation) terminal.get(0);
                }
                if (unLocationForTerminal != null) {
                    retailRatesObj1.setOrgTerminal(unLocationForTerminal.getUnLocationCode());
                    retailRatesObj1.setOrgTerminalName(unLocationForTerminal.getUnLocationName());
                }
            }
            if (portNum != null && !portNum.equals("")) {
                List portsList = unLocationDAO.findForManagement(portNum, null);
                if (portsList != null && portsList.size() > 0) {
                    unLocationForPorts = (UnLocation) portsList.get(0);

                    retailRatesObj1.setDestPort(unLocationForPorts.getUnLocationCode());
                    retailRatesObj1.setDestPortName(unLocationForPorts.getUnLocationName());
                }
            } else if (portName != null && !portName.equals("")) {
                String stringTokens[] = StringUtils.splitPreserveAllTokens(
                        portName, '-');
                if (stringTokens != null && stringTokens.length > 1) {
                    portName = stringTokens[0];
                    portNum = stringTokens[1];
                }
                List portsList = unLocationDAO.findForManagement(portNum,
                        portName);
                if (portsList != null && portsList.size() > 0) {
                    unLocationForPorts = (UnLocation) portsList.get(0);
                    retailRatesObj1.setDestPort(unLocationForPorts.getUnLocationCode());
                    retailRatesObj1.setDestPortName(unLocationForPorts.getUnLocationName());
                }
            }
            if (comCode != null && !comCode.equals("")) {
                List comList = genericCodeDAO.findForGenericCode(comCode);
                if (comList != null && comList.size() > 0) {
                    GenericCode gen = (GenericCode) comList.get(0);
                    retailRatesObj1.setComCode(gen.getCode());
                    retailRatesObj1.setComCodeName(gen.getCodedesc());
                    if (comCode.equals("000000")) {
                        session.setAttribute("retailsetTabEnable",
                                "retailenable");
                    } else {
                        session.removeAttribute("retailsetTabEnable");
                    }
                    session.setAttribute("retailstandardCharges",
                            retailRatesObj1);
                }
            }
            if (common != null && common.equals("common")) {
                //GenericCode genObj = genericCodeDAO.findById(11292);
                retailRatesObj1.setComCode(common);
                session.setAttribute("retailstandardCharges", retailRatesObj1);
                session.setAttribute("retailsetTabEnable", "retailenable");
            }
            RetailStandardCharges re = null;
            String defaultRate = "";
            /*if (session.getAttribute("retailstandardCharges") != null) {

            re = (RetailStandardCharges) session
            .getAttribute("retailstandardCharges");
            }

            if (re.getDestPort() != null && re.getDestPort().getId() != null) {
            Ports ports = portDAO.findById(re.getDestPort().getId());
            System.out
            .println("PORT ID ID ID ID ID ID ID IDI D:0---------------"
            + ports);
            if (ports.getLclPortConfigSet() != null) {
            System.out
            .println("PORT ID ID ID ID ID ID ID IDI D:0---------------"
            + ports.getLclPortConfigSet());

            Iterator iter = ports.getLclPortConfigSet().iterator();
            while (iter.hasNext()) {
            System.out
            .println("PORT ID ID ID ID ID ID ID IDI D:0---------------"
            + ports.getLclPortConfigSet());
            LCLPortConfiguration lcl = (LCLPortConfiguration) iter
            .next();
            System.out
            .println(lcl.getId()
            + "PORT ID ID ID ID ID ID ID IDI D:0------inin---------"
            + ports.getLclPortConfigSet());
            if (lcl.getDefaultRate() != null) {
            defaultRate = lcl.getDefaultRate();
            session.setAttribute("retaildefaultRate",
            defaultRate);
            System.out
            .println("PORT ID ID ID ID ID ID ID IDI D:0---------------"
            + defaultRate);
            break;

            }
            }
            }
            }*/
            if (request.getAttribute("message") == null) {
                list = dbutil.getRetailDetails(
                        retailRatesObj1.getOrgTerminal(), retailRatesObj1.getDestPort(), retailRatesObj1.getComCode());

                if (list != null && list.size() > 0) {
                    request.setAttribute("message",
                            "This Combination is already exist");
                    FORWARD = "addratespopup";
                } else {
                    FORWARD = "popupForwardPage";
                    enable = "three";
                    session.setAttribute("addnew", enable);
                    request.setAttribute("retailrate", "addretailrate");
                }
                if (session.getAttribute("reairRatesBean") != null) {
                    session.removeAttribute("reairRatesBean");
                }

                if (session.getAttribute("retailFrieght") != null) {
                    session.removeAttribute("retailFrieght");
                }
                if (session.getAttribute("retaildocChargesAdd") != null) {
                    session.removeAttribute("retaildocChargesAdd");
                }
                if (session.getAttribute("retailagssAdd") != null) {
                    session.removeAttribute("retailagssAdd");
                }
                if (session.getAttribute("retaildocumentCharges") != null) {
                    session.removeAttribute("retaildocumentCharges");
                }
                if (session.getAttribute("retailStandardCharges") != null) {
                    session.removeAttribute("retailStandardCharges");
                }
                if (session.getAttribute("url") != null) {
                    session.removeAttribute("url");
                }
                session.setAttribute("retaileditrecord", "save");
            }

        }
        if (session.getAttribute("reairRatesBean") != null) {
            session.removeAttribute("reairRatesBean");
        }
        if (session.getAttribute("retailDetails") != null) {
            session.removeAttribute("retailDetails");
        }
        return mapping.findForward(FORWARD);

    }
}