/*
 * Generated by MyEclipse Struts
 * Template path: templates/java/JavaClass.vtl
 */
package com.gp.cong.logisoft.struts.ratemangement.action;

import java.util.ArrayList;
import java.util.List;

import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;
import javax.servlet.http.HttpSession;

import org.apache.commons.lang3.StringUtils;
import org.apache.struts.action.Action;
import org.apache.struts.action.ActionForm;
import org.apache.struts.action.ActionForward;
import org.apache.struts.action.ActionMapping;

import com.gp.cong.logisoft.beans.AirRatesBean;
import com.gp.cong.logisoft.domain.CarriersOrLineTemp;
import com.gp.cong.logisoft.domain.CustomerTemp;
import com.gp.cong.logisoft.domain.FclBuy;
import com.gp.cong.logisoft.domain.GenericCode;
import com.gp.cong.logisoft.domain.PortsTemp;
import com.gp.cong.logisoft.domain.RefTerminalTemp;
import com.gp.cong.logisoft.domain.StandardCharges;
import com.gp.cong.logisoft.domain.TradingPartnerTemp;
import com.gp.cong.logisoft.domain.UnLocation;
import com.gp.cong.logisoft.hibernate.dao.CarriersOrLineDAO;
import com.gp.cong.logisoft.hibernate.dao.CustomerDAO;
import com.gp.cong.logisoft.hibernate.dao.GenericCodeDAO;
import com.gp.cong.logisoft.hibernate.dao.PortsDAO;
import com.gp.cong.logisoft.hibernate.dao.RefTerminalDAO;
import com.gp.cong.logisoft.hibernate.dao.UnLocationDAO;
import com.gp.cong.logisoft.struts.ratemangement.form.AddFCLPopupForm;
import com.gp.cong.logisoft.util.DBUtil;

public class AddFCLPopupAction extends Action {
	/*
	 * Generated Methods
	 */

	public ActionForward execute(ActionMapping mapping, ActionForm form,
			HttpServletRequest request, HttpServletResponse response) throws Exception {
		AddFCLPopupForm addFCLPopupForm = (AddFCLPopupForm) form;// TODO
																	// Auto-generated
																	// method
																	// stub
		HttpSession session = ((HttpServletRequest) request).getSession();
		String buttonValue = addFCLPopupForm.getButtonValue();
		FclBuy fclBuy = new FclBuy();
		String trmNum = addFCLPopupForm.getTerminalNumber();
		String portNum = addFCLPopupForm.getDestSheduleNumber();
		String comCode = addFCLPopupForm.getComCode();
		String sslineNO = addFCLPopupForm.getSslinenumber();
		String tername = addFCLPopupForm.getTerminalName();
		String portName= addFCLPopupForm.getDestAirportname();
		String comCodedesc= addFCLPopupForm.getComDescription();
		String orgRegion=addFCLPopupForm.getOrgRegion();
		String destRegion=addFCLPopupForm.getDestRegion();
		String ssName= addFCLPopupForm.getTerminalName();
		CustomerDAO carriersOrLineDAO = new CustomerDAO();
		TradingPartnerTemp carriersOrLineTemp = new TradingPartnerTemp();
		UnLocationDAO refTerminalDAO = new UnLocationDAO();
		PortsDAO portsDAO = new PortsDAO();
		DBUtil dbutil = new DBUtil();
		List list = new ArrayList();
		String FORWARD = null;
		GenericCodeDAO genericCodeDAO = new GenericCodeDAO();
		if (session.getAttribute("addfclrecords") != null) {
			fclBuy = (FclBuy) session.getAttribute("addfclrecords");
		}
		if (trmNum != null && !trmNum.equals("")) {
			List unLocationList = refTerminalDAO.findForManagement(trmNum,null);
			if(unLocationList!=null && unLocationList.size()>0)
			{
			UnLocation refTerminal=(UnLocation)unLocationList.get(0);
				fclBuy.setOriginTerminal(refTerminal);
				session.setAttribute("addfclrecords", fclBuy);
			}
		} else if (tername != null && !tername.equals("")) {
			String stringTokens[] = StringUtils.splitPreserveAllTokens(tername, '-');
			 if(stringTokens!=null && stringTokens.length > 1) {
				    tername = stringTokens[0];
	                trmNum = stringTokens[1];
	            }
			UnLocation refTerminalobj = null;
			List terminal = refTerminalDAO.findForManagement(trmNum, tername);

			if (terminal.size() > 0) {
				refTerminalobj = (UnLocation) terminal.get(0);
			}
			if (refTerminalobj != null) {
				fclBuy.setOriginTerminal(refTerminalobj);
			}
		}

		if (portNum != null && !portNum.equals("")) {
			List portsList = refTerminalDAO.findForManagement(portNum,null);
			if (portsList != null && portsList.size() > 0) {
				UnLocation ports = (UnLocation) portsList.get(0);
				fclBuy.setDestinationPort(ports);
			}
		}else  if (portName != null && !portName.equals("")) {
			String stringTokens[] = StringUtils.splitPreserveAllTokens(portName, '-');
			 if(stringTokens!=null && stringTokens.length > 1) {
				 portName = stringTokens[0];
				    portNum = stringTokens[1];
	            }
			List portsList = refTerminalDAO.findForManagement(portNum, portName);
			if (portsList != null && portsList.size() > 0) {

				UnLocation ports = (UnLocation) portsList.get(0);
				fclBuy.setDestinationPort(ports);
				session.setAttribute("searchfclrecords", fclBuy);
			}
		}
		if (comCode != null && !comCode.equals("")) {
			List comList = genericCodeDAO.findForGenericCode(comCode);
			if (comList != null && comList.size() > 0) {
				GenericCode gen = (GenericCode) comList.get(0);
				fclBuy.setComNum(gen);
			}
		} 
		else if (comCodedesc != null && !comCodedesc.equals("")) {
			List codeList = genericCodeDAO.findForAirRates(null,
					comCodedesc);
			if (codeList != null && codeList.size() > 0) {
				GenericCode gen = (GenericCode) codeList.get(0);
				fclBuy.setComNum(gen);
				session.setAttribute("searchfclrecords", fclBuy);
			}

		}
		if (sslineNO != null && !sslineNO.equals("")
				|| (ssName != null && !ssName.equals(""))) {

			List SSNo = carriersOrLineDAO.findAccountNo1(sslineNO);
			if (SSNo != null && SSNo.size() > 0) {
				carriersOrLineTemp = (TradingPartnerTemp) SSNo.get(0);
				fclBuy.setSslineNo(carriersOrLineTemp);
				
			} 
		}else if (ssName != null && !ssName.equals("")) {
			List codeList = carriersOrLineDAO.findAccountName1(ssName);
			if (codeList != null && codeList.size() > 0) {
				TradingPartnerTemp carries = (TradingPartnerTemp) codeList.get(0);
				fclBuy.setSslineNo(carries);
				session.setAttribute("searchfclrecords", fclBuy);
			}
		}
		session.setAttribute("addfclrecords", fclBuy);
		FORWARD = "addfclpopup";
		if (buttonValue != null && buttonValue.equals("search")) {
			if (request.getAttribute("update") == null) {
				list = dbutil.getFCLDetails(fclBuy.getOriginTerminal(), fclBuy
						.getDestinationPort(), fclBuy.getComNum(), fclBuy
						.getSslineNo(),orgRegion,destRegion);

				if (list != null && list.size() > 0) {
					request.setAttribute("update","This Combination is already exist");
				}
			}
			fclBuy.setContract(null);
			fclBuy.setEndDate(null);
			fclBuy.setStartDate(null);
			session.setAttribute("addfclrecords", fclBuy);
			request.setAttribute("sendfclcontrol", "sendfclcontrol");
			session.setAttribute("editrecords", "save");
			FORWARD = "popupForwardPage";
		}
		return mapping.findForward("addfclpopup");
	}
}