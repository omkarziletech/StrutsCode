 /*
 * Generated by MyEclipse Struts
 * Template path: templates/java/JavaClass.vtl
 */
package com.gp.cong.logisoft.struts.ratemangement.action;

import java.util.List;

import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;
import javax.servlet.http.HttpSession;

import org.apache.struts.action.Action;
import org.apache.struts.action.ActionForm;
import org.apache.struts.action.ActionForward;
import org.apache.struts.action.ActionMapping;

import com.gp.cong.logisoft.domain.UnLocation;
import com.gp.cong.logisoft.domain.VoyageExport;
import com.gp.cong.logisoft.domain.VoyageInland;
import com.gp.cong.logisoft.domain.AirPortConfiguration;
import com.gp.cong.logisoft.domain.FCLPortConfiguration;
import com.gp.cong.logisoft.domain.FTFMaster;
import com.gp.cong.logisoft.domain.FclBuy;
import com.gp.cong.logisoft.domain.ImportPortConfiguration;
import com.gp.cong.logisoft.domain.LCLColoadMaster;
import com.gp.cong.logisoft.domain.LCLPortConfiguration;
import com.gp.cong.logisoft.domain.RefTerminalTemp;
import com.gp.cong.logisoft.domain.RetailStandardCharges;
import com.gp.cong.logisoft.domain.StandardCharges;
import com.gp.cong.logisoft.hibernate.dao.RefTerminalDAO;
import com.gp.cong.logisoft.struts.ratemangement.form.SearchTerminalForm;
//import com.gp.cvst.logisoft.domain.Quotation;
import com.gp.cvst.logisoft.struts.form.manifestForm;

/** 
 * MyEclipse Struts
 * Creation date: 03-03-2008
 * 
 * XDoclet definition:
 * @struts.action path="/searchTerminal" name="searchTerminalForm" input="/jsps/ratemanagement/searchTerminal.jsp" scope="request" validate="true"
 */
public class SearchTerminalAction extends Action {
    /*
     * Generated Methods
     */

    /**
     * Method execute
     * @param mapping
     * @param form
     * @param request
     * @param response
     * @return ActionForward
     */
    public ActionForward execute(ActionMapping mapping, ActionForm form,
            HttpServletRequest request, HttpServletResponse response) throws Exception {
        SearchTerminalForm searchTerminalForm = (SearchTerminalForm) form;// TODO Auto-generated method stub
        HttpSession session = ((HttpServletRequest) request).getSession();
        String buttonValue = searchTerminalForm.getButtonValue();
        String terminalNumber = searchTerminalForm.getTerminalNumber();
        String terminalName = searchTerminalForm.getTerminalName();
        RefTerminalDAO terminalDAO = new RefTerminalDAO();
        RefTerminalTemp terminalobj = new RefTerminalTemp();
        String search = "";
        String path1 = "";
        StandardCharges airrates = null;
        RetailStandardCharges retailStandardCharges = null;
        int index = -1;
        if (searchTerminalForm.getIndex() != null && !searchTerminalForm.getIndex().equals("")) {
            index = Integer.parseInt(searchTerminalForm.getIndex());
        }
        if ((request.getParameter("index") != null && !request.getParameter("index").equals("")) || (searchTerminalForm.getIndex() != null && !searchTerminalForm.getIndex().equals(""))) {
            int ind = Integer.parseInt(request.getParameter("index"));
            if (index >= 0) {
                ind = index;
            }
            List terminalList1 = (List) session.getAttribute("terminalpopList");
            //List terminalList2=(List)session.getAttribute("terminalList");
            if (session.getAttribute("searchTerminal") != null) {
                search = (String) session.getAttribute("searchTerminal");
            }


            if (search.equals("retailsearchot")) {
                if (session.getAttribute("retailmanage") == null) {
                    retailStandardCharges = new RetailStandardCharges();
                } else {
                    retailStandardCharges = (RetailStandardCharges) session.getAttribute("retailmanage");
                }
                terminalobj = (RefTerminalTemp) terminalList1.get(ind);
                //retailStandardCharges.setOrgTerminal(terminalobj);
                session.setAttribute("retailmanage", retailStandardCharges);
                path1 = "jsps/ratemanagement/manageRetailRates.jsp";
            } else if (search.equals("retailaddot")) {
                if (session.getAttribute("retailstandardCharges") == null) {
                    retailStandardCharges = new RetailStandardCharges();
                } else {
                    retailStandardCharges = (RetailStandardCharges) session.getAttribute("retailstandardCharges");
                }
                terminalobj = (RefTerminalTemp) terminalList1.get(ind);
                //retailStandardCharges.setOrgTerminal(terminalobj);
                session.setAttribute("retailstandardCharges", retailStandardCharges);
                path1 = "jsps/ratemanagement/retailAddAirRatesPopup.jsp";
            } else if (search.equals("editlcl")) {
                LCLPortConfiguration lclPortConfigurationObj = null;
                if (session.getAttribute("lclPortConfigurationObj") != null) {
                    lclPortConfigurationObj = (LCLPortConfiguration) session.getAttribute("lclPortConfigurationObj");
                } else {
                    lclPortConfigurationObj = new LCLPortConfiguration();
                }
                terminalobj = (RefTerminalTemp) terminalList1.get(ind);
                lclPortConfigurationObj.setTrmnum(terminalobj);
                session.setAttribute("lclPortConfigurationObj", lclPortConfigurationObj);
                path1 = "jsps/datareference/editLclPortsConfig.jsp";
            } else if (search.equals("lcl")) {
                LCLPortConfiguration lclPortConfigurationObj = null;
                if (session.getAttribute("lclPortobj") != null) {
                    lclPortConfigurationObj = (LCLPortConfiguration) session.getAttribute("lclPortobj");
                } else {
                    lclPortConfigurationObj = new LCLPortConfiguration();
                }
                terminalobj = (RefTerminalTemp) terminalList1.get(ind);
                lclPortConfigurationObj.setTrmnum(terminalobj);
                session.setAttribute("lclPortobj", lclPortConfigurationObj);
                path1 = "jsps/datareference/lclPortsConfig.jsp";
            } else if (search.equals("editfcl")) {
                FCLPortConfiguration fclPortobj = null;
                if (session.getAttribute("fclPortObjConfiguration") != null) {
                    fclPortobj = (FCLPortConfiguration) session.getAttribute("fclPortObjConfiguration");
                } else {
                    fclPortobj = new FCLPortConfiguration();
                }
                terminalobj = (RefTerminalTemp) terminalList1.get(ind);
                fclPortobj.setTrmnum(terminalobj);
                session.setAttribute("fclPortObjConfiguration", fclPortobj);
                path1 = "jsps/datareference/editFclPortsConfig.jsp";
            } else if (search.equals("fcl")) {
                FCLPortConfiguration fclPortobj = null;
                if (session.getAttribute("fclPortobj") != null) {
                    fclPortobj = (FCLPortConfiguration) session.getAttribute("fclPortobj");
                } else {
                    fclPortobj = new FCLPortConfiguration();
                }
                terminalobj = (RefTerminalTemp) terminalList1.get(ind);
                fclPortobj.setTrmnum(terminalobj);
                session.setAttribute("fclPortobj", fclPortobj);
                path1 = "jsps/datareference/fclPortsConfiguration.jsp";
            } else if (search.equals("editair")) {
                AirPortConfiguration airPortObj = null;
                if (session.getAttribute("airPortObjConfigConfiguration") != null) {
                    airPortObj = (AirPortConfiguration) session.getAttribute("airPortObjConfigConfiguration");
                } else {
                    airPortObj = new AirPortConfiguration();
                }
                terminalobj = (RefTerminalTemp) terminalList1.get(ind);
                airPortObj.setTrmnum(terminalobj);
                session.setAttribute("airPortObjConfigConfiguration", airPortObj);
                path1 = "jsps/datareference/editAirportConfig.jsp";
            } else if (search.equals("air")) {
                AirPortConfiguration airPortObj = null;
                if (session.getAttribute("airPortObj") != null) {
                    airPortObj = (AirPortConfiguration) session.getAttribute("airPortObj");
                } else {
                    airPortObj = new AirPortConfiguration();
                }
                terminalobj = (RefTerminalTemp) terminalList1.get(ind);
                airPortObj.setTrmnum(terminalobj);
                session.setAttribute("airPortObj", airPortObj);
                path1 = "jsps/datareference/airPortConfiguration.jsp";
            } else if (search.equals("editimport")) {
                ImportPortConfiguration importsObj = null;
                if (session.getAttribute("impPortObjConfiguration") != null) {
                    importsObj = (ImportPortConfiguration) session.getAttribute("impPortObjConfiguration");
                } else {
                    importsObj = new ImportPortConfiguration();
                }
                terminalobj = (RefTerminalTemp) terminalList1.get(ind);
                importsObj.setTrmnum(terminalobj);
                session.setAttribute("impPortObjConfiguration", importsObj);
                path1 = "jsps/datareference/editImportConfig.jsp";
            } else if (search.equals("import")) {
                ImportPortConfiguration importsObj = null;
                if (session.getAttribute("importPortObj") != null) {
                    importsObj = (ImportPortConfiguration) session.getAttribute("importPortObj");
                } else {
                    importsObj = new ImportPortConfiguration();
                }
                terminalobj = (RefTerminalTemp) terminalList1.get(ind);
                importsObj.setTrmnum(terminalobj);
                session.setAttribute("importPortObj", importsObj);
                path1 = "jsps/datareference/imports.jsp";
            } else if (search.equals("searchlclcoload")) {
                LCLColoadMaster lclColoadMaster = null;
                if (session.getAttribute("searchlclColoadMaster") != null) {
                    lclColoadMaster = (LCLColoadMaster) session.getAttribute("searchlclColoadMaster");
                } else {
                    lclColoadMaster = new LCLColoadMaster();
                }
                terminalobj = (RefTerminalTemp) terminalList1.get(ind);
                //lclColoadMaster.setOriginTerminal(terminalobj);
                session.setAttribute("searchlclColoadMaster", lclColoadMaster);
                path1 = "jsps/ratemanagement/SearchLCLCoload.jsp";
            } //THIS ELSE FOR SEARCH FCL BUY RATES TERMINAL
            else if (search.equals("searchfcl")) {
                FclBuy fclBuy = null;
                if (session.getAttribute("searchfcl") != null) {
                    fclBuy = (FclBuy) session.getAttribute("searchfcl");
                } else {
                    fclBuy = new FclBuy();
                }
                UnLocation terminalobj1 = (UnLocation) terminalList1.get(ind);
                fclBuy.setOriginTerminal(terminalobj1);
                session.setAttribute("searchfclrecords", fclBuy);
                path1 = "jsps/ratemanagement/SearchFCL.jsp";
                if (session.getAttribute("searchFclcodelist") != null) {
                    session.removeAttribute("searchFclcodelist");
                }
                if (session.getAttribute("fclcommonList") != null) {
                    session.removeAttribute("fclcommonList");
                }
                if (session.getAttribute("fclmessage") != null) {
                    session.removeAttribute("fclmessage");
                }
            } //THIS ELSE FOR ADD FCL BUY RATES TERMINAL
            else if (search.equals("addfcl")) {
                FclBuy fclBuy = null;
                if (session.getAttribute("addfclrecords") != null) {
                    fclBuy = (FclBuy) session.getAttribute("addfclrecords");
                } else {
                    fclBuy = new FclBuy();
                }
                UnLocation terminalobj1 = (UnLocation) terminalList1.get(ind);
                fclBuy.setOriginTerminal(terminalobj1);
                session.setAttribute("addfclrecords", fclBuy);
                path1 = "jsps/ratemanagement/AddFCLPopup.jsp";
            } else if (search.equals("addlclcoload")) {
                LCLColoadMaster lclColoadMaster = null;
                if (session.getAttribute("addlclColoadMaster") != null) {
                    lclColoadMaster = (LCLColoadMaster) session.getAttribute("addlclColoadMaster");
                } else {
                    lclColoadMaster = new LCLColoadMaster();
                }
                terminalobj = (RefTerminalTemp) terminalList1.get(ind);
                //lclColoadMaster.setOriginTerminal(terminalobj);
                session.setAttribute("addlclColoadMaster", lclColoadMaster);
                path1 = "jsps/ratemanagement/AddLclColoadPopup.jsp";
            } else if (search.equals("searchftf")) {
                FTFMaster ftfMaster = null;
                if (session.getAttribute("searchftfMaster") != null) {
                    ftfMaster = (FTFMaster) session.getAttribute("searchftfMaster");
                } else {
                    ftfMaster = new FTFMaster();
                }
                terminalobj = (RefTerminalTemp) terminalList1.get(ind);
                //ftfMaster.setOriginTerminal(terminalobj);
                session.setAttribute("searchftfMaster", ftfMaster);
                path1 = "jsps/ratemanagement/searchFTF.jsp";
            } else if (search.equals("manifest")) {
                manifestForm manifest = new manifestForm();
                terminalobj = (RefTerminalTemp) terminalList1.get(ind);
                manifest.setOrgTerminal(terminalobj.getTrmnum());
                session.setAttribute("manifestobj", manifest);
                path1 = "jsps/AccountsRecievable/Manifest.jsp";
            }  else if (search.equals("addftf")) {
                FTFMaster ftfMaster = null;
                if (session.getAttribute("addftfMaster") != null) {
                    ftfMaster = (FTFMaster) session.getAttribute("addftfMaster");
                } else {
                    ftfMaster = new FTFMaster();
                }
                terminalobj = (RefTerminalTemp) terminalList1.get(ind);
                //ftfMaster.setOriginTerminal(terminalobj);
                session.setAttribute("addftfMaster", ftfMaster);
                path1 = "jsps/ratemanagement/addFTFpopup.jsp";
            } else if (search.equals("searchvoyage")) {
                VoyageExport voyageExport = null;
                if (session.getAttribute("searchvoyagerecords") != null) {
                    voyageExport = (VoyageExport) session.getAttribute("searchvoyagerecords");
                } else {
                    voyageExport = new VoyageExport();
                }
                terminalobj = (RefTerminalTemp) terminalList1.get(ind);
                voyageExport.setOriginTerminal(terminalobj);
                session.setAttribute("searchvoyagerecords", voyageExport);
                path1 = "jsps/voyagemanagement/searchVoyage.jsp";
            } else if (search.equals("searchinland")) {
                VoyageInland voyageInland = null;
                if (session.getAttribute("searchinlandrecords") != null) {
                    voyageInland = (VoyageInland) session.getAttribute("searchinlandrecords");
                } else {
                    voyageInland = new VoyageInland();
                }
                terminalobj = (RefTerminalTemp) terminalList1.get(ind);
                voyageInland.setOriginTerminal(terminalobj);
                session.setAttribute("searchinlandrecords", voyageInland);
                path1 = "jsps/voyagemanagement/searchInland.jsp";
            } else if (search.equals("inlandports")) {
                VoyageInland voyageInland = null;
                if (session.getAttribute("inlandports") != null) {
                    voyageInland = (VoyageInland) session.getAttribute("inlandports");
                } else {
                    voyageInland = new VoyageInland();
                }
                terminalobj = (RefTerminalTemp) terminalList1.get(ind);
                voyageInland.setScheduleDkOrigin(terminalobj);
                session.setAttribute("inlandports", voyageInland);
                path1 = "jsps/voyagemanagement/inlandVoyage.jsp";
            } else if (search.equals("addinland")) {
                VoyageInland voyageInland = null;
                if (session.getAttribute("addinlandrecords") != null) {
                    voyageInland = (VoyageInland) session.getAttribute("addinlandrecords");
                } else {
                    voyageInland = new VoyageInland();
                }
                terminalobj = (RefTerminalTemp) terminalList1.get(ind);
                voyageInland.setOriginTerminal(terminalobj);
                session.setAttribute("addinlandrecords", voyageInland);
                path1 = "jsps/voyagemanagement/inlandPopup.jsp";
            } else if (search.equals("addvoyage")) {
                VoyageExport voyageExport = null;
                if (session.getAttribute("addvoyagerecords") != null) {
                    voyageExport = (VoyageExport) session.getAttribute("addvoyagerecords");
                } else {
                    voyageExport = new VoyageExport();
                }
                terminalobj = (RefTerminalTemp) terminalList1.get(ind);
                voyageExport.setOriginTerminal(terminalobj);
                session.setAttribute("addvoyagerecords", voyageExport);
                path1 = "jsps/voyagemanagement/voyagePopUp.jsp";
            } else if (search.equals("exportvoyage")) {
                VoyageExport voyageExport = null;
                if (session.getAttribute("exportvoyage") != null) {
                    voyageExport = (VoyageExport) session.getAttribute("exportvoyage");
                } else {
                    voyageExport = new VoyageExport();
                }
                terminalobj = (RefTerminalTemp) terminalList1.get(ind);
                voyageExport.setOriginTerminal(terminalobj);
                session.setAttribute("exportvoyage", voyageExport);
                path1 = "jsps/voyagemanagement/exportVoyage.jsp";
            }
            /*else if(search.equals("QuoteOrigin"))
            { // Added by pradeep

            Quotation quotes1 = new Quotation();
            terminalobj=(RefTerminalTemp)terminalList1.get(ind);
            quotes1.setOrigin_terminal(terminalobj);
            session.setAttribute("QuoteOrigin",quotes1);
            path1="/jsps/fclQuotes/SearchQuotation.jsp";
            }*/
            if (session.getAttribute("terminalList") != null) {
                session.removeAttribute("terminalList");
            }
            request.setAttribute("path1", path1);
            request.setAttribute("buttonValue", "completed");

        } else {
            if (buttonValue.equals("search")) {
                List terminalList = terminalDAO.findForManagement(terminalNumber, terminalName);
                session.setAttribute("terminalpopList", terminalList);
            }
        }
        return mapping.findForward("searchterminal");
    }
}