/*
 * Generated by MyEclipse Struts
 * Template path: templates/java/JavaClass.vtl
 */
package com.gp.cong.logisoft.struts.ratemangement.action;

import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.List;

import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;
import javax.servlet.http.HttpSession;

import org.apache.struts.action.Action;
import org.apache.struts.action.ActionForm;
import org.apache.struts.action.ActionForward;
import org.apache.struts.action.ActionMapping;

import com.gp.cong.logisoft.beans.AirRatesBean;
import com.gp.cong.logisoft.domain.AirStandardCharges;
import com.gp.cong.logisoft.domain.GenericCode;
import com.gp.cong.logisoft.hibernate.dao.GenericCodeDAO;
import com.gp.cong.logisoft.struts.ratemangement.form.AGSSEditForm;

/** 
 * MyEclipse Struts
 * Creation date: 04-14-2008
 * 
 * XDoclet definition:
 * @struts.action path="/aGSSEdit" name="aGSSEditForm" input="/jsps/ratemangement/aGSSEdit.jsp" scope="request" validate="true"
 */
public class AGSSEditAction extends Action {
    /*
     * Generated Methods
     */

    /**
     * Method execute
     * @param mapping
     * @param form
     * @param request
     * @param response
     * @return ActionForward
     */
    public ActionForward execute(ActionMapping mapping, ActionForm form,
            HttpServletRequest request, HttpServletResponse response) throws Exception {
        AGSSEditForm aGSSEditForm = (AGSSEditForm) form;// TODO Auto-generated method stub
        HttpSession session = ((HttpServletRequest) request).getSession();
        String forwardName = "";
        AirStandardCharges airStandardCharges = new AirStandardCharges();
        GenericCodeDAO genericCodeDAO = new GenericCodeDAO();
        String buttonValue = aGSSEditForm.getButtonValue();
        String standard = aGSSEditForm.getStandard();
        String asFreighted = aGSSEditForm.getAsFrfgted();
        int index = 0;
        AirRatesBean airRatesBean = new AirRatesBean();
        airRatesBean.setStandard(aGSSEditForm.getStandard());
        airRatesBean.setAsFrfgted(aGSSEditForm.getAsFrfgted());
        request.setAttribute("airRatesBean", airRatesBean);
        List agssList = new ArrayList();
        if (session.getAttribute("airStandardCharges") != null) {
            airStandardCharges = (AirStandardCharges) session.getAttribute("airStandardCharges");
        } else {
            airStandardCharges = new AirStandardCharges();
        }
        if (!buttonValue.equals("cancel")) {
            if (asFreighted != null && asFreighted.equalsIgnoreCase("on")) {
                airStandardCharges.setAsFrfgted("X");
            } else if (asFreighted == null) {
                airStandardCharges.setAsFrfgted(null);
            }


            GenericCode genObj = new GenericCode();
            String type = aGSSEditForm.getChargeType();

            forwardName = "agssEdit";



            if (standard != null && standard.equalsIgnoreCase("on")) {
                airStandardCharges.setStandard("Y");
            } else if (standard == null) {
                airStandardCharges.setStandard("N");
            }
            if (aGSSEditForm.getAmtPerCft() != null && !aGSSEditForm.getAmtPerCft().equals("")) {
                airStandardCharges.setAmtPerCft(new Double(aGSSEditForm.getAmtPerCft()));
            } else {
                airStandardCharges.setAmtPerCft(0.0);
            }
            if (aGSSEditForm.getAmtPer100lbs() != null && !aGSSEditForm.getAmtPer100lbs().equals("")) {
                airStandardCharges.setAmtPer100lbs(new Double(aGSSEditForm.getAmtPer100lbs()));
            } else {
                airStandardCharges.setAmtPer100lbs(0.0);
            }
            if (aGSSEditForm.getAmtPerCbm() != null && !aGSSEditForm.getAmtPerCbm().equals("")) {
                airStandardCharges.setAmtPerCbm(new Double(aGSSEditForm.getAmtPerCbm()));
            } else {
                airStandardCharges.setAmtPerCbm(0.0);
            }
            if (aGSSEditForm.getAmtPer1000kg() != null && !aGSSEditForm.getAmtPer1000kg().equals("")) {
                airStandardCharges.setAmtPer1000kg(new Double(aGSSEditForm.getAmtPer1000kg()));
            } else {
                airStandardCharges.setAmtPer1000kg(0.0);
            }
            if (aGSSEditForm.getAmount() != null && !aGSSEditForm.getAmount().equals("")) {
                airStandardCharges.setAmount(new Double(aGSSEditForm.getAmount()));
            } else {
                airStandardCharges.setAmount(0.0);
            }
            if (aGSSEditForm.getPercentage() != null && !aGSSEditForm.getPercentage().equals("")) {
                double d = Double.parseDouble(aGSSEditForm.getPercentage());
                airStandardCharges.setPercentage(d / 1000);
            } else {
                airStandardCharges.setPercentage(0.0);
            }
            if (aGSSEditForm.getMinAmt() != null && !aGSSEditForm.getMinAmt().equals("")) {
                airStandardCharges.setMinAmt(new Double(aGSSEditForm.getMinAmt()));
            } else {
                airStandardCharges.setMinAmt(0.0);
            }
            if (aGSSEditForm.getInsuranceRate() != null && !aGSSEditForm.getInsuranceRate().equals("")) {
                airStandardCharges.setInsuranceRate(new Double(aGSSEditForm.getInsuranceRate()));
            } else {
                airStandardCharges.setInsuranceRate(0.0);
            }
            if (aGSSEditForm.getInsuranceAmt() != null && !aGSSEditForm.getInsuranceAmt().equals("")) {
                airStandardCharges.setInsuranceAmt(new Double(aGSSEditForm.getInsuranceAmt()));
            } else {
                airStandardCharges.setInsuranceAmt(0.0);
            }
            if (aGSSEditForm.getTxtItemcreatedon() != null && !aGSSEditForm.getTxtItemcreatedon().equals("")) {
                java.util.Date javaDate = null;
                SimpleDateFormat sdf = new SimpleDateFormat("MM/dd/yyyy");
                javaDate = sdf.parse(aGSSEditForm.getTxtItemcreatedon());
                airStandardCharges.setEffectiveDate(javaDate);
            }


            session.setAttribute("airStandardCharges", airStandardCharges);
        }
        if (buttonValue.equals("edit")) {
            if (session.getAttribute("agssAdd") != null) {
                agssList = (List) session.getAttribute("agssAdd");
                for (int i = 0; i < agssList.size(); i++) {
                    AirStandardCharges airStandard = (AirStandardCharges) agssList.get(i);
                    if (airStandard.getChargeCode().getId().equals(airStandardCharges.getChargeCode().getId())
                            && airStandard.getChargeType().getId().equals(airStandardCharges.getChargeType().getId())) {
                        airStandardCharges.setIndex(airStandard.getIndex());
                        agssList.remove(airStandard);
                        agssList.add(airStandardCharges);
                        break;
                    }
                }
            }

            session.setAttribute("agssAdd", agssList);
            if (session.getAttribute("airStandardCharges") != null) {
                session.removeAttribute("airStandardCharges");
            }
            forwardName = "agssAdd";
            session.setAttribute("getUpdateAss", airStandardCharges);
        } else if (buttonValue.equals("cancel")) {
            if (session.getAttribute("airStandardCharges") != null) {
                session.removeAttribute("airStandardCharges");
            }
            forwardName = "agssAdd";
        } else if (buttonValue.equals("delete")) {
            if (session.getAttribute("agssAdd") != null) {
                agssList = (List) session.getAttribute("agssAdd");
            }
            for (int i = 0; i < agssList.size(); i++) {
                AirStandardCharges airStandard = (AirStandardCharges) agssList.get(i);
                if (airStandard.getChargeCode().getId().equals(airStandardCharges.getChargeCode().getId())
                        && airStandard.getChargeType().getId().equals(airStandardCharges.getChargeType().getId())) {
                    agssList.remove(airStandard);
                    break;
                }
                session.setAttribute("agssAdd", agssList);
            }
            if (session.getAttribute("airStandardCharges") != null) {
                session.removeAttribute("airStandardCharges");
            }
            forwardName = "agssAdd";
        }

        request.setAttribute("buttonValue", buttonValue);

        return mapping.findForward(forwardName);
    }
}
