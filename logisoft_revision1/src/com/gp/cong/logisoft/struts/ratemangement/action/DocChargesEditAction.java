/*
 * Generated by MyEclipse Struts
 * Template path: templates/java/JavaClass.vtl
 */
package com.gp.cong.logisoft.struts.ratemangement.action;

import java.util.ArrayList;
import java.util.List;

import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;
import javax.servlet.http.HttpSession;

import org.apache.struts.action.Action;
import org.apache.struts.action.ActionForm;
import org.apache.struts.action.ActionForward;
import org.apache.struts.action.ActionMapping;

import com.gp.cong.logisoft.domain.AirFreightDocumentCharges;
import com.gp.cong.logisoft.domain.AirStandardCharges;
import com.gp.cong.logisoft.domain.StandardCharges;
import com.gp.cong.logisoft.struts.ratemangement.form.DocChargesEditForm;

/** 
 * MyEclipse Struts
 * Creation date: 04-21-2008
 * 
 * XDoclet definition:
 * @struts.action path="/docChargesEdit" name="docChargesEditForm" input="/jsps/ratemanagement/docChargesEdit.jsp" scope="request" validate="true"
 */
public class DocChargesEditAction extends Action {
	/*
	 * Generated Methods
	 */

	/** 
	 * Method execute
	 * @param mapping
	 * @param form
	 * @param request
	 * @param response
	 * @return ActionForward
	 */
	public ActionForward execute(ActionMapping mapping, ActionForm form,
			HttpServletRequest request, HttpServletResponse response) {
		DocChargesEditForm docChargesEditForm = (DocChargesEditForm) form;// TODO Auto-generated method stub
		HttpSession session = ((HttpServletRequest)request).getSession();
		String forwardName="";
		String buttonValue=docChargesEditForm.getButtonValue();
		AirFreightDocumentCharges documentCharges=null;
	
		AirFreightDocumentCharges docChargesObj=null;
		List docChargesList = new ArrayList();
		int index=0;
			StandardCharges standardChrg=new StandardCharges();
			if(session.getAttribute("standardCharges")==null)
			{
				standardChrg=new StandardCharges();
			}
			else
			{
				standardChrg=(StandardCharges)session.getAttribute("standardCharges");
			}
			if(docChargesEditForm.getMaxDocCharge()!=null && !docChargesEditForm.getMaxDocCharge().equals(""))
			{
				standardChrg.setMaxDocCharge(new Double(docChargesEditForm.getMaxDocCharge()));
			}
			else
			{
				standardChrg.setMaxDocCharge(0.0);
			}
			if(docChargesEditForm.getFfCommision()!=null && !docChargesEditForm.getFfCommision().equals(""))
			{
				standardChrg.setFfCommission(new Double(docChargesEditForm.getFfCommision()));
			}
			else
			{
				standardChrg.setFfCommission(0.0);
			}
			if(docChargesEditForm.getBlBottomLine()!=null && !docChargesEditForm.getBlBottomLine().equals(""))
			{
				standardChrg.setBlBottomLine(new Double(docChargesEditForm.getBlBottomLine()));
			}
			else
			{
				standardChrg.setBlBottomLine(0.0);
			}
			
			session.setAttribute("standardCharges",standardChrg);
			if(session.getAttribute("documentCharges")!=null )
			{
				documentCharges=(AirFreightDocumentCharges)session.getAttribute("documentCharges");
			}
			else
			{
				documentCharges=new AirFreightDocumentCharges();
			}
			if(docChargesEditForm.getAmount()!=null && !docChargesEditForm.getAmount().equals(""))
			{
				documentCharges.setAmount(new Double(docChargesEditForm.getAmount()));
			}
			
			forwardName="docChargesEdit";
			if(buttonValue.equals("add"))
			{
				if(session.getAttribute("docChargesAdd") != null)
				{
					docChargesList=(List)session.getAttribute("docChargesAdd");
					for(int i=0;i<docChargesList.size();i++)
					{
						
						AirFreightDocumentCharges airStandard=(AirFreightDocumentCharges)docChargesList.get(i);
							if(airStandard.getIndex()==documentCharges.getIndex())
							{
								documentCharges.setIndex(airStandard.getIndex());
								docChargesList.remove(documentCharges);
							}
					}
				}
				
				docChargesList.add(documentCharges);
				session.setAttribute("docChargesAdd", docChargesList);
				if(session.getAttribute("documentCharges")!=null)
				{
					session.removeAttribute("documentCharges");
				}
				forwardName="docChargesAdd";
			}
			else if(buttonValue.equals("cancel"))
			{
				if(session.getAttribute("documentCharges")!=null)
				{
					session.removeAttribute("documentCharges");
				}
				forwardName="docChargesAdd";
			}
			else if(buttonValue.equals("delete"))
			{
				if(session.getAttribute("docChargesAdd") != null)
				{
					docChargesList=(List)session.getAttribute("docChargesAdd");
				}
				for(int i=0;i<docChargesList.size();i++)
				{
					AirFreightDocumentCharges airStandard=(AirFreightDocumentCharges)docChargesList.get(i);
					if(airStandard.getIndex()==documentCharges.getIndex())
					{
						docChargesList.remove(airStandard);
					}
					session.setAttribute("docChargesAdd", docChargesList);
				}
				if(session.getAttribute("documentCharges")!=null)
				{
					session.removeAttribute("documentCharges");
				}
				forwardName="docChargesAdd";
			}
		request.setAttribute("buttonValue",buttonValue);
			return mapping.findForward(forwardName);
	}	
		
}