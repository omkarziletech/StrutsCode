/*
 * Generated by MyEclipse Struts
 * Template path: templates/java/JavaClass.vtl
 */
package com.gp.cong.logisoft.struts.ratemangement.action;

import java.util.ArrayList;
import java.util.List;

import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;
import javax.servlet.http.HttpSession;

import org.apache.struts.action.Action;
import org.apache.struts.action.ActionForm;
import org.apache.struts.action.ActionForward;
import org.apache.struts.action.ActionMapping;

import com.gp.cong.logisoft.domain.AirFreightFlightShedules;
import com.gp.cong.logisoft.domain.GenericCode;
import com.gp.cong.logisoft.struts.ratemangement.form.EditFlightSheduleForm;

/** 
 * MyEclipse Struts
 * Creation date: 04-28-2008
 * 
 * XDoclet definition:
 * @struts.action path="/editFlightShedule" name="editFlightSheduleForm" input="/jsps/ratemanagement/editFlightShedule.jsp" scope="request" validate="true"
 */
public class EditFlightSheduleAction extends Action {
    /*
     * Generated Methods
     */

    /**
     * Method execute
     * @param mapping
     * @param form
     * @param request
     * @param response
     * @return ActionForward
     */
    public ActionForward execute(ActionMapping mapping, ActionForm form,
            HttpServletRequest request, HttpServletResponse response) {
        EditFlightSheduleForm editFlightSheduleForm = (EditFlightSheduleForm) form;// TODO Auto-generated method stub
        HttpSession session = ((HttpServletRequest) request).getSession();
        String forwardName = "";
        String buttonValue = editFlightSheduleForm.getButtonValue();
        GenericCode genObj = null;
        AirFreightFlightShedules flightShedules = new AirFreightFlightShedules();

        List flightSheduleList = new ArrayList();
        int index = editFlightSheduleForm.getIndex();


        if (session.getAttribute("airFrieght") != null) {
            flightShedules = (AirFreightFlightShedules) session.getAttribute("airFrieght");
        } else {
            flightShedules = new AirFreightFlightShedules();
        }
        if (buttonValue.equals("add")) {
            StringBuffer cmbselect = new StringBuffer();
            String[] days = editFlightSheduleForm.getDay();
            if (days != null) {
                for (int i = 0; i < days.length; i++) {
                    if (i == (days.length - 1)) {
                        cmbselect.append(days[i]);

                    } else {
                        cmbselect.append(days[i] + ",");

                    }

                }

            } else {
                cmbselect.append("'No Day'");
            }

            flightShedules.setDay(cmbselect.toString());

            flightShedules.setDeparture(editFlightSheduleForm.getFlightHours() + ":" + editFlightSheduleForm.getFlightMinutes());
            flightShedules.setCutOffTime(editFlightSheduleForm.getCutOffFlightHours() + ":" + editFlightSheduleForm.getCutOffFlightMinutes());
            flightShedules.setFlight(editFlightSheduleForm.getFlight());
            flightShedules.setAircraftType(editFlightSheduleForm.getAirCraftType());
            flightShedules.setStops(editFlightSheduleForm.getStops());

            if (session.getAttribute("flightShedulesAdd") != null) {
                flightSheduleList = (List) session.getAttribute("flightShedulesAdd");
            }
            for (int i = 0; i < flightSheduleList.size(); i++) {
                AirFreightFlightShedules airFreight = (AirFreightFlightShedules) flightSheduleList.get(i);
                if (airFreight.getIndex() == flightShedules.getIndex()) {
                    flightShedules.setIndex(airFreight.getIndex());
                    flightSheduleList.remove(airFreight);
                }
            }
            flightSheduleList.add(flightShedules);
            if (session.getAttribute("airFrieght") != null) {
                session.removeAttribute("airFrieght");
            }
            session.setAttribute("flightShedulesAdd", flightSheduleList);
            forwardName = "flightShedulesAdd";
        } else if (buttonValue.equals("delete")) {
            if (session.getAttribute("flightShedulesAdd") != null) {
                flightSheduleList = (List) session.getAttribute("flightShedulesAdd");
            }
            for (int i = 0; i < flightSheduleList.size(); i++) {
                AirFreightFlightShedules airFreight = (AirFreightFlightShedules) flightSheduleList.get(i);
                if (airFreight.getIndex() == flightShedules.getIndex()) {
                    flightSheduleList.remove(airFreight);
                }
                session.setAttribute("flightShedulesAdd", flightSheduleList);
            }
            if (session.getAttribute("airFrieght") != null) {
                session.removeAttribute("airFrieght");
            }
        } else if (buttonValue.equals("cancel")) {
            if (session.getAttribute("airFrieght") != null) {
                session.removeAttribute("airFrieght");
            }
        }
        request.setAttribute("buttonValue", buttonValue);
        return mapping.findForward("flightShedulesAdd");
    }
}