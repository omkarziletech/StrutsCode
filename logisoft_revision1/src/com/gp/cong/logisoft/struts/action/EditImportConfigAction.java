/*
 * Generated by MyEclipse Struts
 * Template path: templates/java/JavaClass.vtl
 */
package com.gp.cong.logisoft.struts.action;

import java.util.HashSet;
import java.util.List;
import java.util.Set;

import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;
import javax.servlet.http.HttpSession;

import org.apache.struts.action.Action;
import org.apache.struts.action.ActionForm;
import org.apache.struts.action.ActionForward;
import org.apache.struts.action.ActionMapping;

import com.gp.cong.logisoft.beans.NoteBean;
import com.gp.cong.logisoft.domain.AuditLogRecord;
import com.gp.cong.logisoft.domain.AuditLogRecordImport;
import com.gp.cong.logisoft.domain.GenericCode;
import com.gp.cong.logisoft.domain.ImportPortConfiguration;
import com.gp.cong.logisoft.domain.Item;
import com.gp.cong.logisoft.domain.Ports;
import com.gp.cong.logisoft.domain.RefTerminal;
import com.gp.cong.logisoft.domain.User;
import com.gp.cong.logisoft.hibernate.dao.ItemDAO;
import com.gp.cong.logisoft.hibernate.dao.PortsDAO;
import com.gp.cong.logisoft.hibernate.dao.RefTerminalDAO;
import com.gp.cong.logisoft.hibernate.dao.UserDAO;
import com.gp.cong.logisoft.struts.form.EditImportConfigForm;
import com.gp.cong.logisoft.util.DBUtil;

/** 
 * MyEclipse Struts
 * Creation date: 01-11-2008
 * 
 * XDoclet definition:
 * @struts.action path="/editImportConfig" name="editImportConfigForm" input="/jsps/datareference/editImportConfig.jsp" scope="request" validate="true"
 */
public class EditImportConfigAction extends Action {
    /*
     * Generated Methods
     */

    /**
     * Method execute
     * @param mapping
     * @param form
     * @param request
     * @param response
     * @return ActionForward
     */
    public ActionForward execute(ActionMapping mapping, ActionForm form,
            HttpServletRequest request, HttpServletResponse response) throws Exception {
        EditImportConfigForm editImportConfigForm = (EditImportConfigForm) form;// TODO Auto-generated method stub
        HttpSession session = ((HttpServletRequest) request).getSession();
        String forwardName = "";
        DBUtil dbUtil = new DBUtil();
        String buttonValue = editImportConfigForm.getButtonValue();
        ImportPortConfiguration impPortObjConfig = new ImportPortConfiguration();

        forwardName = "editimportConfig";
        if (session.getAttribute("impPortObjConfiguration") != null) {
            impPortObjConfig = (ImportPortConfiguration) session.getAttribute("impPortObjConfiguration");
        }
        impPortObjConfig.setImportsService(editImportConfigForm.getImportsService());
        impPortObjConfig.setImportAgentNumber(editImportConfigForm.getImportAgentNumber());
        impPortObjConfig.setImportAgentWarehouse(editImportConfigForm.getImportAgentWarehouse());
        impPortObjConfig.setLineManager(editImportConfigForm.getLineManager());
        impPortObjConfig.setOverWeightLimit20(editImportConfigForm.getOverWeightLimit20());
        impPortObjConfig.setOverWeightLimit40(editImportConfigForm.getOverWeightLimit40());
        if (!buttonValue.equals("note")) {
            session.setAttribute("impPortObjConfiguration", impPortObjConfig);
        } else if (buttonValue != null && buttonValue.equals("note")) {
            ItemDAO itemDAO = new ItemDAO();
            Item item = new Item();
            String itemName = "";
            if (session.getAttribute("processinfoforports") != null) {
                String itemId = (String) session.getAttribute("processinfoforports");
                item = itemDAO.findById(Integer.parseInt(itemId));
                itemName = item.getItemDesc();
            }

            forwardName = "note";
            AuditLogRecord auditLogRecord = new AuditLogRecordImport();
            NoteBean noteBean = new NoteBean();
            noteBean.setItemName(itemName);
            noteBean.setAuditLogRecord(auditLogRecord);
            noteBean.setButtonValue(buttonValue);
            noteBean.setPageName("cancelimport");
            String noteId = "";
            if (impPortObjConfig != null && impPortObjConfig.getId() != null) {
                noteId = impPortObjConfig.getId().toString();
            }
            noteBean.setNoteId(noteId);
            noteBean.setReferenceId(noteId);
            List auditList = null;
            auditList = dbUtil.getNoteInformation(noteId, auditLogRecord);
            noteBean.setAuditList(auditList);
            noteBean.setVoidednote("");
            request.setAttribute("noteBean", noteBean);
            forwardName = "note";

        }

        return mapping.findForward(forwardName);
    }
}
