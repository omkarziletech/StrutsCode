/*
 * Generated by MyEclipse Struts
 * Template path: templates/java/JavaClass.vtl
 */
package com.gp.cong.logisoft.struts.action;

import java.util.ArrayList;
import java.util.Iterator;
import java.util.List;

import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;
import javax.servlet.http.HttpSession;

import org.apache.struts.action.Action;
import org.apache.struts.action.ActionForm;
import org.apache.struts.action.ActionForward;
import org.apache.struts.action.ActionMapping;

import com.gp.cong.logisoft.beans.customerBean;
import com.gp.cong.logisoft.domain.Customer;
import com.gp.cong.logisoft.domain.GenericCode;
import com.gp.cong.logisoft.domain.TradingPartner;
import com.gp.cong.logisoft.domain.User;
import com.gp.cong.logisoft.domain.Vendor;
import com.gp.cong.logisoft.hibernate.dao.CustomerDAO;
import com.gp.cong.logisoft.hibernate.dao.GenericCodeDAO;
import com.gp.cong.logisoft.hibernate.dao.UserDAO;
import com.gp.cong.logisoft.struts.form.MastervendorForm;

/** 
 * MyEclipse Struts
 * Creation date: 09-23-2008
 * 
 * XDoclet definition:
 * @struts.action path="/mastervendor" name="mastervendorForm" input="/jsps/Tradingpartnermaintainance/mastervendor.jsp" scope="request" validate="true"
 */
public class MastervendorAction extends Action {

    public ActionForward execute(ActionMapping mapping, ActionForm form,
            HttpServletRequest request, HttpServletResponse response) throws Exception {
        MastervendorForm mastervendorForm = (MastervendorForm) form;// TODO Auto-generated method stub
        HttpSession session = ((HttpServletRequest) request).getSession();
        Vendor mastervendorDomainObj = new Vendor();
        customerBean customerbean = new customerBean();

        String legalname = mastervendorForm.getMlegalname();
        String dba = mastervendorForm.getMdba();
        String tin = mastervendorForm.getMtin();
        String w_file = mastervendorForm.getWfile();
        String ap_name = mastervendorForm.getMapname();
        String phoneno = mastervendorForm.getMphone();
        String fax = mastervendorForm.getMfax();
        String email = mastervendorForm.getMemail();
        String web = mastervendorForm.getMweb();
        String ecomanager = mastervendorForm.getMeamanager();
        String creditstatus = mastervendorForm.getCredit();
        String crlimit = mastervendorForm.getMclimit();
        String crterms = mastervendorForm.getMcterms();
        String bankacct = mastervendorForm.getMbaccount();
        String deact = mastervendorForm.getDeactivate();
        String buttonValue = mastervendorForm.getButtonValue();
        mastervendorDomainObj.setLegalname(legalname);
        mastervendorDomainObj.setDba(dba);
        mastervendorDomainObj.setTin(tin);
        mastervendorDomainObj.setApname(ap_name);
        mastervendorDomainObj.setPhone(phoneno);
        mastervendorDomainObj.setFax(fax);
        mastervendorDomainObj.setEmail(email);
        mastervendorDomainObj.setWeb(web);

        mastervendorDomainObj.setBaccount(bankacct);

        mastervendorDomainObj.setDeactivate(deact);


        customerbean.setWfile(w_file);//------------CUSTOMER BEAN SETS FOR CHECKBOXES-------------
        customerbean.setCredit(creditstatus);
        customerbean.setDeactivate(deact);
        session.setAttribute("customerbean", customerbean);

        GenericCodeDAO genericCodeDAO = new GenericCodeDAO();
        GenericCode creditRt = null;
        User arContact = new User();
        UserDAO userDAO = new UserDAO();
        if (ecomanager != null && ecomanager != "0") {
            arContact = userDAO.findById(Integer.parseInt(ecomanager));
        //mastervendorDomainObj.setEamanager(arContact);
        }

        if (crlimit != null && crlimit != "") {
            Double creditLmt = Double.parseDouble(crlimit);
            mastervendorDomainObj.setClimit(creditLmt);
        }
        if (crterms != null && crterms != "0") {
            creditRt = genericCodeDAO.findById(Integer.parseInt(crterms));
            mastervendorDomainObj.setCterms(creditRt);
        }

        if (w_file != null) {
            mastervendorDomainObj.setWfile("on");
        } else {
            mastervendorDomainObj.setWfile("off");
        }

        if (creditstatus != null) {
            mastervendorDomainObj.setCredit("on");
        } else {
            mastervendorDomainObj.setCredit("off");
        }
        if (deact != null) {
            mastervendorDomainObj.setDeactivate("on");
        } else {
            mastervendorDomainObj.setDeactivate("off");
        }
        session.setAttribute("MasterVendorInfoList", mastervendorDomainObj);


        if (buttonValue != null && buttonValue.equals("checked")) {
            TradingPartner tradingPartner = (TradingPartner) session.getAttribute("TradingPartner");
            CustomerDAO customerDAO = new CustomerDAO();

            String accountNo = customerDAO.masterName(tradingPartner.getAccountName());
            if (accountNo != null) {
                List id = customerDAO.find1(accountNo);

                Iterator it = id.iterator();
                List list = new ArrayList();
                while (it.hasNext()) {

                    Customer customer = customerDAO.findById2(new Integer(it.next().toString()));
                    session.setAttribute("addressMaster", customer);
                    list.add(customer);

                }
                session.setAttribute("masteraddressList", list);//-------to display address-------
                request.setAttribute("openwindow", "openwindow");
            }
        }

        return mapping.findForward("tomaster");

    }
}	