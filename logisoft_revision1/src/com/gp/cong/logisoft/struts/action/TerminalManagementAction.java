/*
 * Generated by MyEclipse Struts
 * Template path: templates/java/JavaClass.vtl
 */
package com.gp.cong.logisoft.struts.action;

import java.util.List;

import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;
import javax.servlet.http.HttpSession;

import org.apache.struts.action.Action;
import org.apache.struts.action.ActionForm;
import org.apache.struts.action.ActionForward;
import org.apache.struts.action.ActionMapping;

import com.gp.cong.logisoft.beans.TerminalBean;
import com.gp.cong.logisoft.domain.ProcessInfo;
import com.gp.cong.logisoft.domain.RefTerminal;
import com.gp.cong.logisoft.domain.User;
import com.gp.cong.logisoft.hibernate.dao.ProcessInfoDAO;
import com.gp.cong.logisoft.hibernate.dao.RefTerminalDAO;
import com.gp.cong.logisoft.hibernate.dao.TerminalManagerDao;
import com.gp.cong.logisoft.hibernate.dao.UserDAO;

import com.gp.cong.logisoft.struts.form.TerminalManagementForm;

public class TerminalManagementAction extends Action {

    public ActionForward execute(ActionMapping mapping, ActionForm form,
            HttpServletRequest request, HttpServletResponse response) throws Exception {
        TerminalManagementForm terminalManagementForm = (TerminalManagementForm) form;// TODO
        // Auto-generated
        // method
        // stub
        String terminalId = terminalManagementForm.getTerminalId();
        HttpSession session = ((HttpServletRequest) request).getSession();

        String buttonValue = terminalManagementForm.getButtonValue();

        String terminalName = terminalManagementForm.getTerminalName();
        String terminalType = terminalManagementForm.getTerminalType();

        String city = terminalManagementForm.getCity();
        String match = terminalManagementForm.getMatch();
        TerminalBean terminalBean = new TerminalBean();
        terminalBean.setTerminalId(terminalId);
        terminalBean.setTerminalName(terminalName);
        terminalBean.setCity(city);
        terminalBean.setTerminalType(terminalType);
        terminalBean.setMatch(match);
        String forwardName = "searchterminal";
        if (request.getParameter("paramid") != null) {
            String loginName = null;
            String msg = "";
            String message = "";

            RefTerminalDAO terminalDAO = new RefTerminalDAO();
            RefTerminal terminal = terminalDAO.findById(request.getParameter("paramid"));

            User userid = null;
            UserDAO user1 = new UserDAO();
            if (session.getAttribute("loginuser") != null) {
                userid = (User) session.getAttribute("loginuser");
            }
            ProcessInfoDAO processinfoDAO = new ProcessInfoDAO();
            ProcessInfo pi = new ProcessInfo();
            String programid = null;
            programid = (String) session.getAttribute("processinfoforterminal");
            String recordid = "";
            if (terminal.getTrmnum() != null) {
                recordid = terminal.getTrmnum().toString();
            }
            String editstatus = "startedited";
            String deletestatus = "startdeleted";
            ProcessInfo processinfoobj = processinfoDAO.findById(null != programid ? Integer.parseInt(programid) : 0, recordid, deletestatus, editstatus);
            if (processinfoobj != null) {
                String view = "3";
                User loginuser = user1.findById(processinfoobj.getUserid());
                loginName = loginuser.getLoginName();
                msg = "This record is being used by ";
                message = msg + loginName;
                request.setAttribute("message", message);
                session.setAttribute("view", view);
                forwardName = "editTerminal";
            } else {
                pi.setUserid(userid.getUserId());
                pi.setProgramid(Integer.parseInt(programid));
                java.util.Date currdate = new java.util.Date();
                pi.setProcessinfodate(currdate);
                pi.setEditstatus(editstatus);
                pi.setRecordid(recordid);
                processinfoDAO.save(pi);
                if (session.getAttribute("view") != null) {
                    session.removeAttribute("view");
                }
                if (session.getAttribute("contactmodify") != null) {
                    session.removeAttribute("contactmodify");
                }
                if (session.getAttribute("notesmodify") != null) {
                    session.removeAttribute("notesmodify");
                }
            }
            request.setAttribute("terminalBean", terminalBean);
            session.setAttribute("terminal", terminal);
            forwardName = "editTerminal";
        } else if (request.getParameter("param") != null) {

            RefTerminalDAO terminalDAO = new RefTerminalDAO();
            RefTerminal terminal = terminalDAO.findById(request.getParameter("param"));

            String view = "3";
            session.setAttribute("view", view);
            session.setAttribute("terminal", terminal);
            forwardName = "editTerminal";
        } else {
            if (buttonValue.equals("add")) {
            } else if (buttonValue.equals("search")) {
                request.setAttribute("terminalBean", terminalBean);
                RefTerminalDAO terminalDAO = new RefTerminalDAO();
                if (match.equals("match")) {
                    List terminalList = terminalDAO.findForManagement(
                            terminalId, terminalName, terminalType, city);

                    if (terminalList.size() == 0) {
                        session.setAttribute("Notfound", terminalId);
                    }
                    session.setAttribute("terminalList", terminalList);
                    // session.setAttribute("Terminalcaption","Terminal{Match
                    // Only}");
                    if (terminalId != null && !terminalId.equals("")) {

                        session.setAttribute("Terminalcaption",
                                "TerminalID {Match Only}");
                    }
                    if (terminalName != null && !terminalName.equals("")) {
                        session.setAttribute("Terminalcaption",
                                "Terminal NAme {Match Only}");
                    }
                    if (terminalType != null && !terminalType.equals("0")) {
                        session.setAttribute("Terminalcaption",
                                "Terminal Type{Match Only}");
                    }
                    if (city != null && !city.equals("")) {
                        session.setAttribute("Terminalcaption",
                                "City {Match Only}");
                    }
                } else if (match.equals("starts")) {
                    List terminalList = terminalDAO.findForManagementaction(
                            terminalId, terminalName, terminalType, city);
                    session.setAttribute("terminalList", terminalList);
                    // session.setAttribute("Terminalcaption","Terminal {Start
                    // List At}");
                    if (terminalId != null && !terminalId.equals("")) {
                        session.setAttribute("Terminalcaption",
                                "TerminalID {Start List At}");
                    }
                    if (terminalName != null && !terminalName.equals("")) {
                        session.setAttribute("Terminalcaption",
                                "Terminal NAme {Start List At}");
                    }
                    if (terminalType != null && !terminalType.equals("0")) {
                        session.setAttribute("Terminalcaption",
                                "Terminal Type{Start List At}");
                    }
                    if (city != null && !city.equals("")) {
                        session.setAttribute("Terminalcaption",
                                "City {Start List At}");
                    }

                }
                forwardName = "searchterminal";
            } else if (buttonValue.equals("searchall")) {

                if (session.getAttribute("refTerminalobj") != null) {
                    session.removeAttribute("refTerminalobj");
                }
                if (session.getAttribute("terminalList") != null) {
                    session.removeAttribute("terminalList");
                }
                terminalBean.setTerminalId("");
                terminalBean.setTerminalName("");
                terminalBean.setCity("");
                terminalBean.setTerminalType("Select Terminal Type");
                request.setAttribute("terminalBean", terminalBean);
                forwardName = "searchterminal";
            }
        }
        if (buttonValue != null && buttonValue.equals("addTerminalUser")) {
            String termNo = request.getParameter("turmNo");
            List<TerminalBean> managerList = new TerminalManagerDao().getTerminalManagers(termNo);
            request.setAttribute("managerList", managerList);
            request.setAttribute("termNo", termNo);
            forwardName = "addTerminalManagers";
        }
        request.setAttribute("buttonValue", buttonValue);
        return mapping.findForward(forwardName);
    }
}
