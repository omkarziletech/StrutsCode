  /*
 * Generated by MyEclipse Struts
 * Template path: templates/java/JavaClass.vtl
 */
package com.gp.cong.logisoft.struts.action;

import java.util.ArrayList;
import java.util.HashSet;
import java.util.Iterator;
import java.util.List;
import java.util.Set;
import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;
import javax.servlet.http.HttpSession;
import org.apache.struts.action.Action;
import org.apache.struts.action.ActionForm;
import org.apache.struts.action.ActionForward;
import org.apache.struts.action.ActionMapping;
import com.gp.cong.logisoft.beans.NoteBean;
import com.gp.cong.logisoft.domain.AuditLogRecord;
import com.gp.cong.logisoft.domain.AuditLogRecordCarrier;
import com.gp.cong.logisoft.domain.CarrierAirline;
import com.gp.cong.logisoft.domain.CarrierAirlinePortException;
import com.gp.cong.logisoft.domain.CarrierOceanEqptRates;
import com.gp.cong.logisoft.domain.CarriersOrLine;
import com.gp.cong.logisoft.domain.CarriersOrLineTemp;
import com.gp.cong.logisoft.domain.GenericCode;
import com.gp.cong.logisoft.domain.Item;
import com.gp.cong.logisoft.domain.PortsTemp;
import com.gp.cong.logisoft.domain.User;
import com.gp.cong.logisoft.hibernate.dao.CarriersOrLineDAO;
import com.gp.cong.logisoft.hibernate.dao.GenericCodeDAO;
import com.gp.cong.logisoft.hibernate.dao.ItemDAO;
import com.gp.cong.logisoft.struts.form.EditManagingCarriersOATForm;
import com.gp.cong.logisoft.util.DBUtil;

/** 
 * MyEclipse Struts
 * Creation date: 12-06-2007
 * 
 * XDoclet definition:
 * @struts.action path="/editManagingCarriersOAT" name="editManagingCarriersOATForm" input="/jsps/datareference/editManagingCarriersOAT.jsp" scope="request" validate="true"
 */
public class EditManagingCarriersOATAction extends Action {
    /*
     * Generated Methods
     */

    /**
     * Method execute
     * @param mapping
     * @param form
     * @param request
     * @param response
     * @return ActionForward
     */
    public ActionForward execute(ActionMapping mapping, ActionForm form,
            HttpServletRequest request, HttpServletResponse response) throws Exception {
        EditManagingCarriersOATForm editManagingCarriersOATForm = (EditManagingCarriersOATForm) form;// TODO Auto-generated method stub
        HttpSession session = ((HttpServletRequest) request).getSession();
        String buttonValue = editManagingCarriersOATForm.getButtonValue();
        String ediCarrier = editManagingCarriersOATForm.getEdiCarrier();
        String forwardName = "";
        String message = "";
//		acomyn
        String acomyn = editManagingCarriersOATForm.getAcomyn();
        if (acomyn == null) {
            acomyn = "N";
        } else {
            acomyn = "Y";
        }
        CarriersOrLine carriers = (CarriersOrLine) session.getAttribute("carriers");
        DBUtil dbUtil = new DBUtil();
        GenericCode genericcode = null;
        List portList = null;
        List eqptList = null;
        GenericCodeDAO genriccodedao = new GenericCodeDAO();
        Set carrierAirLineset = new HashSet<CarrierAirline>();
        Set portExceptionSet = new HashSet<CarrierAirlinePortException>();
        Set carrierOceanEqptRatesSet = new HashSet<CarrierOceanEqptRates>();
        CarriersOrLineDAO carrierDAO = new CarriersOrLineDAO();
        forwardName = "editmanagingCarriersOAT";

        if (buttonValue != null && buttonValue.equals("onchange")) {
            carriers.setCarriertype(genriccodedao.findById(new Integer(editManagingCarriersOATForm.getCarrierType())));
            session.setAttribute("carriers", carriers);
            forwardName = "editmanagingCarriersOAT";
        }

        if (buttonValue != null && (buttonValue.equals("save") || buttonValue.equals(""))) {
            session.removeAttribute("carrierList");
            String cariercode = carriers.getCarriercode();

            CarriersOrLine carriersnew = new CarriersOrLine();
            genericcode = genriccodedao.findById(new Integer(editManagingCarriersOATForm.getCarrierType()));
            String carriertype = editManagingCarriersOATForm.getCarrierType();
            carriersnew.setCarriertype(genericcode);
            carriersnew.setCarriercode(cariercode);
            carriersnew.setCarriername(editManagingCarriersOATForm.getCarriername().toUpperCase());
            carriersnew.setSCAC(editManagingCarriersOATForm.getSCAC().toUpperCase());
            carriersnew.setAbbreviation(editManagingCarriersOATForm.getAbbreviation().toUpperCase());
            List carrierList = new ArrayList();

            carrierList = carrierDAO.findCarrierCode1(carriersnew.getCarriercode(), carriersnew.getCarriername());


            session.setAttribute("carrierList", carrierList);

            if (carriertype.equals("4")) {
                CarrierAirline carrierairline = new CarrierAirline();
                carrierairline.setCarriercode(editManagingCarriersOATForm.getCarriercode());
                carrierairline.setAirabbr(editManagingCarriersOATForm.getAirabbr().toUpperCase());
                carrierairline.setAircod(editManagingCarriersOATForm.getAircod());
                carrierairline.setAlnact(editManagingCarriersOATForm.getAlnact().toUpperCase());
                carrierairline.setAcomyn(acomyn);
                carrierairline.setAcomcd(new Integer(editManagingCarriersOATForm.getCommissiontype()));
                if (editManagingCarriersOATForm.getCommisionpercentage() != null && editManagingCarriersOATForm.getCommisionpercentage() != "") {
                    carrierairline.setAcompc(new Double(editManagingCarriersOATForm.getCommisionpercentage()));
                }
                if (session.getAttribute("portLst") != null) {
                    portList = (List) session.getAttribute("portLst");
                    Iterator iter = portList.iterator();
                    while (iter.hasNext()) {
                        PortsTemp port = (PortsTemp) iter.next();
                        CarrierAirlinePortException portexception = new CarrierAirlinePortException();
                        portexception.setShedulenumber(port);
                        portExceptionSet.add(portexception);
                    }
                    carrierairline.setPortcodes(portExceptionSet);
                }
                carrierAirLineset.add(carrierairline);
                carriersnew.setCarrierAirlineSet(carrierAirLineset);
            }
            if (carriertype.equals("13")) {

                carriersnew.setFclContactNumber(editManagingCarriersOATForm.getFclContactNumber());

                if (ediCarrier != null && ediCarrier.equals("on")) {
                    carriersnew.setEdiCarrier("I");
                } else {
                    carriersnew.setEdiCarrier("N");
                }

                if (session.getAttribute("eqptList") != null) {
                    eqptList = (List) session.getAttribute("eqptList");
                    Iterator iter = eqptList.iterator();
                    while (iter.hasNext()) {
                        CarrierOceanEqptRates CarrierOceanEqpt = (CarrierOceanEqptRates) iter.next();
                        carrierOceanEqptRatesSet.add(CarrierOceanEqpt);

                    }
                    carriersnew.setCarrierOceanEqptSet(new HashSet<CarrierOceanEqptRates>());
                    carriersnew.setCarrierOceanEqptSet(carrierOceanEqptRatesSet);
                }
            }
            session.setAttribute("carriers", carriersnew);

            if (buttonValue.equals("save") && !buttonValue.equals("")) {

                String programid = null;
                programid = (String) session.getAttribute("processinfoforcarriers");
                String recordid = "";
                if (carriers != null) {
                    recordid = carriers.getCarriercode();
                }

                dbUtil.getProcessInfo(programid, recordid, "edited", "deleted");
                User userid = null;
                if (session.getAttribute("loginuser") != null) {
                    userid = (User) session.getAttribute("loginuser");
                }
                // Note: Saving,not Updating
                carrierDAO.updateToAudit(carriersnew, userid.getLoginName());
                carrierDAO.delete1(carriers);
                carrierDAO.update(carriersnew, userid.getLoginName());

                message = "Carriers details updated successfully";
                request.setAttribute("message", message);
                session.removeAttribute("portList");
                session.removeAttribute("eqptList");

                List carrierListDisplay = (List) session.getAttribute("carrierList");




                for (int i = 0; i < carrierListDisplay.size(); i++) {
                    CarriersOrLineTemp carrierTemp = (CarriersOrLineTemp) carrierListDisplay.get(i);
                    if (carrierTemp.getCarriercode().equals(carriersnew.getCarriercode())) {
                        carrierTemp.setCarriername(carriersnew.getCarriername());
                        carrierTemp.setCarriertype(carriersnew.getCarriertype());
                        carrierTemp.setSCAC(carriersnew.getSCAC());
                        //carrierListDisplay.add(carrierTemp);
                        break;
                    }
                }

                session.removeAttribute("carrierList");
                forwardName = "managingCarriersOAT";
                if (session.getAttribute("view") != null) {
                    session.removeAttribute("view");
                }


                session.setAttribute("carrierList", carrierListDisplay);
            }
            request.setAttribute("buttonValue", buttonValue);
        }

        if (buttonValue != null && buttonValue.equals("delete")) {
            String programid = null;
            programid = (String) session.getAttribute("processinfoforcarriers");
            String recordid = "";
            if (carriers != null) {
                recordid = carriers.getCarriercode();
            }
            User userId = null;
            if (session.getAttribute("loginuser") != null) {
                userId = (User) session.getAttribute("loginuser");
            }
            carrierDAO.delete(carriers, userId.getLoginName());
            dbUtil.getProcessInfo(programid, recordid, "deleted", "edited");
            message = "Carrier details deleted successfully";
            request.setAttribute("message", message);
            request.setAttribute("buttonValue", buttonValue);
            session.removeAttribute("carrierList");
            if (session.getAttribute("view") != null) {
                session.removeAttribute("view");
            }
            forwardName = "managingCarriersOAT";
        }

        if (buttonValue != null && buttonValue.equals("cancel")) {
            String programid = null;
            programid = (String) session.getAttribute("processinfoforcarriers");
            String recordid = "";
            if (carriers != null) {
                recordid = carriers.getCarriercode();
            }
            dbUtil.getProcessInfo(programid, recordid, "editcancelled", null);
            if (session.getAttribute("carriers") != null) {
                session.removeAttribute("carriers");
            }
            session.removeAttribute("portList");
            session.removeAttribute("eqptList");
            if (session.getAttribute("view") != null) {
                session.removeAttribute("view");
            }
            forwardName = "managingCarriersOAT";
        }

        if (buttonValue != null && buttonValue.equals("cancelview")) {

            if (session.getAttribute("carriers") != null) {
                session.removeAttribute("carriers");
            }
            forwardName = "managingCarriersOAT";
        }

        if (buttonValue != null && buttonValue.equals("note")) {
            ItemDAO itemDAO = new ItemDAO();
            Item item = new Item();
            String itemName = "";
            if (session.getAttribute("processinfoforcarriers") != null) {
                String itemId = (String) session.getAttribute("processinfoforcarriers");
                item = itemDAO.findById(Integer.parseInt(itemId));
                itemName = item.getItemDesc();
            }

            forwardName = "note";
            AuditLogRecord auditLogRecord = new AuditLogRecordCarrier();
            NoteBean noteBean = new NoteBean();
            noteBean.setItemName(itemName);
            noteBean.setAuditLogRecord(auditLogRecord);
            noteBean.setButtonValue(buttonValue);
            //noteBean.setUser(user);
            noteBean.setPageName("cancelcarrier");
            String noteId = carriers.getCarriercode();
            noteBean.setNoteId(noteId);
            noteBean.setReferenceId(noteId);
            List auditList = null;
            auditList = dbUtil.getNoteInformation(noteId, auditLogRecord);
            noteBean.setAuditList(auditList);
            noteBean.setVoidednote("");
            request.setAttribute("noteBean", noteBean);
            return mapping.findForward("note");
        }


        request.setAttribute("buttonValue", buttonValue);
        return mapping.findForward(forwardName);
    }
}