/*
 * Generated by MyEclipse Struts
 * Template path: templates/java/JavaClass.vtl
 */
package com.gp.cong.logisoft.struts.action;

import java.util.ArrayList;
import java.util.HashSet;
import java.util.List;
import java.util.Set;

import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;
import javax.servlet.http.HttpSession;

import org.apache.struts.action.Action;
import org.apache.struts.action.ActionForm;
import org.apache.struts.action.ActionForward;
import org.apache.struts.action.ActionMapping;

import com.gp.cong.logisoft.domain.LCLPortConfiguration;
import com.gp.cong.logisoft.domain.PortException;
import com.gp.cong.logisoft.domain.Ports;
import com.gp.cong.logisoft.domain.PortsTemp;
import com.gp.cong.logisoft.domain.RelayDestination;
import com.gp.cong.logisoft.domain.RelayInquiry;
import com.gp.cong.logisoft.domain.RelayInquiryTemp;
import com.gp.cong.logisoft.domain.RelayOrigin;
import com.gp.cong.logisoft.domain.User;
import com.gp.cong.logisoft.hibernate.dao.LCLPortConfigurationDAO;
import com.gp.cong.logisoft.hibernate.dao.PortsDAO;
import com.gp.cong.logisoft.hibernate.dao.RelayInquiryDAO;
import com.gp.cong.logisoft.hibernate.dao.RelayOriginDAO;
import com.gp.cong.logisoft.struts.form.AddRelayForm;
import com.gp.cong.logisoft.util.DBUtil;

/** 
 * MyEclipse Struts
 * Creation date: 12-13-2007
 * 
 * XDoclet definition:
 * @struts.action path="/addRelay" name="addRelayForm" input="/jsps/datareference/addRelay.jsp" scope="request" validate="true"
 */
public class AddRelayAction extends Action {
    /*
     * Generated Methods
     */

    /**
     * Method execute
     * @param mapping
     * @param form
     * @param request
     * @param response
     * @return ActionForward
     */
    public ActionForward execute(ActionMapping mapping, ActionForm form,
            HttpServletRequest request, HttpServletResponse response) throws Exception {
        AddRelayForm addRelayForm = (AddRelayForm) form;// TODO Auto-generated method stub
        HttpSession session = ((HttpServletRequest) request).getSession();
        String pol = addRelayForm.getPol();
        String polText = addRelayForm.getPolText();
        String pod = addRelayForm.getPod();
        String podText = addRelayForm.getPodText();
        String status = addRelayForm.getStatus();
        String ttFromPolToPod = addRelayForm.getTtFromPolToPod();
        String cutOffDays = addRelayForm.getCutOffDays();
        String hourOfDay = addRelayForm.getHourOfDay();
        String printOnSs = addRelayForm.getPrintOnSs();

        if (printOnSs == null) {
            printOnSs = "N";
        } else {
            printOnSs = "Y";
        }
        String comment = addRelayForm.getComment();
        String buttonValue = addRelayForm.getButtonValue();
        String forwardName = "";
        String msg = "";
        String message = "";
        String loginname = "";
        RelayInquiry relay = null;
        List originList = null;
        List destinationList = null;
        DBUtil dbUtil = new DBUtil();
        Ports portobj1 = null;
        Ports portobj2 = null;
        List origList = null;
        RelayOriginDAO relayOriginDAO = new RelayOriginDAO();
        if (request.getParameter("paramid") != null) {
            origList = (List) session.getAttribute("originList");
            if (origList != null && origList.size() > 0) {
                RelayOrigin ralayOrg = (RelayOrigin) origList.get(Integer.parseInt(request.getParameter("paramid")));
                session.setAttribute("relayOrigin", ralayOrg);
                request.setAttribute("addorigin", "addorigin");

            }
            forwardName = "addrelay";
        } else if (request.getParameter("param") != null) {
            destinationList = (List) session.getAttribute("destinationList");
            if (destinationList != null && destinationList.size() > 0) {
                RelayDestination ralaydest = (RelayDestination) destinationList.get(Integer.parseInt(request.getParameter("param")));
                session.setAttribute("relayDestination", ralaydest);
                request.setAttribute("adddestination", "adddestination");

            }
            forwardName = "addrelay";
        } else {
            if (!buttonValue.equals("cancel")) {

                if (session.getAttribute("relay") == null) {
                    relay = new RelayInquiry();
                } else {
                    relay = (RelayInquiry) session.getAttribute("relay");
                }
                RelayInquiryDAO relayInquiryDAO = new RelayInquiryDAO();
                PortsDAO portsDAO = new PortsDAO();

                if (status != null && !status.equals("0")) {
                    relay.setStatus(status);
                }
                if (ttFromPolToPod != null && ttFromPolToPod != "") {
                    relay.setTtFromPolToPod(Integer.parseInt(ttFromPolToPod));
                }
                if (cutOffDays != null && cutOffDays != "") {
                    relay.setCutOffDays(Integer.parseInt(cutOffDays));
                }
                if (hourOfDay != null && hourOfDay != "") {
                    relay.setHourOfDay(Integer.parseInt(hourOfDay));
                }

                relay.setPrintOnSs(printOnSs);

                if (comment != null) {
                    relay.setComments(comment);
                }


                session.setAttribute("relay", relay);
                forwardName = "addrelay";
            }


            if (buttonValue.equals("save")) {
                RelayInquiryDAO relayInquiryDAO = new RelayInquiryDAO();
                originList = (List) session.getAttribute("originList");
                Set originset = null;
                if (originList != null && originList.size() > 0) {
                    originset = new HashSet<RelayOrigin>();
                    for (int i = 0; i < originList.size(); i++) {
                        RelayOrigin ro = (RelayOrigin) originList.get(i);
                        originset.add(ro);

                    }
                }
                if (originset != null) {
                    relay.setOriginSet(originset);
                }

                destinationList = (List) session.getAttribute("destinationList");
                Set destinationset = null;
                if (destinationList != null && destinationList.size() > 0) {

                    destinationset = new HashSet<RelayDestination>();
                    for (int j = 0; j < destinationList.size(); j++) {
                        RelayDestination rd = (RelayDestination) destinationList.get(j);
                        destinationset.add(rd);

                    }
                }
                if (destinationset != null) {
                    relay.setDestinationSet(destinationset);
                }

                List exceptionList = (List) session.getAttribute("portRelayList");
                Set exceptionset = null;
                if (exceptionList != null && exceptionList.size() > 0) {
                    exceptionset = new HashSet<PortException>();
                    for (int k = 0; k < exceptionList.size(); k++) {
                        PortException pe = (PortException) exceptionList.get(k);
                        exceptionset.add(pe);

                    }
                }
                if (exceptionset != null) {
                    relay.setPortExceptionSet(exceptionset);
                }
                User userid = null;
                if (session.getAttribute("loginuser") != null) {
                    userid = (User) session.getAttribute("loginuser");
                }
                session.setAttribute("relay", relay);
                relay.setPolName(relay.getPolCode().getPortname());
                relay.setPodName(relay.getPodCode().getPortname());
                if (relay.getOriginSet() != null && relay.getOriginSet().size() > 0) {
                    relay.setNoOfOrigins(relay.getOriginSet().size());
                }
                if (relay.getDestinationSet() != null && relay.getDestinationSet().size() > 0) {
                    relay.setNoOfDestns(relay.getDestinationSet().size());
                }
                if (relay.getPortExceptionSet() != null && relay.getPortExceptionSet().size() > 0) {
                    relay.setNoOfPortExcptns(relay.getPortExceptionSet().size());
                }

                relayInquiryDAO.save(relay, userid.getLoginName());
                List relayList = new ArrayList();
                RelayInquiryTemp realyTemp = new RelayInquiryTemp();
                realyTemp.setComments(relay.getComments());
                realyTemp.setCutOffDays(relay.getCutOffDays());
                realyTemp.setDestCheck(relay.getDestCheck());
                realyTemp.setHourOfDay(relay.getHourOfDay());
                realyTemp.setMatch(relay.getMatch());
                realyTemp.setPodCode(relay.getPodCode());
                realyTemp.setPolCode(relay.getPolCode());
                realyTemp.setPrintOnSs(relay.getPrintOnSs());
                realyTemp.setRelayId(relay.getRelayId());
                realyTemp.setStatus(relay.getStatus());
                realyTemp.setTtFromPolToPod(relay.getTtFromPolToPod());
                realyTemp.setPolName(relay.getPolName());
                realyTemp.setPodName(relay.getPolName());
                realyTemp.setNoOfDestns(relay.getNoOfDestns());
                realyTemp.setNoOfOrigins(relay.getNoOfOrigins());
                realyTemp.setNoOfPortExcptns(relay.getNoOfPortExcptns());
                relayList.add(realyTemp);

                session.setAttribute("relayList", relayList);
                if (session.getAttribute("relay") != null) {
                    session.removeAttribute("relay");
                }
                if (session.getAttribute("relaycode") != null) {
                    session.removeAttribute("relaycode");
                }
                if (request.getAttribute("rcode") != null) {
                    request.removeAttribute("rcode");
                }
                if (session.getAttribute("originList") != null) {
                    session.removeAttribute("originList");
                }
                if (session.getAttribute("destinationList") != null) {
                    session.removeAttribute("destinationList");
                }
                if (session.getAttribute("exception") != null) {
                    session.removeAttribute("exception");
                }
                if (session.getAttribute("portRelayList") != null) {
                    session.removeAttribute("portRelayList");
                }
                if (session.getAttribute("statuslist") != null) {
                    session.removeAttribute("statuslist");
                }
                message = "Relay details saved successfully";
                request.setAttribute("message", message);
                forwardName = "cancel";
            }
            if (buttonValue.equals("addport")) {
                forwardName = "addport";
            }
            if (buttonValue.equals("cancel")) {


                if (session.getAttribute("relay") != null) {
                    session.removeAttribute("relay");
                }
                if (session.getAttribute("relaycode") != null) {
                    session.removeAttribute("relaycode");
                }
                if (request.getAttribute("rcode") != null) {
                    request.removeAttribute("rcode");
                }
                if (session.getAttribute("originList") != null) {
                    session.removeAttribute("originList");
                }
                if (session.getAttribute("destinationList") != null) {
                    session.removeAttribute("destinationList");
                }
                if (session.getAttribute("exception") != null) {
                    session.removeAttribute("exception");
                }
                if (session.getAttribute("portRelayList") != null) {
                    session.removeAttribute("portRelayList");
                }
                forwardName = "cancel";
            //session.removeAttribute("originList");
            //session.removeAttribute("destinationList");
            }

            if (buttonValue.equals("delete")) {
                if (session.getAttribute("originList") == null) {
                    originList = new ArrayList();
                } else {
                    originList = (List) session.getAttribute("originList");
                }

                int index = addRelayForm.getInd();
                originList.remove(originList.get(index));

                forwardName = "addrelay";

            }
            if (buttonValue.equals("destdelete")) {

                if (session.getAttribute("destinationList") == null) {
                    destinationList = new ArrayList();
                } else {
                    destinationList = (List) session.getAttribute("destinationList");
                }

                int inx = addRelayForm.getInx();
                destinationList.remove(destinationList.get(inx));
                forwardName = "addrelay";

            }
            if (buttonValue.equals("check")) {

                List portCodeList = new ArrayList();
                List checkList = new ArrayList();
                LCLPortConfigurationDAO lclPortConfigDAO = new LCLPortConfigurationDAO();
                List onCarriageList = lclPortConfigDAO.findOnCarriage();

                if (session.getAttribute("destinationList") == null) {
                    destinationList = new ArrayList();
                } else {
                    destinationList = (List) session.getAttribute("destinationList");
                    for (int j = 0; j < destinationList.size(); j++) {
                        RelayDestination relayDest = new RelayDestination();
                        relayDest = (RelayDestination) destinationList.get(j);
                        checkList.add(relayDest);
                    }
                }
                portCodeList = dbUtil.getPortCodeListforcheck(destinationList, onCarriageList);


                for (int i = 0; i < portCodeList.size(); i++) {
                    RelayDestination relayDest = new RelayDestination();
                    LCLPortConfiguration lclPort = (LCLPortConfiguration) portCodeList.get(i);
                    PortsDAO portsDAO = new PortsDAO();
                    PortsTemp ports = portsDAO.findById1(lclPort.getShedulenumber());

                    relayDest.setDestinationId(ports);
                    relayDest.setTtFromPodToFd(0);
                    if (relayDest != null) {
                        checkList.add(relayDest);

                    }
                }

                session.setAttribute("destinationList", checkList);
                forwardName = "addrelay";
            }
        }
        request.setAttribute("buttonValue", buttonValue);

        return mapping.findForward(forwardName);
    }
}