/*
 * Generated by MyEclipse Struts
 * Template path: templates/java/JavaClass.vtl
 */
package com.gp.cong.logisoft.struts.action;

import com.gp.cong.common.CommonConstants;
import com.gp.cong.common.CommonUtils;
import java.util.ArrayList;
import java.util.Date;
import java.util.HashSet;
import java.util.List;
import java.util.Set;

import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;
import javax.servlet.http.HttpSession;

import org.apache.struts.action.Action;
import org.apache.struts.action.ActionForm;
import org.apache.struts.action.ActionForward;
import org.apache.struts.action.ActionMapping;

import com.gp.cong.logisoft.domain.Role;
import com.gp.cong.logisoft.domain.RoleItemAssociation;
import com.gp.cong.logisoft.domain.User;

import com.gp.cong.logisoft.hibernate.dao.RoleDAO;
import com.gp.cong.logisoft.struts.form.NewRoleForm;
import com.logiware.bean.ItemBean;

/** 
 * MyEclipse Struts
 * Creation date: 10-30-2007
 * 
 * XDoclet definition:
 * @struts.action path="/newRole" name="newRoleForm" input="/jsps/admin/NewRole.jsp" scope="request" validate="true"
 */
public class NewRoleAction extends Action {
    /*
     * Generated Methods
     */

    /**
     * Method execute
     * @param mapping
     * @param form
     * @param request
     * @param response
     * @return ActionForward
     */
    public ActionForward execute(ActionMapping mapping, ActionForm form,
            HttpServletRequest request, HttpServletResponse response)throws Exception {
        NewRoleForm newRoleForm = (NewRoleForm) form;// TODO Auto-generated method stub
        HttpSession session = ((HttpServletRequest) request).getSession();
        String buttonValue = newRoleForm.getButtonValue();
        if (buttonValue.equals("save")) {
            Role role = new Role();
            role.setRoleCreatedOn(new Date(System.currentTimeMillis()));
            role.setRoleDesc(request.getParameter("rolename"));
            role.setUpdatedDate(new Date());
            User userid = null;
            if (session.getAttribute("loginuser") != null) {
                userid = (User) session.getAttribute("loginuser");
            }
            role.setUpdatedBy(userid.getLoginName());
            RoleDAO roleDAO = new RoleDAO();
            List role1 = roleDAO.findRoleName(role.getRoleDesc());
            if (role1 != null && role1.size() > 0) {
                String msg = "Please enter different Role Name, This Role Name already exist";
                request.setAttribute("message", msg);
                    response.sendRedirect(request.getContextPath() + "/jsps/admin/NewRole.jsp?message=" + msg);
            } else {
                role.setRoleDesc(newRoleForm.getRoleName());
                Set roleItemSet = new HashSet<RoleItemAssociation>();
                for(ItemBean item : newRoleForm.getRoleItemBeans()){
                    if(CommonUtils.isEqualIgnoreCase(item.getChecked(), CommonConstants.ON)){
                       roleItemSet.add(new RoleItemAssociation(item,role.getRoleId()));
                    }
                }
                role.setRoleItem(roleItemSet);
                User userId = null;
                if (session.getAttribute("loginuser") != null) {
                    userId = (User) session.getAttribute("loginuser");
                }
                roleDAO.save(role, userId.getLoginName());
                List roleList = new ArrayList();
                roleList.add(role);
                session.setAttribute("roleList", roleList);
                request.setAttribute("save", "save");
                request.setAttribute("role", role);
                String message = "Role name saved successfully";
                request.setAttribute("message", message);
                    response.sendRedirect(request.getContextPath() + "/jsps/admin/SearchRole.jsp?message=" + message);
            }
        } else {
                response.sendRedirect(request.getContextPath() + "/jsps/admin/SearchRole.jsp");
        }
        return null;
    }
}
