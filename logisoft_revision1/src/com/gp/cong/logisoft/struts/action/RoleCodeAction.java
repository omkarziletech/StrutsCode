/*
 * Generated by MyEclipse Struts
 * Template path: templates/java/JavaClass.vtl
 */
package com.gp.cong.logisoft.struts.action;

import java.util.List;

import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;
import javax.servlet.http.HttpSession;

import org.apache.struts.action.Action;
import org.apache.struts.action.ActionForm;
import org.apache.struts.action.ActionForward;
import org.apache.struts.action.ActionMapping;

import com.gp.cong.logisoft.domain.Role;
import com.gp.cong.logisoft.hibernate.dao.RoleDAO;
import com.gp.cong.logisoft.struts.form.RoleCodeForm;

/** 
 * MyEclipse Struts
 * Creation date: 01-24-2008
 * 
 * XDoclet definition:
 * @struts.action path="/warehouseCode" name="warehouseCodeForm" input="/jsps/datareference/WarehouseCode.jsp" scope="request" validate="true"
 */
public class RoleCodeAction extends Action {
    /*
     * Generated Methods
     */

    /**
     * Method execute
     * @param mapping
     * @param form
     * @param request
     * @param response
     * @return ActionForward
     */
    public ActionForward execute(ActionMapping mapping, ActionForm form,
            HttpServletRequest request, HttpServletResponse response) throws Exception {
        RoleCodeForm roleCodeForm = (RoleCodeForm) form;// TODO Auto-generated method stub
        String buttonValue = roleCodeForm.getButtonValue();

        HttpSession session = request.getSession();
        String roleName = roleCodeForm.getRoleName();
        RoleDAO roleDAO = new RoleDAO();
        if (buttonValue.equals("search")) {
            List rolecode = roleDAO.findRoleName(roleName);
            if (rolecode != null) {
                if (rolecode.size() > 0) {
                    String msg = "Please enter different Role Name, This Role Name already exists";
                    request.setAttribute("message", msg);
                    request.setAttribute("rolecode", "rolecode");
                } else {
                    Role role = new Role();

                    role.setRoleDesc(roleName.toUpperCase());
                    session.setAttribute("role", role);
                    request.setAttribute("rolecode", "addrole");

                }
            }
        }
        return mapping.findForward("rolecode");
    }
}