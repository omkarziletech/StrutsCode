/*
 * Generated by MyEclipse Struts
 * Template path: templates/java/JavaClass.vtl
 */
package com.gp.cong.logisoft.struts.action;

import java.util.Date;
import java.util.List;

import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;
import javax.servlet.http.HttpSession;

import org.apache.struts.action.Action;
import org.apache.struts.action.ActionForm;
import org.apache.struts.action.ActionForward;
import org.apache.struts.action.ActionMapping;
import com.gp.cong.logisoft.domain.GeneralInformation;
import com.gp.cong.logisoft.hibernate.dao.CustomerDAO;
import com.gp.cong.logisoft.struts.form.MasterCustomerCodeForm;
import com.gp.cong.logisoft.domain.TradingPartner;

/** 
 * MyEclipse Struts
 * Creation date: 03-11-2008
 * 
 * XDoclet definition:
 * @struts.action path="/masterCustomerCode" name="masterCustomerCodeForm" input="/jsps/Tradingpartnermaintainance/MasterCustomerCode.jsp" scope="request" validate="true"
 */
public class MasterCustomerCodeAction extends Action {
    /*
     * Generated Methods
     */

    /**
     * Method execute
     * @param mapping
     * @param form
     * @param request
     * @param response
     * @return ActionForward
     */
    public ActionForward execute(ActionMapping mapping, ActionForm form,
            HttpServletRequest request, HttpServletResponse response) throws Exception {

        MasterCustomerCodeForm masterCustomerCodeForm = (MasterCustomerCodeForm) form;
        HttpSession session = ((HttpServletRequest) request).getSession();
        String name = masterCustomerCodeForm.getName();
        String buttonValue = masterCustomerCodeForm.getButtonValue();
        CustomerDAO customerDAO = new CustomerDAO();
        TradingPartner tradingpartner = new TradingPartner();
        if (buttonValue.equals("search")) {
            String type = "master";



            tradingpartner.setAccountName(name);
            String a1 = "";
            int a2 = 0;
            int a4 = 0;
            String a5 = "";

            if (name != null && name.length() > 0) {
                for (int i = 0; i < name.length(); i++) {
                    if (name.charAt(i) == ' ') {
                        a2++;

                        if (a2 == 1 && a4 == 0) {
                            if (a1.length() >= 3) {
                                a1 = a1.substring(0, 3);
                            }
                        }
                    } else if (name.charAt(i) == '.') {
                        a4++;
                    } else {
                        if (a2 == 0) {
                            a1 = a1.concat(String.valueOf(name.charAt(i)));

                        } else if (a2 > 0) {
                            a5 = a5.concat(String.valueOf(name.charAt(i)));
                        }
                    }

                    if (a2 >= 2) {
                        break;
                    }
                }
                if (a5.length() > 3) {
                    a5 = a5.substring(0, 3);
                }

                a1 = a1.concat(a5);
                if (a2 == 0 && a1.length() >= 3 && a4 == 0) {
                    a1 = a1.substring(0, 3);
                }
            }


            if (a1.length() == 1) {
                a1 = a1 + "AAAAA";
            } else if (a1.length() == 2) {
                a1 = a1 + "AAAA";
            } else if (a1.length() == 3) {
                a1 = a1 + "AAA";
            } else if (a1.length() == 4) {
                a1 = a1 + "AA";
            } else if (a1.length() == 5) {
                a1 = a1 + "A";
            }

            if (a1.length() > 6) {
                a1 = a1.substring(0, 6);
            }
            String accountPrefix = a1;
            String accountNo = "";
            if (a1 != null) {
                accountNo = a1 + "0000";
            }
            List accountno = customerDAO.findmasterAccountNumber(accountNo, type);
            if (accountno != null) {
                if (accountno.size() > 0) {
                    request.setAttribute("account", "sameaccount");
                } else {
                    request.setAttribute("account", "account");
                }
            }
            tradingpartner.setAccountno(accountNo);
            tradingpartner.setAccountPrefix(accountPrefix);

            //customer.setAccountPrefix(accountPrefix);
            session.setAttribute("MasterTradingPartner", tradingpartner);

            if (session.getAttribute("generalInformation") != null) {
                session.removeAttribute("generalInformation");
            }
            if (session.getAttribute("addConfig") != null) {
                session.removeAttribute("addConfig");
            }
            if (session.getAttribute("customerList") != null) {
                session.removeAttribute("customerList");
            }
            if (session.getAttribute("cust") != null) {
                session.removeAttribute("cust");
            }
            if (session.getAttribute("customerList1") != null) {
                session.removeAttribute("customerList1");
            }

            if (session.getAttribute("assocList") != null) {
                session.removeAttribute("assocList");
            }
            if (session.getAttribute("masterassoc") != null) {
                session.removeAttribute("masterassoc");
            }
            if (session.getAttribute("accounting") != null) {
                session.removeAttribute("accounting");
            }
            if (session.getAttribute("customerbean") != null) {
                session.removeAttribute("customerbean");
            }
            if (session.getAttribute("customerBean") != null) {
                session.removeAttribute("customerBean");
            }
            if (session.getAttribute("paymentList") != null) {
                session.removeAttribute("paymentList");
            }
            if (session.getAttribute("CPlist") != null) {
                session.removeAttribute("CPlist");
            }
            if (session.getAttribute("masteraccounting") != null) {
                session.removeAttribute("masteraccounting");
            }
            if (session.getAttribute("mastergeneralInformation") != null) {
                session.removeAttribute("mastergeneralInformation");
            }
            if (session.getAttribute("masteraddressList") != null) {
                session.removeAttribute("masteraddressList");
            }
            if (session.getAttribute("MasterVendorInfoList") != null) {
                session.removeAttribute("MasterVendorInfoList");
            }
            if (session.getAttribute("paymentList") != null) {
                session.removeAttribute("paymentList");
            }
            GeneralInformation generalInformation = new GeneralInformation();
            Date date = new Date(System.currentTimeMillis());
            generalInformation.setLdPwdActivated(date);
            session.setAttribute("mastergeneralInformation", generalInformation);
        }
        return mapping.findForward("customercode");
    }
}