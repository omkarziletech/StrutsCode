/*
 * Generated by MyEclipse Struts
 * Template path: templates/java/JavaClass.vtl
 */
package com.gp.cong.logisoft.struts.action;

import java.util.ArrayList;
import java.util.List;
import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;
import javax.servlet.http.HttpSession;
import org.apache.struts.action.Action;
import org.apache.struts.action.ActionForm;
import org.apache.struts.action.ActionForward;
import org.apache.struts.action.ActionMapping;
import com.gp.cong.logisoft.domain.CustomerTemp;
import com.gp.cong.logisoft.hibernate.dao.CustomerDAO;
import com.gp.cong.logisoft.struts.form.CustomerPopUpForm;

/** 
 * MyEclipse Struts
 * Creation date: 02-29-2008
 * 
 * XDoclet definition:
 * @struts.action path="/customerPopUp" name="customerPopUpForm" input="/jsps/Tradingpartnermaintainance/CustomerPopUp.jsp" scope="request" validate="true"
 */
public class CustomerPopUpAction extends Action {
    /*
     * Generated Methods
     */

    /**
     * Method execute
     * @param mapping
     * @param form
     * @param request
     * @param response
     * @return ActionForward
     */
    public ActionForward execute(ActionMapping mapping, ActionForm form,
            HttpServletRequest request, HttpServletResponse response) throws Exception {
        CustomerPopUpForm customerPopUpForm = (CustomerPopUpForm) form;// TODO Auto-generated method stub
        String buttonValue = customerPopUpForm.getButtonValue();
        HttpSession session = ((HttpServletRequest) request).getSession();
        CustomerTemp cust = new CustomerTemp();
        String index = customerPopUpForm.getIndex();
        String accountNo = customerPopUpForm.getAccountNo();
        String accountName = customerPopUpForm.getAccountName();
        CustomerDAO customerDAO = new CustomerDAO();
        List assocList = new ArrayList();


        if (buttonValue.equals("delete")) {
            if (session.getAttribute("assocList") == null) {
                assocList = new ArrayList();
            } else {
                assocList = (List) session.getAttribute("assocList");
            }
            CustomerTemp portstoRemove = (CustomerTemp) assocList.get(Integer.parseInt(index));
            assocList.remove(portstoRemove);
        } else if (buttonValue.equals("cancel")) {

            String option = "";
            if (session.getAttribute("option") != null) {
                option = (String) session.getAttribute("option");
            }
            if (option.equals("add")) {
                request.setAttribute("cancel", "cancel");
            } else if (option.equals("edit")) {
                request.setAttribute("cancel", "editcancel");
            }

        } else if (buttonValue.equals("custpopup"))//-----DOJO CODE------
        {
            List acclist = new ArrayList();
            accountName = accountName.replace("amp;", "");
            if (accountNo != null && !accountNo.equals("")) {
                acclist = customerDAO.findForAgenttNo(accountNo, accountName);
                if (acclist != null && acclist.size() > 0) {
                    cust = (CustomerTemp) acclist.get(0);
                }
                if (session.getAttribute("assocList") != null) {
                    assocList = (List) session.getAttribute("assocList");
                } else {
                    assocList = new ArrayList();
                }
                assocList.add(cust);



            }

            if (accountName != null && !accountName.equals("")) {

                acclist = customerDAO.findForAgenttNo(accountNo, accountName);
                if (acclist != null && acclist.size() > 0) {
                    cust = (CustomerTemp) acclist.get(0);
                }
                if (session.getAttribute("assocList") != null) {
                    assocList = (List) session.getAttribute("assocList");
                } else {
                    assocList = new ArrayList();
                }
                assocList.add(cust);
                session.setAttribute("assocList", assocList);

            }



        }

        return mapping.findForward("customerpopup");
    }
}