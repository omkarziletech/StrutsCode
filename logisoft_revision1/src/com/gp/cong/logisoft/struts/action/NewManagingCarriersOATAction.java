  /*
 * Generated by MyEclipse Struts
 * Template path: templates/java/JavaClass.vtl
 */
package com.gp.cong.logisoft.struts.action;

import java.util.ArrayList;
import java.util.HashSet;
import java.util.Iterator;
import java.util.List;
import java.util.Set;

import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;
import javax.servlet.http.HttpSession;

import org.apache.struts.action.Action;
import org.apache.struts.action.ActionForm;
import org.apache.struts.action.ActionForward;
import org.apache.struts.action.ActionMapping;

import com.gp.cong.logisoft.domain.CarrierAirline;
import com.gp.cong.logisoft.domain.CarrierAirlinePortException;
import com.gp.cong.logisoft.domain.CarrierOceanEqptRates;
import com.gp.cong.logisoft.domain.CarriersOrLine;
import com.gp.cong.logisoft.domain.CarriersOrLineTemp;
import com.gp.cong.logisoft.domain.GenericCode;
import com.gp.cong.logisoft.domain.PortsTemp;
import com.gp.cong.logisoft.domain.User;


import com.gp.cong.logisoft.hibernate.dao.CarriersOrLineDAO;
import com.gp.cong.logisoft.hibernate.dao.GenericCodeDAO;

import com.gp.cong.logisoft.struts.form.NewManagingCarriersOATForm;

/** 
 * MyEclipse Struts
 * Creation date: 12-06-2007
 * 
 * XDoclet definition:
 * @struts.action path="/newManagingCarriersOAT" name="newManagingCarriersOATForm" input="/jsps/datareference/newManagingCarriersOAT.jsp" scope="request" validate="true"
 */
public class NewManagingCarriersOATAction extends Action {
    /*
     * Generated Methods
     */

    /**
     * Method execute
     * @param mapping
     * @param form
     * @param request
     * @param response
     * @return ActionForward
     */
    public ActionForward execute(ActionMapping mapping, ActionForm form,
            HttpServletRequest request, HttpServletResponse response) throws Exception {
        HttpSession session = ((HttpServletRequest) request).getSession();
        NewManagingCarriersOATForm newManagingCarriersOATForm = (NewManagingCarriersOATForm) form;// TODO Auto-generated method stub
        String forwardName = "";
        String message = "";
        //acomyn
        String acomyn = newManagingCarriersOATForm.getAcomyn();
        if (acomyn == null) {
            acomyn = "N";
        } else {
            acomyn = "Y";
        }
        List portList = null;
        String ediCarrier = newManagingCarriersOATForm.getEdiCarrier();
        List eqptList = null;
        String carriercode = newManagingCarriersOATForm.getCarriercode();
        Set carrierAirLineset = new HashSet<CarrierAirline>();
        Set portExceptionSet = new HashSet<CarrierAirlinePortException>();
        Set carrierOceanEqptRatesSet = new HashSet<CarrierOceanEqptRates>();
        String buttonValue = newManagingCarriersOATForm.getButtonValue();
        GenericCode genericcode = null;
        GenericCodeDAO genriccodedao = new GenericCodeDAO();
        // added for DTO
        List carrierList = new ArrayList();


        if (buttonValue != null && buttonValue.equals("onchange")) {
            CarriersOrLine carriers = (CarriersOrLine) session.getAttribute("carriers");
            carriers.setCarriertype(genriccodedao.findById(new Integer(newManagingCarriersOATForm.getCarrierType())));
            session.setAttribute("carriers", carriers);
            forwardName = "newcarriercode";
        }
        if (buttonValue.equals("save")) {
            CarriersOrLineDAO carrierDAO = new CarriersOrLineDAO();
            genericcode = genriccodedao.findById(new Integer(newManagingCarriersOATForm.getCarrierType()));
            String carriertype = newManagingCarriersOATForm.getCarrierType();

            CarriersOrLine carrierorline = new CarriersOrLine();
            carrierorline.setCarriertype(genericcode);
            carrierorline.setCarriercode(newManagingCarriersOATForm.getCarriercode());
            carrierorline.setCarriername(newManagingCarriersOATForm.getCarriername());
            carrierorline.setSCAC(newManagingCarriersOATForm.getSCAC());
            carrierorline.setAbbreviation(newManagingCarriersOATForm.getAbbreviation());

            if (carriertype.equals("4")) {
                CarrierAirline carrierairline = new CarrierAirline();
                carrierairline.setCarriercode(newManagingCarriersOATForm.getCarriercode());
                carrierairline.setAirabbr(newManagingCarriersOATForm.getAirabbr());
                carrierairline.setAircod(newManagingCarriersOATForm.getAircod());
                carrierairline.setAlnact(newManagingCarriersOATForm.getAlnact());
                carrierairline.setAcomyn(acomyn);

                carrierairline.setAcomcd(new Integer(newManagingCarriersOATForm.getCommissiontype()));
                if (newManagingCarriersOATForm.getCommisionpercentage() != null && newManagingCarriersOATForm.getCommisionpercentage() != "") {
                    carrierairline.setAcompc(new Double(newManagingCarriersOATForm.getCommisionpercentage()));
                }
                if (session.getAttribute("portLst") != null) {
                    portList = (List) session.getAttribute("portLst");
                    Iterator iter = portList.iterator();
                    while (iter.hasNext()) {
                        PortsTemp port = (PortsTemp) iter.next();
                        CarrierAirlinePortException portexception = new CarrierAirlinePortException();
                        portexception.setShedulenumber(port);
                        portExceptionSet.add(portexception);
                    }
                    carrierairline.setPortcodes(portExceptionSet);
                }
                carrierAirLineset.add(carrierairline);
                carrierorline.setCarrierAirlineSet(carrierAirLineset);
            }
            if (carriertype.equals("13")) {

                carrierorline.setFclContactNumber(newManagingCarriersOATForm.getFclContactNumber());

                if (ediCarrier != null && ediCarrier.equals("on")) {
                    carrierorline.setEdiCarrier("I");
                } else {
                    carrierorline.setEdiCarrier("N");
                }
                if (session.getAttribute("eqptList") != null) {
                    eqptList = (List) session.getAttribute("eqptList");
                    Iterator iter = eqptList.iterator();
                    while (iter.hasNext()) {

                        carrierOceanEqptRatesSet.add(iter.next());

                    }
                    carrierorline.setCarrierOceanEqptSet(carrierOceanEqptRatesSet);
                }
            }

            User userid = null;
            if (session.getAttribute("loginuser") != null) {
                userid = (User) session.getAttribute("loginuser");
            }
            carrierDAO.save(carrierorline, userid.getLoginName());

            CarriersOrLineTemp carrierTemp = new CarriersOrLineTemp();
            carrierTemp.setCarriercode(carrierorline.getCarriercode());
            carrierTemp.setCarriername(carrierorline.getCarriername());
            carrierTemp.setCarriertype(carrierorline.getCarriertype());
            carrierTemp.setSCAC(carrierorline.getSCAC());
            carrierList.add(carrierTemp);
            session.removeAttribute("carrierList");
            session.setAttribute("carrierList", carrierList);
            message = "Carriers details added successfully";
            request.setAttribute("message", message);
            session.removeAttribute("portList");
            session.removeAttribute("eqptList");

            session.removeAttribute("carriers");
            forwardName = "managingCarriersOAT";
            request.setAttribute("buttonValue", buttonValue);
        }


        if (buttonValue.equals("cancel")) {
            session.removeAttribute("portList");
            session.removeAttribute("eqptList");
            session.removeAttribute("carriers");
            forwardName = "managingCarriersOAT";
        }


        return mapping.findForward(forwardName);
    }
}