/*
 * Generated by MyEclipse Struts
 * Template path: templates/java/JavaClass.vtl
 */
package com.gp.cong.logisoft.struts.action;

import java.util.ArrayList;
import java.util.List;

import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;
import javax.servlet.http.HttpSession;

import org.apache.struts.action.Action;
import org.apache.struts.action.ActionForm;
import org.apache.struts.action.ActionForward;
import org.apache.struts.action.ActionMapping;

import com.gp.cong.logisoft.domain.PaymentMethod;
import com.gp.cong.logisoft.struts.form.PaymentPopupForm;

/** 
 * MyEclipse Struts
 * Creation date: 10-01-2008
 * 
 * XDoclet definition:
 * @struts.action path="/paymentPopup" name="paymentPopupForm" input="/jsps/Tradingpartnermaintainance/paymentPopup.jsp" scope="request" validate="true"
 */
public class PaymentPopupAction extends Action {

    public ActionForward execute(ActionMapping mapping, ActionForm form,
            HttpServletRequest request, HttpServletResponse response) {
        PaymentPopupForm paymentPopupForm = (PaymentPopupForm) form;// TODO Auto-generated method stub
        HttpSession session = ((HttpServletRequest) request).getSession();
        //Vendor vendorDomainObj=new Vendor();
        PaymentMethod payDomainobj = new PaymentMethod();

        String buttonValue = paymentPopupForm.getButtonValue();
        String pmethod = paymentPopupForm.getPaymethod();
        String banktitle = paymentPopupForm.getBankname();
        String bankaddress = paymentPopupForm.getBaddr();
        String acctname = paymentPopupForm.getVacctname();
        String acctno = paymentPopupForm.getVacctno();
        String aba = paymentPopupForm.getAba();
        String swift = paymentPopupForm.getSwift();
        String remit_email = paymentPopupForm.getRemail();
        String remitfax = paymentPopupForm.getRfax();
        String pemail = paymentPopupForm.getPayemail();

        payDomainobj.setPaymethod(pmethod);
        payDomainobj.setBankname(banktitle);
        payDomainobj.setBaddr(bankaddress);
        payDomainobj.setVacctname(acctname);
        payDomainobj.setVacctno(acctno);
        payDomainobj.setAba(aba);
        payDomainobj.setSwift(swift);
        payDomainobj.setRemail(remit_email);
        payDomainobj.setRfax(remitfax);
        session.setAttribute("PaymentInfo", payDomainobj);

        String path = " ";
        String value = "";
        if (session.getAttribute("button") != null) {
            value = (String) session.getAttribute("button");
        }
        // if(session.getAttribute("Payment") != null && session.getAttribute("Payment").equals("add") && buttonValue.equals("add"))
        if (value.equals("vend") || value.equals("editvend") || value.equals("mvend") || value.equals("meditvend")) {

            List pList = new ArrayList();
            int index = 0;
            boolean flag = false;
            if (buttonValue.equals("add")) {

                if (session.getAttribute("paymentList") != null) {

                    pList = (List) session.getAttribute("paymentList");
                    for (int i = 0; i < pList.size(); i++) {
                        String msg = "";
                        PaymentMethod payobj = (PaymentMethod) pList.get(i);
                        if (payobj.getPaymethod().equals(pmethod))//-------CONDITION TO SELECT ONLY ONE PAYMENT METHOD----
                        {
                            msg = "Please Select different payment method";
                            request.setAttribute("message", msg);
                            flag = true;
                            break;

                        }

                        if (payobj.getIndex() != null) {
                            if (payobj.getIndex() > index) {
                                index = payobj.getIndex();
                            }
                        }
                    }
                    index++;
                } else {
                    pList = new ArrayList();
                    index++;
                }
                payDomainobj.setIndex(index);
                if (!flag) {
                    pList.add(payDomainobj);
                }

                session.setAttribute("paymentList", pList);

                if (session.getAttribute("PaymentInfo") != null) {
                    session.removeAttribute("PaymentInfo");
                }

            }

            session.removeAttribute("Payment");
            if (!flag) {
                if (value.equals("vend")) {
                    path = "/jsps/Tradingpartnermaintainance/vendor.jsp";
                }
                if (value.equals("editvend")) {
                    path = "/jsps/Tradingpartnermaintainance/Editvendor.jsp";
                }
                if (value.equals("mvend")) {
                    path = "/jsps/Tradingpartnermaintainance/MasterVendor.jsp";
                }
                if (value.equals("meditvend")) {
                    path = "/jsps/Tradingpartnermaintainance/MasterEditVendor.jsp";
                }
                request.setAttribute("path1", path);
                request.setAttribute("close", "close");
            }
        }

        return mapping.findForward("topay");
    }
}