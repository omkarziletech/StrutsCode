/*
 * Generated by MyEclipse Struts
 * Template path: templates/java/JavaClass.vtl
 */
package com.gp.cong.logisoft.struts.action;

import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.List;

import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;
import javax.servlet.http.HttpSession;

import org.apache.struts.action.Action;
import org.apache.struts.action.ActionForm;
import org.apache.struts.action.ActionForward;
import org.apache.struts.action.ActionMapping;

import com.gp.cong.logisoft.hibernate.dao.DataExchangeTransactionDAO;
import com.gp.cong.logisoft.hibernate.dao.UsecasesDAO;

import com.gp.cong.logisoft.struts.form.Monitor1Form;
import com.gp.cong.logisoft.beans.MonitorBean;

/** 
 * MyEclipse Struts
 * Creation date: 11-26-2007
 * 
 * XDoclet definition:
 * @struts.action path="/monitor1" name="monitor1Form" input="/jsps/dataexchange/Monitor1.jsp" scope="request" validate="true"
 */
public class Monitor1Action extends Action {
    /*
     * Generated Methods
     */

    /**
     * Method execute
     * @param mapping
     * @param form
     * @param request
     * @param response
     * @return ActionForward
     */
    public ActionForward execute(ActionMapping mapping, ActionForm form,
            HttpServletRequest request, HttpServletResponse response) throws Exception {
        Monitor1Form monitor1Form = (Monitor1Form) form;// TODO Auto-generated method stub
        HttpSession session = ((HttpServletRequest) request).getSession();
        MonitorBean monitorBean = new MonitorBean();
        String useCaseId = monitor1Form.getUseCaseId();
        UsecasesDAO usecasesDAO = new UsecasesDAO();
        String useCaseCode = usecasesDAO.getUseCaseName(Integer.parseInt(useCaseId));
        String useCaseDate = monitor1Form.getTxtCal();
        String docSetKeyValue = monitor1Form.getDocSetKeyValue();
        String flowFrom = monitor1Form.getFlowFrom();
        String hours = monitor1Form.getHours();
        String minutes = monitor1Form.getMinutes();
        String time = useCaseDate + " " + hours + ":" + minutes;
        String status = monitor1Form.getStatus();
        String buttonValue = monitor1Form.getButtonValue();
        SimpleDateFormat sdf = new SimpleDateFormat("MM/dd/yyyy hh:mm");
        monitorBean.setUseCaseId(useCaseCode);
        monitorBean.setTxtCal(useCaseDate);
        monitorBean.setHours(hours);
        monitorBean.setMinutes(minutes);
        monitorBean.setDocSetKeyValue(docSetKeyValue);
        monitorBean.setFlowFrom(flowFrom);
        monitorBean.setStatus(status);

        if (buttonValue.equals("searchall")) {
            request.setAttribute("buttonValue", buttonValue);
        } else {
            request.setAttribute("monitorBean", monitorBean);
            java.util.Date javaDate = null;
            if (time != null && !time.equals("")) {
                    javaDate = sdf.parse(time);
            }
            DataExchangeTransactionDAO dataExchangeTransactionDAO = new DataExchangeTransactionDAO();

            List useCaseList = dataExchangeTransactionDAO.findForUseCase(useCaseId, javaDate, docSetKeyValue, flowFrom, status);

            session.setAttribute("useCaseList", useCaseList);
            request.setAttribute("buttonValue", buttonValue);
        }

        return mapping.findForward("monitor");
    }
}