/*
 * Generated by MyEclipse Struts
 * Template path: templates/java/JavaClass.vtl
 */
package com.gp.cong.logisoft.struts.action;

import java.util.ArrayList;
import java.util.HashSet;
import java.util.Iterator;
import java.util.List;
import java.util.Set;

import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;
import javax.servlet.http.HttpSession;

import org.apache.struts.action.Action;
import org.apache.struts.action.ActionForm;
import org.apache.struts.action.ActionForward;
import org.apache.struts.action.ActionMapping;

import com.gp.cong.logisoft.domain.AgencyInfo;
import com.gp.cong.logisoft.domain.AirPortConfiguration;
import com.gp.cong.logisoft.domain.FCLPortConfiguration;
import com.gp.cong.logisoft.domain.ImportPortConfiguration;
import com.gp.cong.logisoft.domain.LCLPortConfiguration;
import com.gp.cong.logisoft.domain.Ports;
import com.gp.cong.logisoft.domain.PortsTemp;
import com.gp.cong.logisoft.domain.User;
import com.gp.cong.logisoft.hibernate.dao.PortsDAO;
import com.gp.cong.logisoft.struts.form.NewPortDetailsForm;

/** 
 * MyEclipse Struts
 * Creation date: 01-17-2008
 * 
 * XDoclet definition:
 * @struts.action path="/newPortDetails" name="newPortDetailsForm" input="/jsps/datareference/NewPortDetails.jsp" scope="request" validate="true"
 */
public class NewPortDetailsAction extends Action {
    /*
     * Generated Methods
     */

    /**
     * Method execute
     * @param mapping
     * @param form
     * @param request
     * @param response
     * @return ActionForward
     */
    public ActionForward execute(ActionMapping mapping, ActionForm form,
            HttpServletRequest request, HttpServletResponse response) throws Exception {
        NewPortDetailsForm newPortDetailsForm = (NewPortDetailsForm) form;// TODO Auto-generated method stub
        String buttonValue = newPortDetailsForm.getButtonValue();
        HttpSession session = ((HttpServletRequest) request).getSession();
        Set lclPortConfigSet = new HashSet<LCLPortConfiguration>();
        Set fclPortConfigSet = new HashSet<FCLPortConfiguration>();
        Set airPortConfigSet = new HashSet<AirPortConfiguration>();
        Set importConfigSet = new HashSet<ImportPortConfiguration>();
        Set agencyInfoSet = new HashSet<AgencyInfo>();
        List agencyInfoListForLcl = null;
        List agencyInfoListForFcl = null;
        List agencyInfoListForAir = null;
        List agencyInfoListForImp = null;
        LCLPortConfiguration lclPortObj = null;
        FCLPortConfiguration fclPortObj = null;
        AirPortConfiguration airPortObj = null;
        ImportPortConfiguration impPortObj = null;
        AgencyInfo agencyInfoObj = null;
        PortsDAO portsDAO = new PortsDAO();
        Ports portobj = null;
        if (buttonValue.equals("save")) {
            if (session.getAttribute("portobj") != null) {
                portobj = (Ports) session.getAttribute("portobj");
            } else {
                portobj = new Ports();
            }
            portobj.setShedulenumber(newPortDetailsForm.getPortCode());
            portobj.setControlNo(newPortDetailsForm.getControlNo());
            if (session.getAttribute("lclPortobj") != null) {
                lclPortObj = (LCLPortConfiguration) session.getAttribute("lclPortobj");

                lclPortConfigSet.add(lclPortObj);
                portobj.setLclPortConfigSet(lclPortConfigSet);
            }
            if (session.getAttribute("fclPortobj") != null) {
                fclPortObj = (FCLPortConfiguration) session.getAttribute("fclPortobj");
                fclPortConfigSet.add(fclPortObj);
                portobj.setFclPortConfigSet(fclPortConfigSet);
            }


            if (session.getAttribute("airPortObj") != null) {
                airPortObj = (AirPortConfiguration) session.getAttribute("airPortObj");
                airPortConfigSet.add(airPortObj);
                portobj.setAirPortConfigSet(airPortConfigSet);
            }

            if (session.getAttribute("importPortObj") != null) {

                impPortObj = (ImportPortConfiguration) session.getAttribute("importPortObj");


                importConfigSet.add(impPortObj);
                portobj.setImportConfigSet(importConfigSet);
            }

            if (session.getAttribute("agencyInfoListForLCL") != null) {

                agencyInfoListForLcl = (List) session.getAttribute("agencyInfoListForLCL");

                Iterator iter = agencyInfoListForLcl.iterator();
                while (iter.hasNext()) {
                    AgencyInfo agencyInfo = (AgencyInfo) iter.next();
                    agencyInfoSet.add(agencyInfo);
                }

            }
            if (session.getAttribute("agencyInfoListForFCL") != null) {
                agencyInfoListForFcl = (List) session.getAttribute("agencyInfoListForFCL");
                Iterator iter = agencyInfoListForFcl.iterator();
                while (iter.hasNext()) {
                    AgencyInfo agencyInfo = (AgencyInfo) iter.next();
                    agencyInfoSet.add(agencyInfo);
                }

            }
            if (session.getAttribute("agencyInfoListForAir") != null) {
                agencyInfoListForAir = (List) session.getAttribute("agencyInfoListForAir");
                Iterator iter = agencyInfoListForAir.iterator();
                while (iter.hasNext()) {
                    AgencyInfo agencyInfo = (AgencyInfo) iter.next();
                    agencyInfoSet.add(agencyInfo);
                }

            }
            if (session.getAttribute("agencyInfoListForImp") != null) {
                agencyInfoListForImp = (List) session.getAttribute("agencyInfoListForImp");
                Iterator iter = agencyInfoListForImp.iterator();
                while (iter.hasNext()) {
                    AgencyInfo agencyInfo = (AgencyInfo) iter.next();
                    agencyInfoSet.add(agencyInfo);
                }

            }

            if (agencyInfoSet != null && agencyInfoSet.size() > 0) {
                portobj.setAgencyInfoSet(agencyInfoSet);
            }
            User userId = null;
            if (session.getAttribute("loginuser") != null) {
                userId = (User) session.getAttribute("loginuser");
            }
            portsDAO.save(portobj, userId.getLoginName());
            List portList = new ArrayList();
            PortsTemp portTemp = new PortsTemp();
            portTemp.setCityname(portobj.getCityname());
            portTemp.setControlNo(portobj.getControlNo());
            portTemp.setCountryName(portobj.getCountryName());
            portTemp.setDrABBR(portobj.getDrABBR());
            portTemp.setEciportcode(portobj.getEciportcode());
            portTemp.setId(portobj.getId());
            portTemp.setIsocode(portobj.getIsocode());
            portTemp.setPiercode(portobj.getPiercode());
            portTemp.setPortname(portobj.getPortname());
            portTemp.setShedulenumber(portobj.getShedulenumber());
            portTemp.setStart(portobj.getStart());
            portTemp.setType(portobj.getType());
            portTemp.setUncitycode(portobj.getUncitycode());
            portTemp.setUnCode(portobj.getUnCode());
            portList.add(portTemp);
            session.setAttribute("portList", portList);
            if (session.getAttribute("portobj") != null) {
                session.removeAttribute("portobj");
            }
            if (session.getAttribute("lclPortobj") != null) {
                session.removeAttribute("lclPortobj");
            }
            if (session.getAttribute("fclPortobj") != null) {
                session.removeAttribute("fclPortobj");
            }
            if (session.getAttribute("airPortObj") != null) {
                session.removeAttribute("airPortObj");
            }
            if (session.getAttribute("importPortObj") != null) {
                session.removeAttribute("importPortObj");
            }
            if (session.getAttribute("agencyInfoListForLCL") != null) {
                session.removeAttribute("agencyInfoListForLCL");
            }
            if (session.getAttribute("agencyInfoListForFCL") != null) {
                session.removeAttribute("agencyInfoListForFCL");
            }
            if (session.getAttribute("agencyInfoListForAir") != null) {
                session.removeAttribute("agencyInfoListForAir");
            }
            if (session.getAttribute("agencyInfoListForImp") != null) {
                session.removeAttribute("agencyInfoListForImp");
            }

            String message = "Port details saved successfully";
            session.setAttribute("message", message);
            session.setAttribute("trade", "ports");
        } else if (buttonValue.equals("cancel")) {
            if (session.getAttribute("message") != null) {
                session.removeAttribute("message");
            }
            if (session.getAttribute("portList1") != null) {
                session.removeAttribute("portList1");
            }
            session.setAttribute("trade", "ports");
        }
        session.setAttribute("buttonValue", buttonValue);
        return mapping.findForward("addports");
    }
}