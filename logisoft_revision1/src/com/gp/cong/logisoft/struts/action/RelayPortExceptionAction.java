/*
 * Generated by MyEclipse Struts
 * Template path: templates/java/JavaClass.vtl
 */
package com.gp.cong.logisoft.struts.action;

import java.util.ArrayList;
import java.util.List;

import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;
import javax.servlet.http.HttpSession;

import org.apache.struts.action.Action;
import org.apache.struts.action.ActionForm;
import org.apache.struts.action.ActionForward;
import org.apache.struts.action.ActionMapping;

import com.gp.cong.logisoft.domain.PortException;
import com.gp.cong.logisoft.domain.PortsTemp;
import com.gp.cong.logisoft.hibernate.dao.PortExceptionDAO;
import com.gp.cong.logisoft.hibernate.dao.PortsDAO;
import com.gp.cong.logisoft.struts.form.RelayPortExceptionForm;

/** 
 * MyEclipse Struts
 * Creation date: 12-21-2007
 * 
 * XDoclet definition:
 * @struts.action path="/relayPortException" name="relayPortExceptionForm" input="/jsps/datareference/relayPortException.jsp" scope="request" validate="true"
 */
public class RelayPortExceptionAction extends Action {
    /*
     * Generated Methods
     */

    /**
     * Method execute
     * @param mapping
     * @param form
     * @param request
     * @param response
     * @return ActionForward
     */
    public ActionForward execute(ActionMapping mapping, ActionForm form,
            HttpServletRequest request, HttpServletResponse response) throws Exception {
        RelayPortExceptionForm relayPortExceptionForm = (RelayPortExceptionForm) form;// TODO Auto-generated method stub
        HttpSession session = ((HttpServletRequest) request).getSession();

        String originName = relayPortExceptionForm.getOriginName();
        String originCode = relayPortExceptionForm.getOriginCode();
        String destinationName = relayPortExceptionForm.getDestinationName();
        String destinationCode = relayPortExceptionForm.getDestinationCode();
        String buttonValue = relayPortExceptionForm.getButtonValue();
        String forwardName = "";
        String msg = "";
        String message = "";
        List portRelayList = null;
        PortException exception = null;

        PortsTemp portobj = null;
        PortsTemp portobj2 = null;

        if (!buttonValue.equals("cancel")) {

            if (session.getAttribute("exception") == null) {
                exception = new PortException();
            } else {
                exception = (PortException) session.getAttribute("exception");
            }
            PortExceptionDAO portExceptionDAO = new PortExceptionDAO();
            PortsDAO portsDAO = new PortsDAO();


            portobj = portsDAO.findById1(Integer.parseInt(originCode));
            if (portobj != null) {
                exception.setOriginId(portobj);

            }

            portobj2 = portsDAO.findById1(Integer.parseInt(destinationCode));
            if (portobj2 != null) {
                exception.setDestinationId(portobj2);
            }

            session.setAttribute("exception", exception);
            //	request.setAttribute("exception",exception);
            forwardName = "addport";
        }
        if (buttonValue.equals("cancel")) {
            forwardName = "cancel";
        }

        if (buttonValue.equals("add")) {

            if (session.getAttribute("portRelayList") != null) {
                portRelayList = (List) session.getAttribute("portRelayList");
            } else {
                portRelayList = new ArrayList();
            }
            portRelayList.add(exception);
            session.removeAttribute("exception");
            session.setAttribute("portRelayList", portRelayList);
        }

        if (buttonValue.equals("delete")) {
            if (session.getAttribute("portRelayList") == null) {
                portRelayList = new ArrayList();
            } else {
                portRelayList = (List) session.getAttribute("portRelayList");
            }
            int index = relayPortExceptionForm.getIndex();
            portRelayList.remove(portRelayList.get(index));

        }
        request.setAttribute("buttonValue", buttonValue);
        return mapping.findForward(forwardName);

    }
}