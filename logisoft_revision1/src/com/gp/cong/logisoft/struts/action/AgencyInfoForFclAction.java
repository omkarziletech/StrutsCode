/*
 * Generated by MyEclipse Struts
 * Template path: templates/java/JavaClass.vtl
 */
package com.gp.cong.logisoft.struts.action;

import java.util.ArrayList;
import java.util.List;

import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;
import javax.servlet.http.HttpSession;

import org.apache.struts.action.Action;
import org.apache.struts.action.ActionForm;
import org.apache.struts.action.ActionForward;
import org.apache.struts.action.ActionMapping;

import com.gp.cong.logisoft.domain.AgencyInfo;
import com.gp.cong.logisoft.domain.Consignee;
import com.gp.cong.logisoft.domain.Customer;
import com.gp.cong.logisoft.domain.CustomerTemp;
import com.gp.cong.logisoft.domain.PortException;
import com.gp.cong.logisoft.domain.RefTerminal;
import com.gp.cong.logisoft.hibernate.dao.AgencyInfoDAO;

import com.gp.cong.logisoft.hibernate.dao.CustomerDAO;
import com.gp.cong.logisoft.hibernate.dao.PortExceptionDAO;
import com.gp.cong.logisoft.hibernate.dao.PortsDAO;
import com.gp.cong.logisoft.struts.form.AgencyInfoForFclForm;

/** 
 * MyEclipse Struts
 * Creation date: 01-11-2008
 * 
 * XDoclet definition:
 * @struts.action path="/agencyInfoForFcl" name="agencyInfoForFclForm" input="/jsps/datareference/agencyInfoForFcl.jsp" scope="request" validate="true"
 */
public class AgencyInfoForFclAction extends Action {
    /*
     * Generated Methods
     */

    /**
     * Method execute
     * @param mapping
     * @param form
     * @param request
     * @param response
     * @return ActionForward
     */
    public ActionForward execute(ActionMapping mapping, ActionForm form,
            HttpServletRequest request, HttpServletResponse response) throws Exception {
        AgencyInfoForFclForm agencyInfoForFclForm = (AgencyInfoForFclForm) form;// TODO Auto-generated method stub
        HttpSession session = ((HttpServletRequest) request).getSession();
        String buttonValue = agencyInfoForFclForm.getButtonValue();
        String agentAcctNo = agencyInfoForFclForm.getAgentAcountNo();
        String consigneeAcctNo = agencyInfoForFclForm.getConsigneeAcctNo();
        Customer customerObj = new Customer();
        CustomerDAO customerDAO = new CustomerDAO();
        Consignee consigneeObj = new Consignee();

        AgencyInfo agencyObj = null;

        List agencyInfoListForFCL = new ArrayList();

        int index = agencyInfoForFclForm.getIndex();
        if (!buttonValue.equals("cancel")) {
            if (session.getAttribute("agencyObjfcl") == null) {
                agencyObj = new AgencyInfo();
            } else {
                agencyObj = (AgencyInfo) session.getAttribute("agencyObjfcl");
            }
            session.setAttribute("agencyObjfcl", agencyObj);

        }

        if (buttonValue.equals("save")) {
            if (session.getAttribute("agencyInfoListForFCLAdd") != null) {
                List agencyInfoList = (List) session.getAttribute("agencyInfoListForFCLAdd");
                for (int i = 0; i < agencyInfoList.size(); i++) {
                    AgencyInfo agencyInfo1 = (AgencyInfo)agencyInfoList.get(i);
                    if(index != -1 && index == i){
                        agencyInfo1.setDefaultValue("Y");
                    }else{
                        agencyInfo1.setDefaultValue("N");
                    }
                    new AgencyInfoDAO().save(agencyInfo1);
                }
                session.setAttribute("agencyInfoListForFCL", session.getAttribute("agencyInfoListForFCLAdd"));
                session.removeAttribute("agencyInfoListForFCLAdd");
            }
        }

        if (buttonValue.equals("add")) {
            if (session.getAttribute("agencyInfoListForFCLAdd") != null) {
                agencyInfoListForFCL = (List) session.getAttribute("agencyInfoListForFCLAdd");
            }
            agencyObj=(agencyObj==null)?agencyObj=new AgencyInfo():agencyObj;
            agencyObj.setAgentId(customerDAO.getCustTemp((null!=agentAcctNo && !agentAcctNo.equals(""))?agentAcctNo:null));
            agencyObj.setConsigneeId(customerDAO.getCustTemp((null!=consigneeAcctNo && !consigneeAcctNo.equals(""))?consigneeAcctNo:null));
            agencyObj.setDefaultValue("N");
            agencyObj.setType("F");
            agencyObj.setSchnum(agencyInfoForFclForm.getSchedNum());
            agencyInfoListForFCL.add(agencyObj);
            new AgencyInfoDAO().save(agencyObj);
            session.removeAttribute("agencyObjfcl");
            request.setAttribute("schnum", agencyInfoForFclForm.getSchedNum());
            session.setAttribute("agencyInfoListForFCLAdd", agencyInfoListForFCL);
        }


        if (buttonValue.equals("delete")) {
            if (session.getAttribute("agencyInfoListForFCLAdd") != null) {
                agencyInfoListForFCL = (List) session.getAttribute("agencyInfoListForFCLAdd");
                AgencyInfo agencyInfo = (AgencyInfo)agencyInfoListForFCL.get(index);
                agencyInfoListForFCL.remove(agencyInfoListForFCL.get(index));
                if(null != agencyInfo){
                    new AgencyInfoDAO().delete(agencyInfo);
                }
            }
            request.setAttribute("schnum", agencyInfoForFclForm.getSchedNum());
            session.setAttribute("agencyInfoListForLCLAdd", agencyInfoListForFCL);
            session.setAttribute("agencyInfoListForFCL", agencyInfoListForFCL);
        }
        if (buttonValue.equals("cancel")) {
            session.setAttribute("agencyInfoListForFCL", session.getAttribute("agencyInfoListForFCLAdd"));
            session.removeAttribute("agencyInfoListForFCLAdd");
        }
        request.setAttribute("buttonValue", buttonValue);
        return mapping.findForward("agencyInfoForFcl");
    }
}