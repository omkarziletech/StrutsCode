/*
 * Generated by MyEclipse Struts
 * Template path: templates/java/JavaClass.vtl
 */
package com.gp.cong.logisoft.struts.action;

import java.util.List;

import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;
import javax.servlet.http.HttpSession;

import org.apache.struts.action.Action;
import org.apache.struts.action.ActionForm;
import org.apache.struts.action.ActionForward;
import org.apache.struts.action.ActionMapping;

import com.gp.cong.logisoft.domain.Genericcodelabels;
import com.gp.cong.logisoft.hibernate.dao.GenericCodeDAO;
import com.gp.cong.logisoft.struts.form.GenericCodeForm;
import com.gp.cong.logisoft.util.DBUtil;

/** 
 * MyEclipse Struts
 * Creation date: 02-14-2008
 * 
 * XDoclet definition:
 * @struts.action path="/genericCode" name="genericCodeForm" input="/jsps/datareference/GenericCode.jsp" scope="request" validate="true"
 */
public class GenericCodeAction extends Action {
    /*
     * Generated Methods
     */

    /**
     * Method execute
     * @param mapping
     * @param form
     * @param request
     * @param response
     * @return ActionForward
     */
    public ActionForward execute(ActionMapping mapping, ActionForm form,
            HttpServletRequest request, HttpServletResponse response) throws Exception {
        GenericCodeForm genericCodeForm = (GenericCodeForm) form;// TODO Auto-generated method stub
        String buttonValue = genericCodeForm.getButtonValue();
        HttpSession session = ((HttpServletRequest) request).getSession();
        String codeTypeId = genericCodeForm.getCodeTypeId();
        String code = genericCodeForm.getCodeValue().toUpperCase();
        GenericCodeDAO genericCodeDAO = new GenericCodeDAO();
        Genericcodelabels gcl = new Genericcodelabels();

        if (buttonValue.equals("search")) {
            List genericList = genericCodeDAO.findGenericCode(codeTypeId, code);
            if (genericList != null) {
                if (genericList.size() > 0) {
                    String msg = "Please enter different Generic Code, This Generic Code already exists";
                    request.setAttribute("message", msg);
                    request.setAttribute("code", codeTypeId);
                    request.setAttribute("genericcode", "genericcode");
                } else {
                    int i = Integer.parseInt(codeTypeId);
                    if (i == 1) {
                        session.setAttribute("column2", "US");
                    }
                    DBUtil db = new DBUtil();
                    session.setAttribute("codeDetails", db.getCodesDetails(i));
                    session.setAttribute("codevalue", code);
                    request.setAttribute("code", codeTypeId);
                    request.setAttribute("genericcode", "addgenericcode");
                }
            }
        }
        if (buttonValue.equals("codeselected")) {
            request.setAttribute("code", codeTypeId);
        }
        return mapping.findForward("genericcode");
    }
}