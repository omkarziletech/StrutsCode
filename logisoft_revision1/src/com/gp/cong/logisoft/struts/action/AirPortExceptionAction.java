/*
 * Generated by MyEclipse Struts
 * Template path: templates/java/JavaClass.vtl
 */
package com.gp.cong.logisoft.struts.action;

import java.util.ArrayList;
import java.util.List;
import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;
import javax.servlet.http.HttpSession;
import org.apache.struts.action.Action;
import org.apache.struts.action.ActionForm;
import org.apache.struts.action.ActionForward;
import org.apache.struts.action.ActionMapping;
import com.gp.cong.logisoft.domain.PortsTemp;
import com.gp.cong.logisoft.struts.form.AirPortExceptionForm;

/** 
 * MyEclipse Struts
 * Creation date: 12-08-2007
 * 
 * XDoclet definition:
 * @struts.action path="/airPortException" name="airPortExceptionForm" input="/jsps/datareference/airPortException.jsp" scope="request" validate="true"
 */
public class AirPortExceptionAction extends Action {
    /*
     * Generated Methods
     */

    /**
     * Method execute
     * @param mapping
     * @param form
     * @param request
     * @param response
     * @return ActionForward
     */
    public ActionForward execute(ActionMapping mapping, ActionForm form,
            HttpServletRequest request, HttpServletResponse response) {
        HttpSession session = ((HttpServletRequest) request).getSession();
        AirPortExceptionForm airPortExceptionForm = (AirPortExceptionForm) form;// TODO Auto-generated method stub
        String buttonValue = airPortExceptionForm.getButtonvalue();
        String portcode = airPortExceptionForm.getPortcode();
        PortsTemp portsobj = null;
        List portsList = null;


        if (buttonValue.equals("add")) {
            portsobj = (PortsTemp) session.getAttribute("portsobj");
            if (session.getAttribute("portLst") != null) {
                portsList = (List) session.getAttribute("portLst");
            } else {
                portsList = new ArrayList();
            }
            boolean flag = false;
            for (int i = 0; i < portsList.size(); i++) {
                PortsTemp port1 = (PortsTemp) portsList.get(i);
                if (port1.getShedulenumber().equals(portsobj.getShedulenumber())) {
                    if (port1.getControlNo().equals(portsobj.getControlNo())) {
                        flag = true;
                        break;
                    }
                }
            }
            if (flag) {
                String msg = "This port is already added";
                request.setAttribute("msg", msg);
            } else {

                portsList.add(portsobj);
                session.setAttribute("portLst", portsList);
                if (session.getAttribute("portsobj") != null) {
                    session.removeAttribute("portsobj");
                }
            }
            request.setAttribute("buttonValue", buttonValue);
        }
        if (buttonValue.equals("delete")) {
            if (session.getAttribute("portLst") == null) {
                portsList = new ArrayList();
            } else {
                portsList = (List) session.getAttribute("portLst");
            }
            int index = airPortExceptionForm.getIndex();
            PortsTemp portstoRemove = (PortsTemp) portsList.get(index);
            portsList.remove(index);
            request.setAttribute("buttonValue", buttonValue);
        }

        return mapping.findForward("airPortException");
    }
}