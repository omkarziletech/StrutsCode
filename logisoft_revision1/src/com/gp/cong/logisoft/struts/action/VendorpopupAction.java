/*
 * Generated by MyEclipse Struts
 * Template path: templates/java/JavaClass.vtl
 */
package com.gp.cong.logisoft.struts.action;

import java.util.List;

import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;
import javax.servlet.http.HttpSession;

import org.apache.struts.action.Action;
import org.apache.struts.action.ActionForm;
import org.apache.struts.action.ActionForward;
import org.apache.struts.action.ActionMapping;

import com.gp.cong.logisoft.domain.CustomerTemp;
import com.gp.cong.logisoft.domain.Warehouse;
import com.gp.cong.logisoft.hibernate.dao.CustomerDAO;
import com.gp.cong.logisoft.struts.form.VendorpopupForm;

/** 
 * MyEclipse Struts
 * Creation date: 04-01-2008
 * 
 * XDoclet definition:
 * @struts.action path="/vendorpopup" name="vendorpopupForm" input="/jsps/datarefernce/Vendorpopup.jsp" scope="request" validate="true"
 */
public class VendorpopupAction extends Action {
    /*
     * Generated Methods
     */

    /**
     * Method execute
     * @param mapping
     * @param form
     * @param request
     * @param response
     * @return ActionForward
     */
    public ActionForward execute(ActionMapping mapping, ActionForm form,
            HttpServletRequest request, HttpServletResponse response) throws Exception {
        VendorpopupForm vendorpopupForm = (VendorpopupForm) form;// TODO Auto-generated method stub
        HttpSession session = ((HttpServletRequest) request).getSession();
        String accountNo = vendorpopupForm.getAccountNo();
        String buttonValue = vendorpopupForm.getButtonValue();
        CustomerDAO customerDAO = new CustomerDAO();
        String type = "V";
        Warehouse warehouse = null;
        String search = "";
        String path1 = "";
        if (session.getAttribute("search1") != null) {
            search = (String) session.getAttribute("search1");
        }
        if (request.getParameter("index") != null) {
            int ind = Integer.parseInt(request.getParameter("index"));
            List vendorlist = (List) session.getAttribute("customerList");
            CustomerTemp c2 = (CustomerTemp) vendorlist.get(ind);
            if (session.getAttribute("warehouse") != null) {
                warehouse = (Warehouse) session.getAttribute("warehouse");
            } else {
                warehouse = new Warehouse();
            }
            warehouse.setVendorNo(c2.getAccountNo());
            session.setAttribute("warehouse", warehouse);
            if (search.equals("searchipivendor")) {
                path1 = "jsps/datareference/addWarehouse.jsp";
            } else if (search.equals("editipivendor")) {
                path1 = "jsps/datareference/editWarehouse.jsp";
            }
            request.setAttribute("path1", path1);
            request.setAttribute("buttonValue", "completed");
        } else {
            if (buttonValue.equals("search")) {
                List customerList = (List) customerDAO.findForAccountNo(accountNo, type);
                session.setAttribute("customerList", customerList);
            }
        }
        return mapping.findForward("vendor");
    }
}