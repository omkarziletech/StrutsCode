 /*
 * Generated by MyEclipse Struts
 * Template path: templates/java/JavaClass.vtl
 */
package com.gp.cong.logisoft.struts.action;

import java.util.Iterator;
import java.util.List;

import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;
import javax.servlet.http.HttpSession;

import org.apache.struts.action.Action;
import org.apache.struts.action.ActionForm;
import org.apache.struts.action.ActionForward;
import org.apache.struts.action.ActionMapping;

import com.gp.cong.logisoft.domain.ClaimDetails;
import com.gp.cong.logisoft.domain.Customer;
import com.gp.cong.logisoft.domain.FCLPortConfiguration;
import com.gp.cong.logisoft.domain.FTFMaster;
import com.gp.cong.logisoft.domain.FclBuy;
import com.gp.cong.logisoft.domain.LCLColoadMaster;
import com.gp.cong.logisoft.domain.LCLPortConfiguration;
import com.gp.cong.logisoft.domain.Ports;
import com.gp.cong.logisoft.domain.PortsTemp;
import com.gp.cong.logisoft.domain.RefTerminal;
import com.gp.cong.logisoft.domain.RelayDestination;
import com.gp.cong.logisoft.domain.RelayInquiry;
import com.gp.cong.logisoft.domain.RelayOrigin;
import com.gp.cong.logisoft.domain.RetailStandardCharges;
import com.gp.cong.logisoft.domain.StandardCharges;
import com.gp.cong.logisoft.domain.UniversalMaster;
import com.gp.cong.logisoft.domain.VoyageExport;
import com.gp.cong.logisoft.domain.VoyageInland;
//import com.gp.cong.logisoft.domain.UniversalMaster;
import com.gp.cong.logisoft.hibernate.dao.PortsDAO;
import com.gp.cong.logisoft.struts.form.SearchPierCodeForm;
import com.gp.cvst.logisoft.struts.form.ArCreditHoldForm;
import com.gp.cvst.logisoft.struts.form.manifestForm;
import com.gp.cong.logisoft.domain.Unit;
import com.gp.cong.logisoft.domain.UnLocation;
//import com.gp.cvst.logisoft.domain.Quotation;
//import com.gp.cvst.logisoft.domain.Quotation;

/** 
 * MyEclipse Struts
 * Creation date: 02-12-2008
 * 
 * XDoclet definition:
 * @struts.action path="/searchPierCode" name="searchPierCodeForm" input="/datareference/SearchPierCode.jsp" scope="request" validate="true"
 */
public class SearchPierCodeAction extends Action {
    /*
     * Generated Methods
     */

    /**
     * Method execute
     * @param mapping
     * @param form
     * @param request
     * @param response
     * @return ActionForward
     */
    public ActionForward execute(ActionMapping mapping, ActionForm form,
            HttpServletRequest request, HttpServletResponse response) throws Exception {
        SearchPierCodeForm searchPierCodeForm = (SearchPierCodeForm) form;// TODO Auto-generated method stub
        HttpSession session = ((HttpServletRequest) request).getSession();
        String buttonValue = searchPierCodeForm.getButtonValue();
        String pierCode = searchPierCodeForm.getPierCode();
        String portName = searchPierCodeForm.getPortName();
        PortsDAO portDAO = new PortsDAO();
        Ports portobject = null;
        PortsTemp portsTempObject = new PortsTemp();
        String search = "";
        String path1 = "";
        RelayInquiry relaycode = null;
        StandardCharges airrates = null;

        int index = -1;
        if (searchPierCodeForm.getIndex() != null && !searchPierCodeForm.getIndex().equals("")) {
            index = Integer.parseInt(searchPierCodeForm.getIndex());
        }

        RetailStandardCharges retailStandardCharges = null;
        if ((request.getParameter("index") != null && !request.getParameter("index").equals("")) || (searchPierCodeForm.getIndex() != null && !searchPierCodeForm.getIndex().equals(""))) {

            int ind = Integer.parseInt(request.getParameter("index"));
            if (index >= 0) {
                ind = index;
            }
            List pierList1 = (List) session.getAttribute("pierList");

            if (session.getAttribute("search1") != null) {
                search = (String) session.getAttribute("search1");
            }
            if (search.equals("searchportcity") || search.equals("editportcity")) {
                if (search.equals("searchportcity")) {
                    path1 = "jsps/datareference/portDetails.jsp";
                } else if (search.equals("editportcity")) {
                    path1 = "jsps/datareference/editPortDetails.jsp";
                }

                portsTempObject = (PortsTemp) pierList1.get(ind);
                portobject = portDAO.findById(portsTempObject.getId());
                session.setAttribute("portobject", portobject);
            } else if (search.equals("searchterminalcity") || search.equals("editterminalcity")) {
                RefTerminal terminal = null;
                if (session.getAttribute("terminal") == null) {
                    terminal = new RefTerminal();
                } else {
                    terminal = (RefTerminal) session.getAttribute("terminal");
                }

                portsTempObject = (PortsTemp) pierList1.get(ind);
                terminal.setGovSchCode(portsTempObject.getShedulenumber());
                terminal.setScheduleSuffix(portsTempObject.getControlNo());
                terminal.setTerminalLocation(portsTempObject.getPortname());
                session.setAttribute("terminal", terminal);
                if (search.equals("searchterminalcity")) {
                    path1 = "jsps/datareference/NewTerminal.jsp";
                } else if (search.equals("editterminalcity")) {
                    path1 = "jsps/datareference/EditTerminal.jsp";
                }

            } else if (search.equals("addpol") || search.equals("searchpol")) {
                if (search.equals("addpol")) {
                    if (session.getAttribute("relaycode") == null) {
                        relaycode = new RelayInquiry();
                    } else {
                        relaycode = (RelayInquiry) session.getAttribute("relaycode");
                    }
                } else if (search.equals("searchpol")) {
                    if (session.getAttribute("searchrelaycode") == null) {
                        relaycode = new RelayInquiry();
                    } else {
                        relaycode = (RelayInquiry) session.getAttribute("searchrelaycode");
                    }
                }
                portsTempObject = (PortsTemp) pierList1.get(ind);
                relaycode.setPolCode(portsTempObject);
                if (search.equals("searchpol")) {
                    session.setAttribute("searchrelaycode", relaycode);
                    path1 = "jsps/datareference/searchRelay.jsp";
                }
                if (search.equals("addpol")) {
                    session.setAttribute("relaycode", relaycode);
                    path1 = "jsps/datareference/relayCode.jsp";
                }

            } else if (search.equals("addpod") || search.equals("searchpod")) {
                PortsTemp port1 = new PortsTemp();
                if (search.equals("addpod")) {
                    if (session.getAttribute("relaycode") == null) {
                        relaycode = new RelayInquiry();
                    } else {
                        relaycode = (RelayInquiry) session.getAttribute("relaycode");
                    }
                } else if (search.equals("searchpod")) {
                    if (session.getAttribute("searchrelaycode") == null) {
                        relaycode = new RelayInquiry();
                    } else {
                        relaycode = (RelayInquiry) session.getAttribute("searchrelaycode");
                    }
                }
                port1 = (PortsTemp) pierList1.get(ind);
                relaycode.setPodCode(port1);
                if (search.equals("addpod")) {
                    session.setAttribute("relaycode", relaycode);
                    path1 = "jsps/datareference/relayCode.jsp";
                }
                if (search.equals("searchpod")) {
                    session.setAttribute("searchrelaycode", relaycode);
                    path1 = "jsps/datareference/searchRelay.jsp";
                }
            } else if (search.equals("searchvoyage")) {
                VoyageExport voyageExport = null;
                PortsTemp portObj1 = new PortsTemp();
                if (session.getAttribute("searchvoyagerecords") != null) {
                    voyageExport = (VoyageExport) session.getAttribute("searchvoyagerecords");
                } else {
                    voyageExport = new VoyageExport();
                }
                portObj1 = (PortsTemp) pierList1.get(ind);

                voyageExport.setDestinationPort(portObj1);
                session.setAttribute("searchvoyagerecords", voyageExport);
                path1 = "jsps/voyagemanagement/searchVoyage.jsp";
            }/*else if(search.equals("NewBookingFCLs")){
            BookingFcl b1=null;
            if(session.getAttribute("bookingValues")!=null)
            {
            b1=(BookingFcl)session.getAttribute("bookingValues");
            }
            else
            {
            b1=new BookingFcl();
            }
            portsTempObject=(PortsTemp)pierList1.get(ind);
            b1.setPortofDischarge(portsTempObject);
            path1="jsps/fclQuotes/newBookings.jsp";
            }*//*else if(search.equals("EditNewBookingFCLs")){
            BookingFcl b1=null;
            if(session.getAttribute("bookingValues")!=null)
            {
            b1=(BookingFcl)session.getAttribute("bookingValues");
            }
            else
            {
            b1=new BookingFcl();
            }
            portsTempObject=(PortsTemp)pierList1.get(ind);
            b1.setPortofDischarge(portsTempObject);
            path1="jsps/fclQuotes/EditBookings.jsp";
            }*/ else if (search.equals("addvoyage")) {
                VoyageExport voyageExport = null;
                PortsTemp portsobj = new PortsTemp();
                if (session.getAttribute("addvoyagerecords") != null) {
                    voyageExport = (VoyageExport) session.getAttribute("addvoyagerecords");
                } else {
                    voyageExport = new VoyageExport();
                }
                portsobj = (PortsTemp) pierList1.get(ind);
                voyageExport.setDestinationPort(portsobj);
                session.setAttribute("addvoyagerecords", voyageExport);
                path1 = "jsps/voyagemanagement/voyagePopUp.jsp";
            } else if (search.equals("exportvoyage")) {
                VoyageExport voyageExport = null;
                PortsTemp portsobj = new PortsTemp();
                if (session.getAttribute("exportvoyage") != null) {
                    voyageExport = (VoyageExport) session.getAttribute("exportvoyage");
                } else {
                    voyageExport = new VoyageExport();
                }
                portsobj = (PortsTemp) pierList1.get(ind);
                voyageExport.setDestinationPort(portsobj);
                session.setAttribute("exportvoyage", voyageExport);
                path1 = "jsps/voyagemanagement/exportVoyage.jsp";
            } else if (search.equals("exportvoyageport")) {
                VoyageExport voyageExport = null;
                PortsTemp portsobj = new PortsTemp();
                if (session.getAttribute("exportvoyageport") != null) {
                    voyageExport = (VoyageExport) session.getAttribute("exportvoyageport");
                } else {
                    voyageExport = new VoyageExport();
                }
                portsobj = (PortsTemp) pierList1.get(ind);
                voyageExport.setDestinationPort(portsobj);
                session.setAttribute("exportvoyageport", voyageExport);
                path1 = "jsps/voyagemanagement/exportVoyage.jsp";
            } else if (search.equals("exportvoyagepier")) {
                VoyageExport voyageExport = null;
                PortsTemp portsobj = new PortsTemp();
                if (session.getAttribute("exportvoyagepier") != null) {
                    voyageExport = (VoyageExport) session.getAttribute("exportvoyagepier");
                } else {
                    voyageExport = new VoyageExport();
                }
                portsobj = (PortsTemp) pierList1.get(ind);
                voyageExport.setDestinationPort(portsobj);
                session.setAttribute("exportvoyagepier", voyageExport);
                path1 = "jsps/voyagemanagement/exportVoyage.jsp";
            } else if (search.equals("voyage")) {
                VoyageExport voyageExport = null;
                PortsTemp portsobj = new PortsTemp();
                if (session.getAttribute("searchvoyagerecords") != null) {
                    voyageExport = (VoyageExport) session.getAttribute("searchvoyagerecords");
                } else {
                    voyageExport = new VoyageExport();
                }
                portsobj = (PortsTemp) pierList1.get(ind);
                voyageExport.setDestinationPort(portsobj);
                session.setAttribute("searchvoyagerecords", voyageExport);
                path1 = "jsps/voyagemanagement/exportVoyage.jsp";
            } else if (search.equals("addinland")) {
                VoyageInland voyageInland = null;
                PortsTemp portsobj = new PortsTemp();
                if (session.getAttribute("addinlandrecords") != null) {
                    voyageInland = (VoyageInland) session.getAttribute("addinlandrecords");
                } else {
                    voyageInland = new VoyageInland();
                }
                portsobj = (PortsTemp) pierList1.get(ind);
                voyageInland.setDestTerminal(portsobj);
                session.setAttribute("addinlandrecords", voyageInland);
                path1 = "jsps/voyagemanagement/inlandPopup.jsp";
            } else if (search.equals("searchinland")) {
                VoyageInland voyageInland = null;
                PortsTemp portsobj = new PortsTemp();
                if (session.getAttribute("searchinlandrecords") != null) {
                    voyageInland = (VoyageInland) session.getAttribute("searchinlandrecords");
                } else {
                    voyageInland = new VoyageInland();
                }
                portsobj = (PortsTemp) pierList1.get(ind);
                voyageInland.setDestTerminal(portsobj);
                session.setAttribute("searchinlandrecords", voyageInland);
                path1 = "jsps/voyagemanagement/searchInland.jsp";
            } else if (search.equals("inlandport")) {
                VoyageInland voyageInland = null;
                PortsTemp portsobj = new PortsTemp();
                if (session.getAttribute("inlandport") != null) {
                    voyageInland = (VoyageInland) session.getAttribute("inlandport");
                } else {
                    voyageInland = new VoyageInland();
                }
                portsobj = (PortsTemp) pierList1.get(ind);
                voyageInland.setOptItPortNo(portsobj);
                session.setAttribute("inlandport", voyageInland);
                path1 = "jsps/voyagemanagement/inlandVoyage.jsp";
            } else if (search.equals("inlandports")) {
                VoyageInland voyageInland = null;
                PortsTemp portsobj = new PortsTemp();
                if (session.getAttribute("inlandports") != null) {
                    voyageInland = (VoyageInland) session.getAttribute("inlandports");
                } else {
                    voyageInland = new VoyageInland();
                }
                portsobj = (PortsTemp) pierList1.get(ind);
                voyageInland.setScheduleDkDestination(portsobj);
                session.setAttribute("inlandports", voyageInland);
                path1 = "jsps/voyagemanagement/inlandVoyage.jsp";
            } else if (search.equals("retailsearchpairport") || search.equals("retailaddairport")) {
                PortsTemp portObj1 = new PortsTemp();
                if (search.equals("retailsearchpairport")) {
                    if (session.getAttribute("retailmanage") == null) {
                        retailStandardCharges = new RetailStandardCharges();
                    } else {
                        retailStandardCharges = (RetailStandardCharges) session.getAttribute("retailmanage");
                    }
                }
                if (search.equals("retailaddairport")) {
                    if (session.getAttribute("retailstandardCharges") == null) {
                        retailStandardCharges = new RetailStandardCharges();
                    } else {
                        retailStandardCharges = (RetailStandardCharges) session.getAttribute("retailstandardCharges");
                    }
                }


                portObj1 = (PortsTemp) pierList1.get(ind);
                String defaultRate = "";
                if (search.equals("retailaddairport")) {
                    Ports ports = portDAO.findById(portObj1.getId());

                    if (ports.getLclPortConfigSet() != null) {

                        Iterator iter = ports.getLclPortConfigSet().iterator();
                        while (iter.hasNext()) {
                            LCLPortConfiguration lcl = (LCLPortConfiguration) iter.next();
                            if (lcl.getDefaultRate() != null) {
                                defaultRate = lcl.getDefaultRate();
                                session.setAttribute("retaildefaultRate", defaultRate);
                                break;
                            }
                        }
                    }
                }
                //retailStandardCharges.setDestPort(portObj1);
                if (search.equals("retailsearchpairport")) {
                    session.setAttribute("retailmanage", retailStandardCharges);
                    path1 = "jsps/ratemanagement/manageRetailRates.jsp";

                    if (session.getAttribute("recommonList") != null) {
                        session.removeAttribute("recommonList");

                    }
                    if (session.getAttribute("renoncommonList") != null) {
                        session.removeAttribute("renoncommonList");
                    }
                    if (session.getAttribute("retmessage") != null) {
                        session.removeAttribute("retmessage");
                    }
                }
                if (search.equals("retailaddairport")) {
                    session.setAttribute("retailstandardCharges", retailStandardCharges);
                    path1 = "jsps/ratemanagement/retailAddAirRatesPopup.jsp";
                }

            } else if (search.equals("searchcustomer")) {
                Customer customer = null;
                if (session.getAttribute("customer") != null) {
                    customer = (Customer) session.getAttribute("customer");
                } else {
                    customer = new Customer();
                }
                PortsTemp port1 = new PortsTemp();
                port1 = (PortsTemp) pierList1.get(ind);
                customer.setPortName(port1.getPortname());
                //customer.setSchNum(port1);

                session.setAttribute("customer", customer);
                path1 = "jsps/Tradingpartnermaintainance/Customer.jsp";
            } else if (search.equals("searchlclcoload")) {
                LCLColoadMaster lclColoadMaster = null;
                if (session.getAttribute("searchlclColoadMaster") != null) {
                    lclColoadMaster = (LCLColoadMaster) session.getAttribute("searchlclColoadMaster");
                } else {
                    lclColoadMaster = new LCLColoadMaster();
                }
                PortsTemp port1 = new PortsTemp();
                port1 = (PortsTemp) pierList1.get(ind);
                //lclColoadMaster.setDestinationPort(port1);
                session.setAttribute("searchlclColoadMaster", lclColoadMaster);
                path1 = "jsps/ratemanagement/SearchLCLCoload.jsp";
            } else if (search.equals("searchUniversal")) {
                UniversalMaster universalMaster = null;
                if (session.getAttribute("searchuniMaster") != null) {
                    universalMaster = (UniversalMaster) session.getAttribute("searchuniMaster");
                } else {
                    universalMaster = new UniversalMaster();
                }
                PortsTemp port1 = new PortsTemp();
                port1 = (PortsTemp) pierList1.get(ind);
                universalMaster.setDestinationPort(port1);
                session.setAttribute("searchuniMaster", universalMaster);
                path1 = "jsps/ratemanagement/SearchUniversal.jsp";
            } else if (search.equals("addlclcoload")) {
                LCLColoadMaster lclColoadMaster = null;
                if (session.getAttribute("addlclColoadMaster") != null) {
                    lclColoadMaster = (LCLColoadMaster) session.getAttribute("addlclColoadMaster");
                } else {
                    lclColoadMaster = new LCLColoadMaster();
                }
                PortsTemp port1 = new PortsTemp();
                port1 = (PortsTemp) pierList1.get(ind);
                //lclColoadMaster.setDestinationPort(port1);
                Ports ports = portDAO.findById(port1.getId());
                String defaultRate = "";
                if (ports.getLclPortConfigSet() != null) {
                    Iterator iter = ports.getLclPortConfigSet().iterator();
                    while (iter.hasNext()) {
                        LCLPortConfiguration lcl = (LCLPortConfiguration) iter.next();
                        if (lcl.getDefaultRate() != null) {
                            defaultRate = lcl.getDefaultRate();
                            session.setAttribute("lcldefaultRate", defaultRate);
                            break;
                        }
                    }
                }
                session.setAttribute("addlclColoadMaster", lclColoadMaster);
                path1 = "jsps/ratemanagement/AddLclColoadPopup.jsp";
            } //
            else if (search.equals("searchftf")) {
                FTFMaster ftfMaster = null;
                if (session.getAttribute("searchftfMaster") != null) {
                    ftfMaster = (FTFMaster) session.getAttribute("searchftfMaster");
                } else {
                    ftfMaster = new FTFMaster();
                }
                PortsTemp port1 = new PortsTemp();
                port1 = (PortsTemp) pierList1.get(ind);
                //ftfMaster.setDestinationPort(port1);
                session.setAttribute("searchftfMaster", ftfMaster);
                path1 = "jsps/ratemanagement/searchFTF.jsp";
            } else if (search.equals("searchftf")) {
                FTFMaster ftfMaster = null;
                if (session.getAttribute("searchftfMaster") != null) {
                    ftfMaster = (FTFMaster) session.getAttribute("searchftfMaster");
                } else {
                    ftfMaster = new FTFMaster();
                }
                PortsTemp port1 = new PortsTemp();
                port1 = (PortsTemp) pierList1.get(ind);
                //ftfMaster.setDestinationPort(port1);
                Ports ports = portDAO.findById(port1.getId());
                String defaultRate = "";
                if (ports.getLclPortConfigSet() != null) {
                    Iterator iter = ports.getLclPortConfigSet().iterator();
                    while (iter.hasNext()) {
                        LCLPortConfiguration ftf = (LCLPortConfiguration) iter.next();
                        if (ftf.getDefaultRate() != null) {
                            defaultRate = ftf.getDefaultRate();
                            session.setAttribute("ftfdefaultRate", defaultRate);
                            break;
                        }
                    }
                }
                session.setAttribute("searchftfMaster", ftfMaster);
                path1 = "jsps/ratemanagement/searchFTF.jsp";
            } //$$$$$$
            else if (search.equals("addftf")) {
                FTFMaster ftfMaster = null;
                if (session.getAttribute("addftfMaster") != null) {
                    ftfMaster = (FTFMaster) session.getAttribute("addftfMaster");
                } else {
                    ftfMaster = new FTFMaster();
                }
                PortsTemp port1 = new PortsTemp();
                port1 = (PortsTemp) pierList1.get(ind);
                //ftfMaster.setDestinationPort(port1);
                Ports ports = portDAO.findById(port1.getId());
                String defaultRate = "";
                if (ports.getLclPortConfigSet() != null) {
                    Iterator iter = ports.getLclPortConfigSet().iterator();
                    while (iter.hasNext()) {
                        LCLPortConfiguration ftf = (LCLPortConfiguration) iter.next();
                        if (ftf.getDefaultRate() != null) {
                            defaultRate = ftf.getDefaultRate();
                            session.setAttribute("ftfdefaultRate", defaultRate);
                            break;
                        }
                    }
                }
                //ftfMaster.setDestinationPort(port1);
                session.setAttribute("addftfMaster", ftfMaster);
                path1 = "jsps/ratemanagement/addFTFpopup.jsp";
            } //
            else if (search.equals("editcustomer")) {
                Customer customer = null;
                if (session.getAttribute("customer") != null) {
                    customer = (Customer) session.getAttribute("customer");
                } else {
                    customer = new Customer();
                }
                PortsTemp port1 = new PortsTemp();
                port1 = (PortsTemp) pierList1.get(ind);
                customer.setPortName(port1.getPortname());
                //customer.setSchNum(port1);

                session.setAttribute("customer", customer);
                path1 = "jsps/Tradingpartnermaintainance/EditCustomer.jsp";
            } else if (search.equals("mastereditcustomer")) {
                Customer customer = null;
                if (session.getAttribute("customer") != null) {
                    customer = (Customer) session.getAttribute("customer");
                } else {
                    customer = new Customer();
                }
                PortsTemp port1 = new PortsTemp();
                port1 = (PortsTemp) pierList1.get(ind);
                customer.setPortName(port1.getPortname());
                //customer.setSchNum(port1);

                session.setAttribute("customer", customer);
                path1 = "jsps/Tradingpartnermaintainance/masterEditCustomer.jsp";
            } else if (search.equals("mastersearchcustomer")) {
                Customer customer = null;
                if (session.getAttribute("customer") != null) {
                    customer = (Customer) session.getAttribute("customer");
                } else {
                    customer = new Customer();
                }
                PortsTemp port1 = new PortsTemp();
                port1 = (PortsTemp) pierList1.get(ind);
                customer.setPortName(port1.getPortname());
                //customer.setSchNum(port1);

                session.setAttribute("customer", customer);
                path1 = "jsps/Tradingpartnermaintainance/MasterCustomer.jsp";
            } else if (search.equals("claim")) {
                ClaimDetails claim = new ClaimDetails();
                PortsTemp port1 = new PortsTemp();
                port1 = (PortsTemp) pierList1.get(ind);
                claim.setPortNumber(port1.getShedulenumber());
                session.setAttribute("claimDetails", claim);
                path1 = "jsps/datareference/ClaimDetails.jsp";
            } else if (search.equals("trashipment")) {
                LCLPortConfiguration lclPortConfigurationDefaultRate = null;
                if (session.getAttribute("lclPortobj") != null) {
                    lclPortConfigurationDefaultRate = (LCLPortConfiguration) session.getAttribute("lclPortobj");
                } else {
                    lclPortConfigurationDefaultRate = new LCLPortConfiguration();
                }
                PortsTemp port1 = new PortsTemp();
                port1 = (PortsTemp) pierList1.get(ind);
//                lclPortConfigurationDefaultRate.setTranshipment(port1);
                session.setAttribute("lclPortobj", lclPortConfigurationDefaultRate);
                path1 = "jsps/datareference/lclPortsConfig.jsp";
            } else if (search.equals("edittranshipment")) {
                LCLPortConfiguration lclPortConfigurationDefaultRate = null;
                if (session.getAttribute("lclPortConfigurationObj") != null) {
                    lclPortConfigurationDefaultRate = (LCLPortConfiguration) session.getAttribute("lclPortConfigurationObj");
                } else {
                    lclPortConfigurationDefaultRate = new LCLPortConfiguration();
                }
                PortsTemp port1 = new PortsTemp();
                port1 = (PortsTemp) pierList1.get(ind);
//                lclPortConfigurationDefaultRate.setTranshipment(port1);
                session.setAttribute("lclPortConfigurationObj", lclPortConfigurationDefaultRate);
                path1 = "jsps/datareference/editLclPortsConfig.jsp";
            } else if (search.equals("defaultport")) {
                LCLPortConfiguration lclPortConfigurationDefaultRate = null;
                if (session.getAttribute("lclPortobj") != null) {
                    lclPortConfigurationDefaultRate = (LCLPortConfiguration) session.getAttribute("lclPortobj");
                } else {
                    lclPortConfigurationDefaultRate = new LCLPortConfiguration();
                }
                PortsTemp port1 = new PortsTemp();
                port1 = (PortsTemp) pierList1.get(ind);
//                lclPortConfigurationDefaultRate.setDefaultPortOfDischarge(port1);
                session.setAttribute("lclPortobj", lclPortConfigurationDefaultRate);
                path1 = "jsps/datareference/lclPortsConfig.jsp";
            } else if (search.equals("editdefaultport")) {
                LCLPortConfiguration lclPortConfigurationDefaultRate = null;
                if (session.getAttribute("lclPortConfigurationObj") != null) {
                    lclPortConfigurationDefaultRate = (LCLPortConfiguration) session.getAttribute("lclPortConfigurationObj");
                } else {
                    lclPortConfigurationDefaultRate = new LCLPortConfiguration();
                }
                PortsTemp port1 = new PortsTemp();
                port1 = (PortsTemp) pierList1.get(ind);
//                lclPortConfigurationDefaultRate.setDefaultPortOfDischarge(port1);
                session.setAttribute("lclPortConfigurationObj", lclPortConfigurationDefaultRate);
                path1 = "jsps/datareference/editLclPortsConfig.jsp";
            } else if (search.equals("fcltrashipment")) {
                FCLPortConfiguration fclPortobj = null;
                if (session.getAttribute("fclPortobj") != null) {
                    fclPortobj = (FCLPortConfiguration) session.getAttribute("fclPortobj");
                } else {
                    fclPortobj = new FCLPortConfiguration();
                }
                PortsTemp port1 = new PortsTemp();
                port1 = (PortsTemp) pierList1.get(ind);
//                fclPortobj.setTranshipment(port1);
                session.setAttribute("fclPortobj", fclPortobj);
                path1 = "jsps/datareference/fclPortsConfiguration.jsp";
            } else if (search.equals("editfcltrashipment")) {
                FCLPortConfiguration fclPortobj = null;
                if (session.getAttribute("fclPortObjConfiguration") != null) {
                    fclPortobj = (FCLPortConfiguration) session.getAttribute("fclPortObjConfiguration");
                } else {
                    fclPortobj = new FCLPortConfiguration();
                }
                PortsTemp port1 = new PortsTemp();
                port1 = (PortsTemp) pierList1.get(ind);
//                fclPortobj.setTranshipment(port1);
                session.setAttribute("fclPortObjConfiguration", fclPortobj);
                path1 = "jsps/datareference/editFclPortsConfig.jsp";
            } else if (search.equals("fcldefaultport")) {
                FCLPortConfiguration fclPortobj = null;
                if (session.getAttribute("fclPortobj") != null) {
                    fclPortobj = (FCLPortConfiguration) session.getAttribute("fclPortobj");
                } else {
                    fclPortobj = new FCLPortConfiguration();
                }
                PortsTemp port1 = new PortsTemp();
                port1 = (PortsTemp) pierList1.get(ind);
//                fclPortobj.setDefaultPortOfDischarge(port1);
                session.setAttribute("fclPortobj", fclPortobj);
                path1 = "jsps/datareference/fclPortsConfiguration.jsp";
            } else if (search.equals("editfcldefaultport")) {
                FCLPortConfiguration fclPortobj = null;
                if (session.getAttribute("fclPortObjConfiguration") != null) {
                    fclPortobj = (FCLPortConfiguration) session.getAttribute("fclPortObjConfiguration");
                } else {
                    fclPortobj = new FCLPortConfiguration();
                }
                PortsTemp port1 = new PortsTemp();
                port1 = (PortsTemp) pierList1.get(ind);
//                fclPortobj.setDefaultPortOfDischarge(port1);
                session.setAttribute("fclPortObjConfiguration", fclPortobj);
                path1 = "jsps/datareference/editFclPortsConfig.jsp";
            } //added by chandu
            // for EditQuotes
            //NewFCLBLdischarge by Pradeep
            //NewFCLBLladding
            //NewFCLBLdischarge
            /*else if(search.equals("QuoteDiscaharges"))
            {
            BookingFcl bookingFcl = null;
            if(session.getAttribute("searchBooking") != null)
            {
            bookingFcl = (BookingFcl)session.getAttribute("searchBooking");
            }else{
            bookingFcl = new BookingFcl();
            }
            PortsTemp port1=new PortsTemp();
            port1=(PortsTemp)pierList1.get(ind);
            bookingFcl.setPortofDischarge(port1);
            session.setAttribute("searchBooking",bookingFcl);
            path1 ="jsps/fclQuotes/SearchBookings.jsp";
            }*/ else if (search.equals("addorigin")) {
                RelayOrigin relayOrigin = null;
                if (session.getAttribute("relayOrigin") != null) {
                    relayOrigin = (RelayOrigin) session.getAttribute("relayOrigin");
                } else {
                    relayOrigin = new RelayOrigin();
                }
                PortsTemp port1 = new PortsTemp();
                port1 = (PortsTemp) pierList1.get(ind);
                relayOrigin.setOriginId(port1);
                session.setAttribute("relayOrigin", relayOrigin);
                path1 = "jsps/datareference/addOrigin.jsp";
            } else if (search.equals("addorigin")) {
                RelayOrigin relayOrigin = null;
                if (session.getAttribute("relayOrigin") != null) {
                    relayOrigin = (RelayOrigin) session.getAttribute("relayOrigin");
                } else {
                    relayOrigin = new RelayOrigin();
                }
                PortsTemp port1 = new PortsTemp();
                port1 = (PortsTemp) pierList1.get(ind);
                relayOrigin.setOriginId(port1);
                session.setAttribute("relayOrigin", relayOrigin);
                path1 = "jsps/datareference/addOrigin.jsp";
            } else if (search.equals("adddestination")) {
                RelayDestination relayDestination = null;
                if (session.getAttribute("relayDestination") != null) {
                    relayDestination = (RelayDestination) session.getAttribute("relayDestination");
                } else {
                    relayDestination = new RelayDestination();
                }
                PortsTemp port1 = new PortsTemp();
                port1 = (PortsTemp) pierList1.get(ind);
                relayDestination.setDestinationId(port1);
                session.setAttribute("relayDestination", relayDestination);
                path1 = "jsps/datareference/addDestination.jsp";
            } else if (search.equals("editorigin")) {
                RelayOrigin relayOrigin = null;
                if (session.getAttribute("relayOrigin") != null) {
                    relayOrigin = (RelayOrigin) session.getAttribute("relayOrigin");
                } else {
                    relayOrigin = new RelayOrigin();
                }
                PortsTemp port1 = new PortsTemp();
                port1 = (PortsTemp) pierList1.get(ind);
                relayOrigin.setOriginId(port1);
                session.setAttribute("relayOrigin", relayOrigin);
                path1 = "jsps/datareference/editOrigin.jsp";
            } else if (search.equals("editdestination")) {
                RelayDestination relayDestination = null;
                if (session.getAttribute("relayDestination") != null) {
                    relayDestination = (RelayDestination) session.getAttribute("relayDestination");
                } else {
                    relayDestination = new RelayDestination();
                }
                PortsTemp port1 = new PortsTemp();
                port1 = (PortsTemp) pierList1.get(ind);
                relayDestination.setDestinationId(port1);
                session.setAttribute("relayDestination", relayDestination);
                path1 = "jsps/datareference/editDestination.jsp";
            } else if (search.equals("carrier")) {
                PortsTemp portsobj = new PortsTemp();
                if (session.getAttribute("portsobj") != null) {
                    portsobj = (PortsTemp) session.getAttribute("portsobj");
                } else {
                    portsobj = new PortsTemp();
                }

                portsobj = (PortsTemp) pierList1.get(ind);
                session.setAttribute("portsobj", portsobj);
                path1 = "jsps/datareference/airPortException.jsp";
            } else if (search.equals("searchfcl")) {
                FclBuy fclBuy = null;
                UnLocation portsobj = new UnLocation();
                if (session.getAttribute("searchfclrecords") != null) {
                    fclBuy = (FclBuy) session.getAttribute("searchfclrecords");
                } else {
                    fclBuy = new FclBuy();
                }
                portsobj = (UnLocation) pierList1.get(ind);
                fclBuy.setDestinationPort(portsobj);
                session.setAttribute("searchfclrecords", fclBuy);
                path1 = "jsps/ratemanagement/SearchFCL.jsp";
                if (session.getAttribute("searchFclcodelist") != null) {
                    session.removeAttribute("searchFclcodelist");

                }
                if (session.getAttribute("fclcommonList") != null) {
                    session.removeAttribute("fclcommonList");
                }
                if (session.getAttribute("fclmessage") != null) {
                    session.removeAttribute("fclmessage");
                }
            } else if (search.equals("addfcl")) {
                FclBuy fclBuy = null;
                UnLocation portsobj = new UnLocation();
                if (session.getAttribute("addfclrecords") != null) {
                    fclBuy = (FclBuy) session.getAttribute("addfclrecords");
                } else {
                    fclBuy = new FclBuy();
                }
                portsobj = (UnLocation) pierList1.get(ind);
                fclBuy.setDestinationPort(portsobj);
                session.setAttribute("addfclrecords", fclBuy);
                path1 = "jsps/ratemanagement/AddFCLPopup.jsp";
            } else if (search.equals("unitport")) {
                Unit unit = new Unit();
                PortsTemp portsobj = new PortsTemp();
                if (session.getAttribute("addunitRecords") != null) {
                    unit = (Unit) session.getAttribute("addunitRecords");
                } else {
                    unit = new Unit();
                }
                portsobj = (PortsTemp) pierList1.get(ind);
                unit.setDestinationPort(portsobj);
                session.setAttribute("addunitRecords", unit);
                path1 = "jsps/Containermanagement/CreateUnit.jsp";
            } else if (search.equals("copyfcl")) {
                FclBuy fclBuy = null;
                UnLocation portsobj = new UnLocation();
                if (session.getAttribute("addfclrecords") != null) {
                    fclBuy = (FclBuy) session.getAttribute("addfclrecords");
                } else {
                    fclBuy = new FclBuy();
                }
                portsobj = (UnLocation) pierList1.get(ind);
                fclBuy.setDestinationPort(portsobj);
                session.setAttribute("addfclrecords", fclBuy);
                path1 = "jsps/ratemanagement/CopyAddFCLRecords.jsp";
            } else if (search.equals("associatedport")) {
                PortsTemp port1 = new PortsTemp();
                port1 = (PortsTemp) pierList1.get(ind);
                session.setAttribute("porttempobj", port1);
                path1 = "jsps/datareference/AssociatedPort.jsp";
            } else if (search.equals("destination")) {
                PortsTemp portsobj = new PortsTemp();
                portsobj = (PortsTemp) pierList1.get(ind);
                ArCreditHoldForm arForm = new ArCreditHoldForm();
                arForm.setDestination(portsobj.getPortname());
                session.setAttribute("Ardestination", arForm);
                path1 = "jsps/AccountsRecievable/ArCreditHold.jsp";
            } else if (search.equals("manifest")) {
                PortsTemp portsobj = new PortsTemp();
                portsobj = (PortsTemp) pierList1.get(ind);
                manifestForm manifestForm = new manifestForm();
                manifestForm.setDestination(portsobj.getPortname());
                session.setAttribute("manifestForm", manifestForm);
                path1 = "jsps/AccountsRecievable/Manifest.jsp";
            }

            if (session.getAttribute("pierList") != null) {
                session.removeAttribute("pierList");
            }

            request.setAttribute("path1", path1);
            request.setAttribute("buttonValue", "completed");

        } else {
            if (buttonValue.equals("search")) {
                List pierList = portDAO.findPierCode(pierCode, portName);
                session.setAttribute("pierList", pierList);
            }
        }
        return mapping.findForward("searchpiercode");
    }
}
