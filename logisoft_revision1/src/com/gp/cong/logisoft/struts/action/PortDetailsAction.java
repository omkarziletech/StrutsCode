/*
 * Generated by MyEclipse Struts
 * Template path: templates/java/JavaClass.vtl
 */
package com.gp.cong.logisoft.struts.action;

import java.util.List;

import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;
import javax.servlet.http.HttpSession;

import org.apache.struts.action.Action;
import org.apache.struts.action.ActionForm;
import org.apache.struts.action.ActionForward;
import org.apache.struts.action.ActionMapping;

import com.gp.cong.logisoft.beans.PortsBean;
import com.gp.cong.logisoft.domain.GenericCode;
import com.gp.cong.logisoft.domain.Ports;
import com.gp.cong.logisoft.domain.UnLocation;
import com.gp.cong.logisoft.hibernate.dao.GenericCodeDAO;
import com.gp.cong.logisoft.hibernate.dao.UnLocationDAO;
import com.gp.cong.logisoft.struts.form.PortDetailsForm;

/** 
 * MyEclipse Struts
 * Creation date: 12-24-2007
 * 
 * XDoclet definition:
 * @struts.action path="/portDetails" name="portDetailsForm" input="/jsps/datareference/portDetails.jsp" scope="request" validate="true"
 */
public class PortDetailsAction extends Action {
	/*
	 * Generated Methods
	 */

	/** 
	 * Method execute
	 * @param mapping
	 * @param form
	 * @param request
	 * @param response
	 * @return ActionForward
	 */
	public ActionForward execute(ActionMapping mapping, ActionForm form,
			HttpServletRequest request, HttpServletResponse response) throws Exception {
		PortDetailsForm portDetailsForm = (PortDetailsForm) form;// TODO Auto-generated method stub
		HttpSession session = ((HttpServletRequest)request).getSession();
		String forwardName="";
		String city=portDetailsForm.getCityName();
		String portname=portDetailsForm.getPortName();
		
		String buttonValue=portDetailsForm.getButtonValue();
		UnLocationDAO unLocationDAO=new UnLocationDAO();
		Ports portobj=null;
		
		GenericCode genObj=null;
		
		GenericCodeDAO  genDAO = new GenericCodeDAO();
		String type=portDetailsForm.getType();
	
		PortsBean portBean=new PortsBean();
		
		//portBean.setType(type);
		
		if(session.getAttribute("portobj")!=null)
		{
			portobj=(Ports)session.getAttribute("portobj");
		}else{
			portobj = new Ports();
		}
		if(session.getAttribute("portobject")!=null)
		{
			Ports ports=(Ports)session.getAttribute("portobject");
			portobj.setRateFromPierCode(ports);
			
			portobj.setRateControlNo(ports.getControlNo());
			portobj.setRatePortName(ports.getPortname());
		}
	
		
		if(portDetailsForm.getRegionCodes()!=null)
		{
			
			 genObj= (GenericCode)genDAO.findById(new Integer(portDetailsForm.getRegionCodes()));
		}
		
		if(portDetailsForm.getPortNameAbbrevation()!= null &&  portDetailsForm.getPortNameAbbrevation()!= "")
		{
			portobj.setDrABBR(portDetailsForm.getPortNameAbbrevation());
		}
			portobj.setShedulenumber(portDetailsForm.getPortCode());
			portobj.setPiercode(portDetailsForm.getPierCode());
			portobj.setEciportcode(portDetailsForm.getEciPortCode());
			portobj.setPortname(portDetailsForm.getPortName());
		
			portobj.setRegioncode(genObj);
			portobj.setIsocode(portDetailsForm.getCountryISO());
			
			if(portDetailsForm.getType()!=null && portDetailsForm.getType().equals("on"))
			{
				portobj.setType("K");
			}
			else
			{
				portobj.setType("D");
			}
		
			portobj.setControlNo(portDetailsForm.getControlNo());
			portobj.setPortCity(portDetailsForm.getPortCity());
			session.setAttribute("portobj", portobj);
			session.setAttribute("portBean", portBean);
			
		
			forwardName="portDetails";
			request.setAttribute("buttonValue",buttonValue);
		
		if(buttonValue.equals("searchcity")){
			List searchcity=unLocationDAO.findbyCity(portname);
			if(session.getAttribute("portobj")!=null){
				portobj=(Ports)session.getAttribute("portobj");
				
			}
			else{
				portobj=new Ports();
			}
			if(searchcity!=null && searchcity.size()>0){
				UnLocation unLoc=(UnLocation)searchcity.get(0);
				
				portobj.setUncitycode(unLoc);
				portobj.setPortname(portname);
				if(unLoc.getCountryId()!=null)
				{
					portobj.setCountryName(unLoc.getCountryId().getCodedesc());
				}
				
			}
			else{
				portobj.setUncitycode(new UnLocation());
				portobj.setPortname(portname);
				portobj.setCountryName("");
			}
			session.setAttribute("portobj",portobj);
			forwardName="portDetails";
			
		}
		
		
		return mapping.findForward(forwardName);
	}
}