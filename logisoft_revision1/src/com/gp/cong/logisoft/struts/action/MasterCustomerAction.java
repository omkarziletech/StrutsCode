/*
 * Generated by MyEclipse Struts
 * Template path: templates/java/JavaClass.vtl
 */
package com.gp.cong.logisoft.struts.action;

import java.util.ArrayList;
import java.util.List;

import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;
import javax.servlet.http.HttpSession;

import org.apache.struts.action.Action;
import org.apache.struts.action.ActionForm;
import org.apache.struts.action.ActionForward;
import org.apache.struts.action.ActionMapping;

import com.gp.cong.logisoft.domain.Customer;
import com.gp.cong.logisoft.struts.form.MasterCustomerForm;

/** 
 * MyEclipse Struts
 * Creation date: 03-11-2008
 * 
 * XDoclet definition:
 * @struts.action path="/masterCustomer" name="masterCustomerForm" input="/jsps/Tradingpartnermaintainance/MasterCustomer.jsp" scope="request" validate="true"
 */
public class MasterCustomerAction extends Action {
    /*
     * Generated Methods
     */

    /**
     * Method execute
     * @param mapping
     * @param form
     * @param request
     * @param response
     * @return ActionForward
     */
    public ActionForward execute(ActionMapping mapping, ActionForm form,
            HttpServletRequest request, HttpServletResponse response) {
        MasterCustomerForm masterCustomerForm = (MasterCustomerForm) form;// TODO Auto-generated method stub
        String buttonValue = masterCustomerForm.getButtonValue();
        HttpSession session = ((HttpServletRequest) request).getSession();
        String coName = masterCustomerForm.getCoName();
        String address1 = masterCustomerForm.getAddress1();
        String phone = masterCustomerForm.getPhone();
        String contactName = masterCustomerForm.getContactName();
        String zip = masterCustomerForm.getZip();
        String fax = masterCustomerForm.getFax();
        String email1 = masterCustomerForm.getEmail1();
        String email2 = masterCustomerForm.getEmail2();
        String extension = masterCustomerForm.getExtension();
        String accountType4 = masterCustomerForm.getAccountType4();
        if (request.getParameter("ind") != null) {
            if (session.getAttribute("customerbean") != null) {
                session.removeAttribute("customerbean");
            }
            List addressList = new ArrayList();
            int ind = Integer.parseInt(request.getParameter("ind"));
            addressList = (List) session.getAttribute("masteraddressList");
            Customer cust = (Customer) addressList.get(ind);
            session.setAttribute("adressCust", cust);
            String edit = "edit";
            request.setAttribute("edit", edit);
        } else {

            Customer accountdetails = null;

            if (session.getAttribute("customer") != null) {
                accountdetails = (Customer) session.getAttribute("customer");
            } else {
                accountdetails = new Customer();
            }

            accountdetails.setCoName(coName);
            accountdetails.setAddress1(address1);
            accountdetails.setPhone(phone);
            accountdetails.setContactName(contactName);
            accountdetails.setZip(zip);
            accountdetails.setFax(fax);
            accountdetails.setEmail1(email1);
            accountdetails.setEmail2(email2);
            accountdetails.setCity2(masterCustomerForm.getCity());

            accountdetails.setExtension(extension);

            session.setAttribute("customer", accountdetails);
            List addressList = new ArrayList();
            int index = 0;
            if (buttonValue.equals("add")) {
                if (session.getAttribute("masteraddressList") != null) {
                    addressList = (List) session.getAttribute("masteraddressList");
                    for (int i = 0; i < addressList.size(); i++) {
                        Customer cust = (Customer) addressList.get(i);
                        if (cust.getIndex() != null) {
                            if (cust.getIndex() > index) {
                                index = cust.getIndex();
                            }
                        }
                    }
                    index++;
                } else {
                    addressList = new ArrayList();
                    index++;
                }
                accountdetails.setIndex(index);
                addressList.add(accountdetails);
                session.setAttribute("masteraddressList", addressList);


                if (session.getAttribute("customer") != null) {
                    session.removeAttribute("customer");
                }


            }
        }
        request.setAttribute("buttonValue", buttonValue);
        return mapping.findForward("addcustomer");
    }
}	
