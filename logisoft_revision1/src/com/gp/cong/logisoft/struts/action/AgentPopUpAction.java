/*
 * Generated by MyEclipse Struts
 * Template path: templates/java/JavaClass.vtl
 */
package com.gp.cong.logisoft.struts.action;

import java.util.ArrayList;
import java.util.List;
import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;
import javax.servlet.http.HttpSession;
import org.apache.struts.action.Action;
import org.apache.struts.action.ActionForm;
import org.apache.struts.action.ActionForward;
import org.apache.struts.action.ActionMapping;
import com.gp.cong.logisoft.beans.customerBean;
import com.gp.cong.logisoft.domain.AgencyInfo;
import com.gp.cong.logisoft.domain.CustomerTemp;
import com.gp.cong.logisoft.domain.GeneralInformation;
import com.gp.cong.logisoft.domain.TradingPartner;
import com.gp.cong.logisoft.hibernate.dao.CustomerDAO;
import com.gp.cong.logisoft.struts.form.AgentPopUpForm;

/** 
 * MyEclipse Struts
 * Creation date: 04-15-2008
 * 
 * XDoclet definition:
 * @struts.action path="/agentPopUp" name="agentPopUpForm" input="/jsps/datareference/AgentPopUp.jsp" scope="request" validate="true"
 */
public class AgentPopUpAction extends Action {
    /*
     * Generated Methods
     */

    /**
     * Method execute
     * @param mapping
     * @param form
     * @param request
     * @param response
     * @return ActionForward
     */
    public ActionForward execute(ActionMapping mapping, ActionForm form,
            HttpServletRequest request, HttpServletResponse response) throws Exception {

        AgentPopUpForm agentPopUpForm = (AgentPopUpForm) form;// TODO Auto-generated method stub
        HttpSession session = ((HttpServletRequest) request).getSession();
        String accountNo = agentPopUpForm.getAccountNo();
        String accountName = agentPopUpForm.getAccountName();
        String accountType = agentPopUpForm.getAccountType();
        String buttonValue = agentPopUpForm.getButtonValue();

        customerBean customerbean = new customerBean();//creating object for customer bean
        CustomerDAO customerDAO = new CustomerDAO();
        TradingPartner tradingpartner = new TradingPartner();
        String search = "";
        String nameStr = "";
        String path1 = "";
        GeneralInformation generalInfo = new GeneralInformation();
        List nList = new ArrayList();
        CustomerTemp cust = new CustomerTemp();
        if (request.getParameter("index") != null) {
            int ind = Integer.parseInt(request.getParameter("index"));
            if (session.getAttribute("tradingpartner") != null) {
                nList = (List) session.getAttribute("tradingpartner");
            }


            List customerList1 = (List) session.getAttribute("agentList");
            if (session.getAttribute("search1") != null) {
                search = (String) session.getAttribute("search1");
            }
            if (search.equals("lcl")) {
                AgencyInfo agencyObj = null;
                if (session.getAttribute("agencyObjlcl") == null) {
                    agencyObj = new AgencyInfo();
                } else {
                    agencyObj = (AgencyInfo) session.getAttribute("agencyObjlcl");
                }
                path1 = "jsps/datareference/agencyInfo.jsp";
                tradingpartner = (TradingPartner) customerList1.get(ind);
                agencyObj.setAgentId(tradingpartner);
                session.setAttribute("agencyObjlcl", agencyObj);
            } else if (search.equals("fcl")) {
                AgencyInfo agencyObj = null;
                if (session.getAttribute("agencyObjfcl") == null) {
                    agencyObj = new AgencyInfo();
                } else {
                    agencyObj = (AgencyInfo) session.getAttribute("agencyObjfcl");
                }
                path1 = "jsps/datareference/agencyInfoForFcl.jsp";
                tradingpartner = (TradingPartner) customerList1.get(ind);
                agencyObj.setAgentId(tradingpartner);
                session.setAttribute("agencyObjfcl", agencyObj);
            } else if (search.equals("air")) {
                AgencyInfo agencyObj = null;
                if (session.getAttribute("agencyObjair") == null) {
                    agencyObj = new AgencyInfo();
                } else {
                    agencyObj = (AgencyInfo) session.getAttribute("agencyObjair");
                }
                path1 = "jsps/datareference/agencyInfoForAir.jsp";
                tradingpartner = (TradingPartner) customerList1.get(ind);
                agencyObj.setAgentId(tradingpartner);
                session.setAttribute("agencyObjair", agencyObj);
            } else if (search.equals("import")) {
                AgencyInfo agencyObj = null;
                if (session.getAttribute("agencyObjimport") == null) {
                    agencyObj = new AgencyInfo();
                } else {
                    agencyObj = (AgencyInfo) session.getAttribute("agencyObjimport");
                }
                path1 = "jsps/datareference/agencyInfoForImp.jsp";
                tradingpartner = (TradingPartner) customerList1.get(ind);
                agencyObj.setAgentId(tradingpartner);
                session.setAttribute("agencyObjimport", agencyObj);
            } else if (search.equals("searchcust") || search.equals("mastersearchcust")) {

                if (session.getAttribute("customerbean") == null) {
                    customerbean = new customerBean();
                } else {
                    customerbean = (customerBean) session.getAttribute("customerbean");
                }
                if (search.equals("searchcust")) {
                    path1 = "jsps/Tradingpartnermaintainance/SearchCustomer.jsp";
                } else {
                    path1 = "jsps/Tradingpartnermaintainance/MasterSearchCustomer.jsp";
                }
                cust = (CustomerTemp) customerList1.get(ind);
                customerbean.setAccountNo(cust.getAccountNo());
                customerbean.setName(cust.getAccountName());


                String acctType = (String) cust.getAccountType();
                if (acctType != null) {

                    for (int i = 0; i < acctType.length(); i++) {
                        if (acctType.length() > i) {
                            if (acctType.charAt(i) != ',' && acctType.charAt(i) == 'S') {
                                customerbean.setAccountType1("on");
                            }

                            if (acctType.charAt(i) != ',' && acctType.charAt(i) == 'F') {
                                customerbean.setAccountType2("on");
                            }
                            if (acctType.charAt(i) != ',' && acctType.charAt(i) == 'N') {
                                customerbean.setAccountType3("on");
                            }
                            if (acctType.charAt(i) != ',' && acctType.charAt(i) == 'C') {
                                customerbean.setAccountType4("on");
                            }
                            if (acctType.length() > (i + 1)) {
                                if (acctType.charAt(i) != ',' && acctType.charAt(i) == 'S' && acctType.charAt(i + 1) == 'S') {
                                    customerbean.setAccountType5("on");
                                }
                            }
                            if (acctType.charAt(i) != ',' && acctType.charAt(i) == 'T') {
                                customerbean.setAccountType6("on");
                            }
                            if (acctType.charAt(i) != ',' && acctType.charAt(i) == 'A') {
                                customerbean.setAccountType7("on");
                            }
                            if (acctType.charAt(i) != ',' && acctType.charAt(i) == 'I') {
                                customerbean.setAccountType8("on");
                            }
                            if (acctType.charAt(i) != ',' && acctType.charAt(i) == 'E') {
                                customerbean.setAccountType9("on");
                            }
                            if (acctType.charAt(i) != ',' && acctType.charAt(i) == 'V') {
                                customerbean.setAccountType10("on");
                            }
                            if (acctType.charAt(i) != ',' && acctType.charAt(i) == 'O') {
                                customerbean.setAccountType11("on");
                            }
                        }
                    }
                }
                session.setAttribute("customerbean", customerbean);
            }
            request.setAttribute("path1", path1);
            request.setAttribute("buttonValue", "completed");
        } else {
            if (buttonValue.equals("search")) {
                List customerList = customerDAO.findForAgenttNoTrading(accountNo, accountName);
                session.setAttribute("agentList", customerList);
            }
        }
        return mapping.findForward("customer");
    }
}