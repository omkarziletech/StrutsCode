/*
 * Generated by MyEclipse Struts
 * Template path: templates/java/JavaClass.vtl
 */
package com.gp.cong.logisoft.struts.action;

import com.gp.cong.common.CommonConstants;
import com.gp.cong.common.CommonUtils;

import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;
import javax.servlet.http.HttpSession;

import org.apache.struts.action.Action;
import org.apache.struts.action.ActionForm;
import org.apache.struts.action.ActionForward;
import org.apache.struts.action.ActionMapping;


import com.gp.cong.logisoft.domain.User;
import com.gp.cong.logisoft.struts.form.UserManagementForm;
import com.gp.cong.logisoft.beans.SearchUserBean;
import com.gp.cong.logisoft.hibernate.dao.UserDAO;
import com.gp.cong.logisoft.util.DBUtil;

/** 
 * MyEclipse Struts
 * Creation date: 10-29-2007
 * 
 * XDoclet definition:
 * @struts.action path="/userManagement" name="userManagementForm" input="/form/UserManagement.jsp" scope="request" validate="true"
 */
public class UserManagementAction extends Action {
    /*
     * Generated Methods
     */

    /**
     * Method execute
     * @param mapping
     * @param form
     * @param request
     * @param response
     * @return ActionForward
     */
    public ActionForward execute(ActionMapping mapping, ActionForm form,
            HttpServletRequest request, HttpServletResponse response) throws Exception {
        //forward name
        final String EDIT_USER_PAGE = "edituser";
        final String SEARCH_USER_PAGE = "searchuser";
        //button action
        final String MORE_INFO = "moreinfo";
        final String SEARCH = "search";
        final String BUTTON_VALUE = "buttonValue";
        //request parameter
        final String USER_LIST = "userList";
        final String USER = "user";
        final String USER_BEAN = "suBean";
        final String MATCH_ONLY = "match";
        final String STARTS_WITH = "starts";
        final String VIEW = "view";
        final String VIEW_MODE_READONLY = "3";
        final String VIEW_MODE_EDIT = "1";
        final String DATE_FORMAT = "MM/dd/yyyy";
        UserManagementForm userManagementForm = (UserManagementForm) form;// TODO Auto-generated method stub\
        String loginName = userManagementForm.getLoginName();
        HttpSession session = request.getSession();
        String userCreatedDate = userManagementForm.getTxtCal();
        String firstName = userManagementForm.getFirstName();
        String lastName = userManagementForm.getLastName();
        String roleName = userManagementForm.getRoleName();
        String status = userManagementForm.getUserStatus();
        String limit = CommonUtils.isNotEmpty(userManagementForm.getLimit()) ? userManagementForm.getLimit() : "100";
        String match = userManagementForm.getMatch();
        String buttonValue = userManagementForm.getButtonValue();
        String forwardName = SEARCH_USER_PAGE;
        UserDAO userDAO = new UserDAO();
        User user = null;
        SearchUserBean suBean = new SearchUserBean();
        suBean.setLoginName(loginName);
        suBean.setTxtCal(userCreatedDate);
        suBean.setFirstName(firstName);
        suBean.setLastName(lastName);
        suBean.setRoleName(roleName);
        suBean.setUserStatus(status);
        suBean.setLimit(limit);
        suBean.setSortBy(userManagementForm.getSortBy());
        suBean.setColumnName(userManagementForm.getColumnName());

        suBean.setMatch(!CommonUtils.isEmpty(match) ? match : STARTS_WITH);
        session.setAttribute("suBean", suBean);
//        if (SEARCH.equals(buttonValue)) {
//            Date date = null;
//            if (CommonUtils.isNotEmpty(userCreatedDate)) {
//                date = DateUtils.parseDate(userCreatedDate, DATE_FORMAT);
//            }
//            if (match.equals(MATCH_ONLY)) {
//                List userList = userDAO.findForManagement(loginName, date, firstName, lastName, roleName);
//                session.setAttribute(USER_LIST, userList);
//            } else if (match.equals(STARTS_WITH)) {
//                List userList = userDAO.findForManagementaction(loginName, date, firstName, lastName, roleName);
//                session.setAttribute(USER_LIST, userList);
//            }
//            forwardName = SEARCH_USER_PAGE;
//        } else

        if (CommonConstants.EDIT_ACTION.equals(buttonValue)) {
            forwardName = EDIT_USER_PAGE;
            user = userDAO.findById(userManagementForm.getParam());
            session.setAttribute(USER, user);
            request.setAttribute("agentInformation", new UserDAO().findByUserAgentProperty("userId.userId", user.getUserId()));
            request.setAttribute("match", match);
            session.setAttribute(VIEW, VIEW_MODE_EDIT);
        } else if (MORE_INFO.equals(buttonValue)) {
            user = userDAO.findById(userManagementForm.getParam());
            request.setAttribute(VIEW, VIEW_MODE_READONLY);
            session.setAttribute(USER, user);
            forwardName = EDIT_USER_PAGE;
        } else {
            DBUtil dbUtil = new DBUtil();
            request.setAttribute("userList", new UserDAO().getUserList(suBean));
            request.setAttribute("statuslist", dbUtil.getStatusList());
            request.setAttribute("rolelist", dbUtil.getRoleList());
            forwardName = SEARCH_USER_PAGE;
            //session.setAttribute(USER_LIST,userDAO.findAllUsers());
        }
        request.setAttribute(BUTTON_VALUE, buttonValue);
        request.setAttribute("palletList", userDAO.getPalletList());
        request.setAttribute("packageList", userDAO.getPackageList());
        return mapping.findForward(forwardName);
    }
}
