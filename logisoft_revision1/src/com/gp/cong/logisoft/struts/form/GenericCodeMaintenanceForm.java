/*
 * Generated by MyEclipse Struts
 * Template path: templates/java/JavaClass.vtl
 */
package com.gp.cong.logisoft.struts.form;

import java.util.List;
import javax.servlet.http.HttpServletRequest;

import org.apache.struts.action.ActionError;
import org.apache.struts.action.ActionErrors;
import org.apache.struts.action.ActionForm;
import org.apache.struts.action.ActionMapping;

import com.gp.cong.logisoft.domain.GenericCode;
import com.gp.cong.logisoft.domain.Genericcodelabels;
import com.gp.cong.logisoft.hibernate.dao.GenericCodeDAO;
import com.gp.cong.logisoft.hibernate.dao.GenericcodelabelsDAO;
import java.util.Date;

import org.apache.log4j.Logger;

/**
 * MyEclipse Struts
 * Creation date: 11-08-2004
 *
 * XDoclet definition:
 * @struts.form name="GenericCodeMaintenanceForm"
 */
public class GenericCodeMaintenanceForm extends ActionForm {

    private static final Logger log = Logger.getLogger(GenericCodeMaintenanceForm.class);
    /*
     * Generated Methods
     */
    /**
     * Method validate
     * @param mapping
     * @param request
     * @return ActionErrors
     */
    private String codeTypeId;
    private String genericCodeId;
    private String buttonValue;
    private String match;

    public String getMatch() {
	return match;
    }

    public void setMatch(String match) {
	this.match = match;
    }

    public String getButtonValue() {
	return buttonValue;
    }

    public void setButtonValue(String buttonValue) {
	this.buttonValue = buttonValue;
    }

    public String getCodeTypeId() {
	return codeTypeId;
    }

    public String getGenericCodeId() {
	return genericCodeId;
    }

    public void setGenericCodeId(String genericCodeId) {
	this.genericCodeId = genericCodeId;
    }

    public void setCodeTypeId(String codeTypeId) {
	this.codeTypeId = codeTypeId;
    }

    public ActionErrors validate(ActionMapping mapping,
	    HttpServletRequest request) {
	GenericCode gc = new GenericCode();
	GenericCodeDAO gcdao = new GenericCodeDAO();
	Genericcodelabels gcl = new Genericcodelabels();
	GenericcodelabelsDAO gcldao = new GenericcodelabelsDAO();
	if (request.getParameter("paramid") != null) {
	    try {
		int id = Integer.parseInt(request.getParameter("paramid"));
		gc = gcdao.findById(id);
		gcl.setCodetypeid(gc.getCodetypeid());
		List lst = gcldao.findByExample(gcl);
		if (lst.size() <= 0) {
		    ActionErrors ae = new ActionErrors();
		    ae.add("error", new ActionError("codelabel.error"));
		    return ae;
		}
	    } catch (Exception ex) {
		log.info("Validate() in GenericCodeMaintenanceForm failed on " + new Date(),ex);
	    }
	} else if (request.getParameter("param") != null) {
	    try {
		int id = Integer.parseInt(request.getParameter("param"));
		gc = gcdao.findById(id);
		gcl.setCodetypeid(gc.getCodetypeid());
		List lst = gcldao.findByExample(gcl);
		if (lst.size() <= 0) {
		    ActionErrors ae = new ActionErrors();
		    ae.add("error", new ActionError("codelabel.error"));
		    return ae;
		}
	    } catch (Exception ex) {
		log.info("Validate() in GenericCodeMaintenanceForm failed on " + new Date(),ex);
	    }
	} else {

	    if ("addnew".equals(buttonValue)) {
		ActionErrors ae = new ActionErrors();
		if (!(codeTypeId.equals("0"))) {
		    try {
			gcl.setCodetypeid(Integer.parseInt(codeTypeId));
			List list = gcldao.findByExample(gcl);
			if (list.size() == 0) {
			    ae.add("myerror", new ActionError("code.error"));
			}
		    } catch (Exception ex) {
			log.info("Validate() in GenericCodeMaintenanceForm failed on " + new Date(),ex);
		    }
		}
		return ae;
	    }
	}

	return null;
    }

    /**
     * Method reset
     * @param mapping
     * @param request
     */
    public void reset(ActionMapping mapping, HttpServletRequest request) {
	// TODO Auto-generated method stub
    }
}