package com.gp.cong.logisoft.domain;

import com.gp.cong.common.CommonUtils;
import java.util.Date;

import com.gp.cong.common.DateUtils;
import com.gp.cong.logisoft.struts.form.NotesForm;
import java.util.Comparator;

/**
 * Notes generated by MyEclipse - Hibernate Tools Creates by Gayatri 1/6/2009..
 */
public class Notes implements java.io.Serializable, Comparator<Notes> {

    // Fields    
    private Integer id;
    private String moduleId;
    private String moduleRefId;
    private Date updateDate;
    private String noteType;
    private String noteDesc;
    private String updatedBy;
    private String itemName;
    private String voidNote = "N";
    private Date followupDate;
    private String status;
    private String uniqueId;
    private boolean removed;
    private boolean printOnReport;
    private Long tpId;
    // Constructors

    /**
     * default constructor
     */
    public Notes() {
    }

    /**
     * full constructor
     */
    public Notes(String moduleId, Date updateDate, String noteTpye, String noteDesc, String updatedBy) {
        this.moduleId = moduleId;
        this.updateDate = updateDate;
        this.noteType = noteTpye;
        this.noteDesc = noteDesc;
        this.updatedBy = updatedBy;
    }

    public Notes(String moduleId, String moduleRefId, Date updateDate,
            String noteType, String noteDesc, String updatedBy) {
        super();
        this.moduleId = moduleId;
        this.moduleRefId = moduleRefId;
        this.updateDate = updateDate;
        this.noteType = noteType;
        this.noteDesc = noteDesc;
        this.updatedBy = updatedBy;
        this.followupDate = updateDate;
    }

    public Notes(NotesForm notesForm) throws Exception {
        if (notesForm.getNoteId() != null && !notesForm.getNoteId().equals("")) {
            id = new Integer(notesForm.getNoteId());
        }
        if (CommonUtils.isNotEmpty(notesForm.getItemName())) {
            itemName = notesForm.getItemName();
        }
        DateUtils dateUtils = new DateUtils();
        moduleId = notesForm.getModuleId();
        updateDate = new Date();
        noteType = "manual";
        noteDesc = notesForm.getNotes();
        moduleRefId = notesForm.getModuleRefId();
        printOnReport = notesForm.isPrintOnReport();
        if (null != notesForm.getFollowupDate() && !notesForm.getFollowupDate().equals("")) {
            followupDate = dateUtils.parseToDateTime(notesForm.getFollowupDate());
        }

    }

    // Property accessors
    public Integer getId() {
        return this.id;
    }

    public void setId(Integer id) {
        this.id = id;
    }

    public String getModuleId() {
        return this.moduleId;
    }

    public void setModuleId(String moduleId) {
        this.moduleId = moduleId;
    }

    public Date getUpdateDate() {
        return this.updateDate;
    }

    public void setUpdateDate(Date updateDate) {
        this.updateDate = updateDate;
    }

    public String getNoteTpye() {
        return this.noteType;
    }

    public void setNoteTpye(String noteTpye) {
        this.noteType = noteTpye;
    }

    public String getNoteDesc() {
        return this.noteDesc;
    }

    public void setNoteDesc(String noteDesc) {
        this.noteDesc = noteDesc;
    }

    public String getUpdatedBy() {
        return this.updatedBy;
    }

    public void setUpdatedBy(String updatedBy) {
        this.updatedBy = updatedBy;
    }

    public String getItemName() {
        return itemName;
    }

    public void setItemName(String itemName) {
        this.itemName = itemName;
    }

    public String getModuleRefId() {
        return moduleRefId;
    }

    public void setModuleRefId(String moduleRefId) {
        this.moduleRefId = moduleRefId;
    }

    public String getNoteType() {
        return noteType;
    }

    public void setNoteType(String noteType) {
        this.noteType = noteType;
    }

    public String getVoidNote() {
        return voidNote;
    }

    public void setVoidNote(String voidNote) {
        this.voidNote = voidNote;
    }

    public Date getFollowupDate() {
        return followupDate;
    }

    public void setFollowupDate(Date followupDate) {
        this.followupDate = followupDate;
    }

    public String getStatus() {
        return status;
    }

    public void setStatus(String status) {
        this.status = status;
    }

    public String getUniqueId() {
        return uniqueId;
    }

    public void setUniqueId(String uniqueId) {
        this.uniqueId = uniqueId;
    }

    public boolean isRemoved() {
        return removed;
    }

    public void setRemoved(boolean removed) {
        this.removed = removed;
    }

    public boolean isPrintOnReport() {
        return printOnReport;
    }

    public void setPrintOnReport(boolean printOnReport) {
        this.printOnReport = printOnReport;
    }

    public Long getTpId() {
        return tpId;
    }

    public void setTpId(Long tpId) {
        this.tpId = tpId;
    }

    public int compare(Notes o1, Notes o2) {
        if (null == o2.getUpdateDate() || null == o1.getUpdateDate()) {
            return 0;
        } else {
            return o2.getUpdateDate().compareTo(o1.getUpdateDate());
        }
    }
}