
package com.logiware.ims;

import java.net.MalformedURLException;
import java.net.URL;
import java.util.Date;
import javax.xml.namespace.QName;
import javax.xml.ws.Service;
import javax.xml.ws.WebEndpoint;
import javax.xml.ws.WebServiceClient;
import javax.xml.ws.WebServiceException;
import javax.xml.ws.WebServiceFeature;

import org.apache.log4j.Logger;


/**
 * This class was generated by the JAX-WS RI.
 * JAX-WS RI 2.2-hudson-752-
 * Generated source version: 2.2
 * 
 */
@WebServiceClient(name = "IMSServiceService", targetNamespace = "https://apps.imstransport.com/imsservice.php", wsdlLocation = "https://apps.imstransport.com/imsservice.php?wsdl")
public class IMSServiceService
    extends Service
{
    private static final Logger log = Logger.getLogger(IMSServiceService.class);

    private final static URL IMSSERVICESERVICE_WSDL_LOCATION;
    private final static WebServiceException IMSSERVICESERVICE_EXCEPTION;
    private final static QName IMSSERVICESERVICE_QNAME = new QName("https://apps.imstransport.com/imsservice.php", "IMSServiceService");

    static {
        URL url = null;
        WebServiceException e = null;
        try {
            url = new URL("https://apps.imstransport.com/imsservice.php?wsdl");
        } catch (MalformedURLException ex) {
            e = new WebServiceException(ex);
            log.info("onOpenDocument failed on " + new Date(),e);
        }
        IMSSERVICESERVICE_WSDL_LOCATION = url;
        IMSSERVICESERVICE_EXCEPTION = e;
    }

    public IMSServiceService() {
        super(__getWsdlLocation(), IMSSERVICESERVICE_QNAME);
    }

    /*public IMSServiceService(WebServiceFeature... features) {
        super(__getWsdlLocation(), IMSSERVICESERVICE_QNAME, features);
    }*/

    public IMSServiceService(URL wsdlLocation) {
        super(wsdlLocation, IMSSERVICESERVICE_QNAME);
    }

    /*public IMSServiceService(URL wsdlLocation, WebServiceFeature... features) {
        super(wsdlLocation, IMSSERVICESERVICE_QNAME, features);
    }*/

    public IMSServiceService(URL wsdlLocation, QName serviceName) {
        super(wsdlLocation, serviceName);
    }

    /*public IMSServiceService(URL wsdlLocation, QName serviceName, WebServiceFeature... features) {
        super(wsdlLocation, serviceName, features);
    }*/

    /**
     * 
     * @return
     *     returns IMSServicePort
     */
    @WebEndpoint(name = "IMSServicePort")
    public IMSServicePort getIMSServicePort() {
        return super.getPort(new QName("https://apps.imstransport.com/imsservice.php", "IMSServicePort"), IMSServicePort.class);
    }

    /**
     * 
     * @param features
     *     A list of {@link javax.xml.ws.WebServiceFeature} to configure on the proxy.  Supported features not in the <code>features</code> parameter will have their default values.
     * @return
     *     returns IMSServicePort
     */
    @WebEndpoint(name = "IMSServicePort")
    public IMSServicePort getIMSServicePort(WebServiceFeature... features) {
        return super.getPort(new QName("https://apps.imstransport.com/imsservice.php", "IMSServicePort"), IMSServicePort.class, features);
    }

    private static URL __getWsdlLocation() {
        if (IMSSERVICESERVICE_EXCEPTION!= null) {
            throw IMSSERVICESERVICE_EXCEPTION;
        }
        return IMSSERVICESERVICE_WSDL_LOCATION;
    }

}
